{"version":3,"sources":["assets/imgs/wood.jpg","Apps/APIS.js","Apps/constants/action-types.js","Apps/actions/ActionApp.js","Apps/actions/Notification.js","Apps/sagas/APICalling.js","Apps/actions/ActionBoxes.js","Apps/components/QuoteRules.js","Apps/sagas/index.js","Apps/reducers/NotificationReducer.js","Apps/reducers/QuoteReducer.js","Apps/reducers/AppReducer.js","Apps/reducers/BoxReducer.js","Apps/reducers/DataReducer.js","Apps/reducers/index.js","Apps/Store.js","Apps/components/Header.js","Apps/components/Layout.js","Apps/actions/ActionAPIS.js","Apps/actions/ActionQuote.js","Apps/components/LayoutSimple.js","Apps/components/Pages/SelfService.js","Apps/components/Pages/QuoteSelection.js","Apps/components/Pages/ContactPage.js","Apps/components/Pages/404.js","Apps/history.js","Apps/Routes.js","Apps/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SITE_URL","window","location","href","split","AJAX_URL","APIS","PLUGIN_ASSET_URL","AJAX_GET_ALL_BOXES","AJAX_SUBMIT_CONTACT_DATA","SET_QUOTE","FETCH_BOX_DATA","SUBMIT_CONTACT_DATA","isQuotActive","type","payload","is_quote_selected","arguments","length","undefined","setSpecialCase","reason","is_special_cases","reason_special_cases","redirect_to_contact_page","RedirectTo","path","setNewHistory","route","setHistory","index","history","console","log","removeSpecialCase","LoadingStart","LoadingEnd","setGlobalData","data","setScreenshotFile","file","sendNotification","message","have","countdown","discardNotification","fetch__GetAllBoxes","post__ContactData","fetchAllBoxes","axios","get","headers","Access-Control-Allow-Origin","Content-Type","then","response","success","catch","err","submitContactData","post","mode","withCredentials","credentials","regenerator_default","a","wrap","_context","prev","next","put","call","sent","abrupt","stop","_marked","result","_context2","_marked2","setBoxData","arrData","generateRack","item","depth","width","height","enable","status","getClosestMinimumSizeRack","racks","equals_or_less","availableRacks","map","rack","push","l","d","minCloseRackDepth","minCloseRackLength","tempDepth","tempLength","_ref","_ref2","checkAllWalls","b","c1","c2","prevC1","prevC2","actions","haveSingleRack","haveDoubleRack","parseInt","val","available_space","Object","objectSpread","haveActions","getScreenshotOfElement","element","posX","posY","callback","html2canvas","onrendered","canvas","imageData","getContext","getImageData","outputCanvas","document","createElement","outputContext","idata","createImageData","set","putImageData","toDataURL","replace","useCORS","taintTest","allowTaint","scrollY","dataURLtoFile","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","FETCH_BOX_LIST_ASYNC","SUBMIT_CONTACT_ASYNC","allSagas","finalData","response_data","sagas_marked","sagas_marked2","_context3","t0","all","takeLatest","t1","t2","t3","_marked3","initialState","quoteInitialState","wall_a","wall_b","wall_c1","wall_c2","appInitialState","currentHistoryIndex","loading","below90cm","redirectToPath","boxes","screenshot","allReducers","notification","state","quote","app","box","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","connect","dispatch","props","react_default","className","target","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","to","onSubmit","e","preventDefault","placeholder","react","components_Header","style","flexDirection","display","justifyContent","alignItems","padding","children","getNotificationTitle","onClick","setQuote","clearResult","styles","fullScreen","backgroundColor","position","zIndex","top","left","Layout","redirectTo","getNotification","_this","goForCustomQuery","bind","assertThisInitialized","redirectToHome","setState","redirectToBack","newIndex","newHistory","slice","fullScreenLoader","react_loader_spinner_default","color","this","clearQuote","react_router","index_es","icon","faHome","faBackward","maxWidth","marginTop","Component","getOffset","el","elComputed","getComputedStyle","_x","_y","isNaN","offsetLeft","offsetTop","scrollTop","offsetParent","right","bottom","setLeft","px","countWidth","countHeight","el_Offset","extraWidth","extraHeight","str","setBottom","setRight","setRightInner","setTop","setHeight","setWidth","box_styles","backgroundSize","border","SelfService","redirectToHomePage","bool","dom_omgArea","dom_omgContainer","dom_omgContainerPadding","dom_wall_top","dom_wall_left","dom_wall_right","dom_wall_bottom_left","dom_wall_bottom_right","dom_input_wall_a","dom_input_wall_b","dom_input_wall_c1","dom_input_wall_c2","dom_box1_dom","dom_box2_dom","screenHeight","screenWidth","currentTab","boxExtraZoom","totalBoxes","isBoxDirectionLeft","input_wall_a","input_wall_b","input_wall_c1","input_wall_c2","containerPadding","normalLength","thickness","boxAHeight","boxAWidth","boxALeft","boxATop","boxBHeight","boxBWidth","boxBLeft","boxBTop","perceptualBoxAHeight","perceptualBoxAWidth","perceptualBoxBHeight","perceptualBoxBWidth","perceptualWallThickness","perceptualContainerPadding","perceptualMaxLength","perceptualWallA","perceptualWallB","perceptualWallC1","perceptualWallC2","do_WallRuleUpdate","do_InitializeDoms","do_DrawBoxEdges","do_PerseptualCalculation","do_SmartPlaceBoxes","do_RefreshScreenLengths","do_SetArgs","do_GetRequireBoxesAndDirection","do_redirectToContact","alreadyLoaded","dragBox1","dragBox2","dragging","allActions","onChangeWallA","value","onChangeWallB","onChangeWallC1","onChangeWallC2","onBlurWallA","refreshScreenLengths","onBlurWallB","onBlurWallC1","onBlurWallC2","onScreenScroll","redirectToContactPage","pathname","redirect_back_path","consoleApp","label","consoleTest","checkPerceptualWallThickness","checkPerceptualPadding","quickSetup","initializeDoms","setArgs","rules","wallsRulesCheck","action","getRequireBoxesAndDirection","perspectiveCalculation","drawBoxEdges","smartPlaceBoxes","changeState","querySelector","dom_box_doms","querySelectorAll","addEventListener","onMouseMove","onMouseUp","responseRules","totalRacks","ratio_WallA_WallB","ratio_screen_height_width","actualThickness","actualPadding","boxA","boxB","boxDirectionLeft","searchMaxHeight","searchMaxWidth","containerOffset","wall_fixed_height","offsetWallTop","offsetWallLeft","offsetWallBottomLeft","offsetWallRight","containerCurrentOffset","containerActualOffset","box1_offset","box2_offset","perceptiveBoxAWidth","perceptiveBoxAHeight","onChangeWallACalculateC1AndC2","available_space_for_c1_and_c2","onChangeWallC1CalculateC1AndC2","int_WallC1","int_WallC2","onChangeWallsCalculateC1AndC2","updateState","innerHeight","innerWidth","onSubmitEntry","appendChild","onMouseDown_Box1","cursorPosition","pageX","pageY","button","pos","relativeDistance","x","y","stopPropagation","onMouseDown_Box2","haveBoxCollision","box_type","currentCursorPosition","bottom_below_top","bottom_below_bottom","top_above_top","top_above_bottom","left_lefted_left","left_righted_left","left_lefted_right","right_righted_right","right_lefted_right","right_righted_left","have_collision","container_offset","box1_future_offset","box2_current_offset","box2_future_offset","box1_current_offset","onDragBox2","onDragBox1","box_pos_data","getRenderBoxes","onMouseDown","getRenderData","onChange","onBlur","min","max","lib_default","showInkBar","onChangeTab","selectedTabKey","items","getTabs","getMesurementInfo","scope","getAvailableBoxByIndex","changeBoxASize","event","options","selectedIndex","selectedBox","changeBoxSize","changeBoxBSize","box_label","stateBoxes","refine_box_data","final_data","onClick_increaseBoxA_width","available_boxes","current_box","nextAvailableBox","onClick_increaseBoxA_height","onClick_decreaseBoxA_width","i","onClick_decreaseBoxA_height","onClick_increaseBoxB_width","onClick_increaseBoxB_height","onClick_decreaseBoxB_width","onClick_decreaseBoxB_height","getBoxControls","textAlign","index1","selectedBoxA","isSelected","selected","disabled","role","selectedBoxB","getInstructionInfo","getBoxAvailibilityInfo","key","aria-disabled","name","content","president","title","getContent","tabClassName","panelClassName","_this2","nextProps","nextContext","_this3","removeEventListener","getTrimmedString","trim","QuoteSelection","redirect_quotation","redirect_contact","onClickSubmit","ContactPage","redirect_to","full_name","email","subject","onSubmitForm","test","String","toLowerCase","haveSpecialCase","contact_details","special","onClickBack","lastRedirectLocation","hasOwnProperty","specialCases","src","htmlFor","aria-describedby","HomePage","createMemoryHistory","Routes","LayoutSimple","exact","component","Page404","main","es","Routes_Routes","Boolean","hostname","ReactDOM","render","Apps_main","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7976e289.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wood.702fc426.jpg\";","\n//Check production or development....\nexport const is_production = true;\n\n\n\n\n\nlet currentURL = \"\";\nlet arrResult = null;\n\nif(!is_production){\n\tcurrentURL = \"http://localhost/wp_cybetiq/self-quotation-system/wp-admin/admin.php?page=csq-main\";\n\tarrResult = currentURL.split(\"wp-admin\");\n}else{\n\tcurrentURL = window.location.href;\n\tarrResult = currentURL.split(\"wp-content/plugins\");\n}\n\nlet SITE_URL = arrResult[0];\nlet AJAX_URL = SITE_URL + \"wp-admin/admin-ajax.php\";\n\nlet AJAX_GET_ALL_BOXES = AJAX_URL+\"?action=getAllBoxes\";\nlet AJAX_SUBMIT_CONTACT_DATA = AJAX_URL+\"?action=postSubmitContact\";\n\nlet PLUGIN_ASSET_URL = SITE_URL+\"wp-content/plugins/cybetiq-self-quotation-system/init-app/resources/\";\n\nexport default {\n    PLUGIN_ASSET_URL,\n    SITE_URL,\n    AJAX_URL,\n    AJAX_GET_ALL_BOXES,\n    AJAX_SUBMIT_CONTACT_DATA\n};\n","export const LOADING_START = 'ACTION_LOADING_START';\nexport const LOADING_END = 'ACTION_LOADING_END';\n\nexport const ALERT_ON = 'ACTION_NOTIFICATION_ON';\nexport const ALERT_COUNTDOWN = 'ACTION_NOTIFICATION_COUNTDOWN';\nexport const ALERT_OFF = 'ACTION_NOTIFICATION_OFF';\n\nexport const SET_QUOTE_ACTIVE = 'ACTION_QUOTE_ACTIVE';\nexport const SET_QUOTE_IS_SPECIAL_WITH_REASON = 'ACTION_QUOTE_IS_SPECIAL_WITH_REASON';\nexport const SET_QUOTE_BELOW_90_WARN = 'ACTION_QUOTE_BELOW_90_WARN';\nexport const SET_QUOTE_NOT_SPECIAL = 'ACTION_QUOTE_NOT_SPECIAL';\nexport const SET_QUOTE = 'ACTION_QUOTE_SET';\n\nexport const SET_BOXES = 'ACTION_SET_BOXES';\nexport const CLEAR_BOXES = 'ACTION_CLEAR_BOXES';\n\nexport const SET_QUOTE_RESULT = 'ACTION_QUOTE_SET_RESULT';\nexport const UNSET_QUOTE_RESULT = 'ACTION_QUOTE_UNSET_RESULT';\n\nexport const SET_NEW_HISTORY = 'ACTION_APP_SET_NEW_HISTORY';\nexport const SET_HISTORY = 'ACTION_APP_SET_HISTORY';\nexport const SET_HISTORY_INDEX = 'ACTION_APP_SET_HISTORY_INDEX';\nexport const UNSET_HISTORY = 'ACTION_APP_UNSET_HISTORY';\n\nexport const REDIRECT_TO_CONTACT = 'ACTION_REDIRECTION_CONTACT_PAGE';\nexport const REDIRECT_TO_PATH = 'ACTION_REDIRECT_TO_PATH';\n\nexport const SET_GLOBAL_DATA = 'ACTION_SET_GLOBAL_DATA';\n\nexport const FETCH_BOX_DATA = 'ACTION_FETCH_BOX_DATA';\nexport const SUBMIT_CONTACT_DATA = 'ACTION_SUBMIT_CONTACT_DATA';\n\nexport const SET_SCREENSHOT_FILE = 'ACTION_SET_SCREENSHOT_FILE';\n","import {REDIRECT_TO_PATH, SET_QUOTE_BELOW_90_WARN, SET_SCREENSHOT_FILE, SET_GLOBAL_DATA, LOADING_START, LOADING_END, SET_QUOTE_ACTIVE, SET_QUOTE_IS_SPECIAL_WITH_REASON, SET_QUOTE_NOT_SPECIAL, REDIRECT_TO_CONTACT, SET_NEW_HISTORY,SET_HISTORY, UNSET_HISTORY} from '../constants/action-types';\n\nexport let isQuotActive = (active = true)=>{\n    return {\n        type: SET_QUOTE_ACTIVE,\n        payload: {\n            is_quote_selected: active\n        }\n    };\n};\nexport const setSpecialCase = (reason, redirect_to_contact = true)=>{\n    return {\n        type : SET_QUOTE_IS_SPECIAL_WITH_REASON,\n        payload: {\n            is_special_cases: true,\n            reason_special_cases: reason,\n            redirect_to_contact_page: redirect_to_contact\n        }\n    };\n};\nexport const setSpecialCase_below90cm = (status = true)=>{\n    return {\n        type : SET_QUOTE_BELOW_90_WARN,\n        payload: status\n    };\n};\nexport const RedirectTo = (path)=>{\n    return {\n        type : REDIRECT_TO_PATH,\n        payload: path\n    };\n};\nexport const RemoveRedirect = ()=>{\n    return {\n        type : REDIRECT_TO_PATH,\n        payload: false\n    };\n};\nexport const redirectToContactPage = ()=>{\n    return {\n        type : REDIRECT_TO_CONTACT,\n        payload: {\n            redirect_to_contact_page: true\n        }\n    };\n};\nexport const removeRedirectToContactPage = ()=>{\n    return {\n        type : REDIRECT_TO_CONTACT,\n        payload: {\n            redirect_to_contact_page: false\n        }\n    };\n};\n\nexport const setNewHistory = (route)=>{\n    return {\n        type : SET_NEW_HISTORY,\n        payload: {\n            route\n        }\n    };\n};\nexport const setHistory = (index, history)=>{\n    console.log({index, history});\n    return {\n        type : SET_HISTORY,\n        payload: {\n            index, history\n        }\n    };\n};\nexport const clearHistory = ()=>{\n    return {\n        type : UNSET_HISTORY\n    };\n};\n\nexport const removeSpecialCase = ()=>{\n    return {\n        type : SET_QUOTE_IS_SPECIAL_WITH_REASON,\n        payload: {\n            is_special_cases: false,\n            reason_special_cases: false,\n            redirect_to_contact_page: false\n        }\n    };\n};\n\nexport const LoadingStart = (reason)=>{\n    return {\n        type : LOADING_START,\n        payload: reason\n    };\n};\nexport const LoadingEnd = ()=>{\n    return {\n        type : LOADING_END\n    };\n};\n\nexport const setGlobalData = (data) => {\n    return {\n        type : SET_GLOBAL_DATA,\n        payload: data\n    };\n};\n\nexport const setScreenshotFile = (file) => {\n    return {\n        type : SET_SCREENSHOT_FILE,\n        payload: file\n    };\n};\n","import {ALERT_ON,ALERT_OFF, ALERT_COUNTDOWN} from '../constants/action-types';\n\nexport let sendNotification = (message, type = 0)=>{\n    return {\n        type: ALERT_ON,\n        payload: {\n            have: true,\n            message,\n            type,\n            countdown: 10\n        }\n    };\n};\n\nexport let discardNotification = ()=>{\n    return {\n        type: ALERT_OFF,\n        payload: {\n            have: false,\n            message: false,\n            type: false,\n            countdown: false\n        }\n    };\n};\n\n\nexport let countdownNotification = (val = false)=>{\n    if(val <= 0){\n        val = false;\n        return discardNotification();\n    }\n    return {\n        type: ALERT_COUNTDOWN,\n        payload: val\n    };\n};\n","import axios from 'axios';\nimport { takeLatest, all, put, call } from 'redux-saga/effects';\nimport APIS from '../APIS';\nimport {RedirectTo, LoadingEnd, LoadingStart} from \"../actions/ActionApp\";\nimport {sendNotification} from \"../actions/Notification\";\n\nexport const fetchAllBoxes = () =>{\n    let config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n        }\n    }; \n\n    return axios.get(APIS.AJAX_GET_ALL_BOXES, config)\n        .then(response => {\n            let data = response.data;\n            if(data.success){\n                return data.data;\n            }else{\n                return false;\n            }\n        })\n        .catch(err => {\n            return false;\n        });\n};\n\nexport const submitContactData = (payload) =>{\n    let config = {\n        mode: 'no-cors',\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n        },\n        withCredentials: true,\n        credentials: 'same-origin',\n    }; \n\n    return axios.post(APIS.AJAX_SUBMIT_CONTACT_DATA, payload, config)\n    .then(response => {\n        let data = response.data;\n        if(data.success){\n            return true;\n        }\n        return false;\n    })\n    .catch(err => {\n        return false;\n    });;\n};\n\nexport function* fetch__GetAllBoxes() {\n    yield put(LoadingStart('Fetching Box Data...'));\n    let data = yield call(fetchAllBoxes);\n    yield put(LoadingEnd());\n    return data;\n}\nexport function* post__ContactData(payload) {\n    yield put(LoadingStart('Submit Contact Data...'));\n    let result = yield call(submitContactData, payload);\n    yield put(LoadingEnd());\n    yield put(RedirectTo('/'));\n    return result;\n}\n","import {SET_BOXES, CLEAR_BOXES} from '../constants/action-types';\n\nexport let setBoxData = (arrData)=>{\n    return {\n        type: SET_BOXES,\n        payload: arrData\n    };\n};\nexport let clearBoxData = ()=>{\n    return {\n        type: CLEAR_BOXES\n    };\n};\n","import html2canvas from 'html2canvas';\nimport {sendNotification} from '../actions/Notification';\nimport {setSpecialCase, removeSpecialCase, redirectToContactPage} from '../actions/ActionApp';\n\nconst response = (success = true, actions = [], data = false)=>{\n    let haveActions = false;\n    if(actions.length){\n        haveActions = true;\n    }\n    return {\n        success,\n        data,\n        actions,\n        haveActions\n    };\n};\n\nexport const generateRack = (item)=>{\n    let depth = item.width;\n    let length = item.height;\n    let enable = item.status === 'enable';\n    return {depth, length, enable};\n};\n\n/*export const availableRacks = [\n    generateRack(30,90),\n    generateRack(30,105),\n    generateRack(30,120),\n    generateRack(30,135),\n    generateRack(30,150),\n\n    generateRack(45,75),\n    generateRack(45,90),\n    generateRack(45,105),\n    generateRack(45,120),\n    generateRack(45,135),\n    generateRack(45,150),\n    generateRack(45,165),\n    generateRack(45,180),\n\n    generateRack(60,45),\n    generateRack(60,60),\n    generateRack(60,75),\n    generateRack(60,90),\n    generateRack(60,105),\n    generateRack(60,120),\n    generateRack(60,135),\n    generateRack(60,150),\n    generateRack(60,165),\n    generateRack(60,180),\n];*/\n/*\n\nexport let availableRacks = [];\nconsole.log({availableRacks});*/\n\nexport const getRackByIndex = (availableRacks, index) => {\n    let data = availableRacks[index];\n    if(data){\n        return {\n            height: data.length,\n            width: data.depth\n        };\n    }else{\n        return false;\n    }\n};\nexport const getClosestMinimumSizeRack = ( racks, width, height, equals_or_less = false)=>{\n    let availableRacks = [];\n    racks.map(rack => {\n        if(rack.enable){\n            availableRacks.push(rack);\n            return true;\n        }\n        return false;\n    });\n\n    console.log({racks, availableRacks});\n\n    let l = height;\n    let d = width;\n\n    let minCloseRackDepth = false;\n    let minCloseRackLength = false;\n    let tempDepth = 0;\n    let tempLength = 0;\n\n    //GET MIN AVAILABLE WIDTH OR DEPTH...\n    availableRacks.map(({depth}, index) => {\n        if(!minCloseRackDepth) {\n            if ((d < depth) || (equals_or_less && d <= depth)) {\n                minCloseRackDepth = tempDepth;\n            } else {\n                tempDepth = depth;\n            }\n        }\n    });\n    if(!minCloseRackDepth) {\n        minCloseRackDepth = tempDepth;\n    }\n\n    //GET MIN AVAILABLE HEIGHT OR LENGTH...\n    availableRacks.map(({depth, length}, index) => {\n        if(!minCloseRackLength && depth === minCloseRackDepth) {\n            if ((l < length) || (equals_or_less && l <= length)) {\n                minCloseRackLength = tempLength;\n            } else {\n                tempLength = length;\n            }\n        }\n    });\n    if(!minCloseRackLength) {\n        minCloseRackLength = tempLength;\n    }\n\n\n    if(minCloseRackLength && minCloseRackDepth){\n        return {\n            height: minCloseRackLength,\n            width: minCloseRackDepth\n        };\n    }else{\n        return false;\n    }\n};\n\nexport const isRackSize_applicableInContainer = ( racks, available_width, available_height)=>{\n    let availableRacks = [];\n    racks.map(rack => {\n        if(rack.enable){\n            availableRacks.push(rack);\n            return true;\n        }\n        return false;\n    });\n\n    let box = getClosestMinimumSizeRack(availableRacks, available_width, available_height, true);\n\n    console.log({area_width: available_width, area_height: available_height,lastClosableBox: box});\n};\n\nexport const checkAllWalls = (availableRacks, a, b, c1, c2, ignoreInvalid = true, containerMargin = 5) => {\n\n    console.log({a, b, c1, c2});\n\n    let prevC1 = c1;\n    let prevC2 = c2;\n\n    let actions = [];\n    let success = true;\n    let data = {\n        racks: [],\n        haveSingleRack: false,\n        haveDoubleRack: false,\n    };\n\n    if(!a || a.length <= 0){\n        actions.push(sendNotification('Please enter Wall-A value properly or contact us.'));\n        actions.push(redirectToContactPage());\n        success = false;\n    }else if(!b || b.length <= 0){\n        actions.push(sendNotification('Please enter Wall-B value properly or contact us.'));\n        actions.push(redirectToContactPage());\n        success = false;\n    }else{\n        a = parseInt(a);\n        b = parseInt(b);\n\n        if(a > 360){\n            actions.push(setSpecialCase('Maximum Length of Wall-A is greater than 3.6m.'));\n            actions.push(redirectToContactPage());\n            actions.push(sendNotification('Maximum Length of Wall-A is greater than 3.6m.'));\n            a = 360;\n            success = true;\n        }else if(a < 90){\n            actions.push(setSpecialCase('Maximum Length of Wall-A is less than 90cm.'));\n            actions.push(sendNotification('Maximum Length of Wall-A is less than 90cm.'));\n            a = 90;\n            actions.push(redirectToContactPage());\n            success = true;\n        }else if(b > 360){\n            actions.push(setSpecialCase('Maximum Length of Wall-B is greater than 3.6m.'));\n            actions.push(redirectToContactPage());\n            success = false;\n        }else if(b < 90){\n            actions.push(setSpecialCase('Maximum Length of Wall-B is less than 90cm.'));\n            actions.push(redirectToContactPage());\n            success = false;\n        }\n    }\n\n\n    //Calculate C1 & C2\n    if(success) {\n        //Rack Validation System...\n        if (a <= 90) {\n            data.haveSingleRack = true;\n        } else if (a > 90 && a <= 120) {\n            data.haveSingleRack = true;\n        } else if (a > 120 && a <= 135) {\n            data.haveDoubleRack = true;\n        } else if (a > 135 && a <= 150) {\n            data.haveDoubleRack = true;\n        } else if (a > 150 && a <= 180) {\n            data.haveDoubleRack = true;\n        } else if (a > 180) {\n            data.haveDoubleRack = true;\n        }\n\n\n        //Logics...\n        if (!c1 && c1 !== 0 && !c2 && c2 !== 0) {\n            console.log(\"When C1 & C2 Both Not Seted...\");\n            //When C1 & C2 Both Not Seted...\n            if (a <= 90) {\n                actions.push(setSpecialCase('Wall-A <= 90.', false));\n                c1 = c2 = 0;\n            } else if (a > 90 && a <= 120) {\n                c1 = a - 90;\n                c2 = 0;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 120 && a <= 135) {\n                c1 = 30;\n                c2 = a - 120;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 135 && a <= 150) {\n                c1 = 45;\n                c2 = a - 135;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 150 && a <= 180) {\n                c1 = 60;\n                c2 = a - 150;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 180) {\n                actions.push(setSpecialCase('Wall-A > 180.', false));\n                c1 = c2 = (a - 90) / 2;\n            }\n        } else {\n            if ((!c1 && c1 !== 0) && c2) {\n                //If C1 Not Available...\n                console.log(\"If C1 Not Available...\");\n                if (c2 > a - 90) {\n                    console.log(\"If C2 > a - 90...\");\n                    let val = a - 90;\n                    actions.push(sendNotification('C2 should be less than or equals ' + val + 'cm (Wall-A - 90cm) min, reset C1 to 0.'));\n                    c2 = val;\n                    c1 = 0;\n                } else if (c2 < 0) {\n                    console.log(\"If C2 < 0...\");\n                    let val = a - 90;\n                    actions.push(sendNotification('C2 should be greater than or equals 0cm min, reset C1 to ' + val + '.'));\n                    c2 = 0;\n                    c1 = val;\n                } else {\n                    console.log(\"If C2 perfect...\");\n                    c1 = a - 90 - c2;\n                }\n            } else if ((!c2 && c2 !== 0) && c1) {\n                //If C2 Not Available...\n                console.log(\"If C2 Not Available...\");\n                if (c1 > a - 90) {\n                    console.log(\"If C1 > a - 90...\");\n                    let val = a - 90;\n                    actions.push(sendNotification('C1 should be less than or equals ' + val + 'cm (Wall-A - 90cm) min, reset C2 to 0.'));\n                    c1 = val;\n                    c2 = 0;\n                } else if (c1 < 0) {\n                    console.log(\"If C1 < 0...\");\n                    let val = a - 90;\n                    actions.push(sendNotification('C1 should be greater than or equals 0cm min, reset C1 to ' + val + '.'));\n                    c1 = 0;\n                    c2 = val;\n                } else {\n                    console.log(\"If C1 perfect...\");\n                    c2 = a - 90 - c1;\n                }\n            } else {\n                //If Both C1 & C2 available...\n                console.log(\"If Both C1 & C2 available...\");\n                c1 = parseInt(c1);\n                c2 = parseInt(c2);\n\n                let available_space = a - 90;\n\n                if(c1 > available_space){\n                    console.log(\"If C1 > available...\");\n                    actions.push(sendNotification('C1 should be less or equals (Wall-A - 90cm - Wall-C2) min, reset C1 to '+available_space+' & C2 to 0.'));\n                    c1 = available_space;\n                    c2 = 0;\n                }else if(c2 > available_space){\n                    console.log(\"If C2 > available...\");\n                    actions.push(sendNotification('C1 should be less or equals (Wall-A - 90cm - Wall-C1) min, reset C2 to '+available_space+' & C1 to 0.'));\n                    c2 = available_space;\n                    c1 = 0;\n                }else if(c1 < 0){\n                    console.log(\"If C1 < 0...\");\n                    actions.push(sendNotification('C1 should be greater or equals 0cm min, reset C1 to 0.'));\n                    c1 = 0;\n                }else if(c2 < 0){\n                    console.log(\"If C2 < 0...\");\n                    actions.push(sendNotification('C2 should be greater or equals 0cm min, reset C2 to 0.'));\n                    c2 = 0;\n                }else{\n                    console.log(\"If Both C1 & C2 available...\");\n                    if (c1 > available_space - c2){\n                        console.log(\"If C1 > available - c2...\");\n                        let val = available_space - c2;\n                        actions.push(sendNotification('C1 should be less than or equals ' + val + 'cm (Wall-A - 90cm - C2) min, reset C1 to '+val+'.'));\n                        c1 = val;\n                    }else if (c2 > available_space - c1){\n                        console.log(\"If C2 > available - c1...\");\n                        let val = available_space - c1;\n                        actions.push(sendNotification('C2 should be less than or equals ' + val + 'cm (Wall-A - 90cm - C1) min, reset C2 to '+val+'.'));\n                        c2 = val;\n                    }else{\n                        console.log(\"Everything is perfect...\");\n                    }\n                }\n            }\n        }\n\n        prevC1 = c1;\n        prevC2 = c2;\n    }\n\n    data = {a, b, c1:prevC1,c2:prevC2, ...data};\n    console.log(data);\n    return response(success, actions, data);\n};\n\n\nexport const getScreenshotOfElement = (element, posX, posY, width, height, callback) => {\n    return html2canvas(element, {\n        onrendered: function (canvas) {\n            let context = canvas.getContext('2d');\n            let imageData = context.getImageData(posX, posY, width, height).data;\n            let outputCanvas = document.createElement('canvas');\n            let outputContext = outputCanvas.getContext('2d');\n            outputCanvas.width = width;\n            outputCanvas.height = height;\n\n            let idata = outputContext.createImageData(width, height);\n            idata.data.set(imageData);\n            outputContext.putImageData(idata, 0, 0);\n            callback(outputCanvas.toDataURL().replace(\"data:image/png;base64,\", \"\"));\n        },\n        width: width,\n        height: height,\n        useCORS: false,\n        taintTest: true,\n        allowTaint: true,\n        scrollY: -125\n    });\n};\n\n\nexport const dataURLtoFile = (dataurl, filename) => {\n    const arr = dataurl.split(',')\n    const mime = arr[0].match(/:(.*?);/)[1]\n    const bstr = atob(arr[1])\n    let n = bstr.length\n    const u8arr = new Uint8Array(n)\n    while (n) {\n        u8arr[n] = bstr.charCodeAt(n)\n        n -= 1 // to make eslint happy\n    }\n    return new File([u8arr], filename, { type: mime })\n};\n\nexport const openInNewTab = (url) => {\n    var win = window.open(url, '_blank');\n    win.focus();\n};\n","import { takeLatest, all, put, call } from 'redux-saga/effects';\nimport {FETCH_BOX_DATA, SUBMIT_CONTACT_DATA} from '../constants/action-types';\nimport {fetch__GetAllBoxes, post__ContactData} from './APICalling';\nimport {setBoxData} from \"../actions/ActionBoxes\";\nimport {sendNotification} from \"../actions/Notification\";\nimport {generateRack} from '../components/QuoteRules';\n\nexport function* FETCH_BOX_LIST_ASYNC(){\n    let result = yield call(fetch__GetAllBoxes);\n    let data = yield result;\n    if(data && data) {\n        let finalData = [];\n        data.map((item)=>{\n            finalData.push(generateRack(item));\n        });\n        console.log({finalData});\n\n        console.log({response_data: finalData});\n        yield put(setBoxData(finalData));\n    }\n}\nexport function* SUBMIT_CONTACT_ASYNC({payload}){\n\n    let result = yield call(post__ContactData, payload);\n    let response = yield result;\n    console.log({response});\n    if(response) {\n        yield put(sendNotification('Submitted! thank you, we will contact you soon!', 1));\n    }else{\n        yield put(sendNotification('Submission failed, Please try again!', -1));\n    }\n}\n\nexport function* allSagas(){\n    yield all([\n        yield takeLatest(FETCH_BOX_DATA, FETCH_BOX_LIST_ASYNC),\n        yield takeLatest(SUBMIT_CONTACT_DATA, SUBMIT_CONTACT_ASYNC)\n    ]);\n}\n","import { ALERT_OFF, ALERT_ON, ALERT_COUNTDOWN } from \"../constants/action-types\";\n\nconst initialState = {\n    have: false,\n    message: false,\n    type: false,\n    countdown: false\n};\n\nexport default (state = initialState, {type, payload})=>{\n    switch(type){\n        case ALERT_ON:\n            return payload;\n        case ALERT_OFF:\n            return payload;\n        case ALERT_COUNTDOWN:\n             return {countdown: payload, ...state};\n        default:\n            return {...state};\n    }\n};\n","import { SET_QUOTE, SET_QUOTE_RESULT, UNSET_QUOTE_RESULT } from \"../constants/action-types\";\n\nconst quoteInitialState = {\n    wall_a: false,\n    wall_b: false,\n    wall_c1: false,\n    wall_c2: false,\n    result: false\n};\n\nexport default (state = quoteInitialState, {type, payload})=>{\n    switch(type){\n        case SET_QUOTE:\n            return {...state, ...payload};\n        case SET_QUOTE_RESULT:\n            return {...state, ...{result: payload}};\n        case UNSET_QUOTE_RESULT:\n            return {...quoteInitialState};\n        default:\n            return {...state, ...{result: false}};\n    }\n};\n","import { REDIRECT_TO_PATH, SET_QUOTE_BELOW_90_WARN, LOADING_START, LOADING_END, SET_QUOTE_ACTIVE, REDIRECT_TO_CONTACT, SET_QUOTE_IS_SPECIAL_WITH_REASON,SET_NEW_HISTORY,SET_HISTORY, SET_HISTORY_INDEX, UNSET_HISTORY } from \"../constants/action-types\";\n\nconst appInitialState = {\n    is_quote_selected: false,\n    is_special_cases: false,\n    reason_special_cases: false,\n    redirect_to_contact_page: false,\n    history: [],\n    currentHistoryIndex: -1,\n    loading: false,\n    below90cm: false,\n    redirectToPath: false\n};\n\nexport default (state = appInitialState, {type, payload})=>{\n    let data;\n    switch(type){\n        case LOADING_START:\n            return {...state, loading: payload};\n        case REDIRECT_TO_PATH:\n            return {...state, redirectToPath: payload};\n        case LOADING_END:\n            return {...state, loading: false};\n        case SET_QUOTE_ACTIVE:\n            return {...state, ...payload};\n        case REDIRECT_TO_CONTACT:\n            data = {...state, ...payload};\n            return data;\n        case SET_QUOTE_IS_SPECIAL_WITH_REASON:\n            return {...state,...payload};\n        case SET_NEW_HISTORY:\n            state.history.push(payload.route);\n            state.currentHistoryIndex++;\n            return {...state};\n        case SET_QUOTE_BELOW_90_WARN:\n            data = {...state, below90cm: payload};\n            break;\n        case SET_HISTORY:\n            return {...state, ...{\n                    history: payload.history,\n                    currentHistoryIndex: payload.index\n                }};\n        default:\n            return {...state};\n    }\n};\n","import { SET_BOXES, CLEAR_BOXES } from \"../constants/action-types\";\n\nconst initialState = {\n    boxes: []\n};\n\nexport default (state = initialState, {type, payload})=>{\n    switch(type){\n        case SET_BOXES:\n            return {...state, boxes: payload};\n        case CLEAR_BOXES:\n            return {...state, boxes: []};\n        default:\n            return state;\n    }\n};\n","import { UNSET_QUOTE_RESULT, SET_GLOBAL_DATA, SET_SCREENSHOT_FILE } from \"../constants/action-types\";\n\nconst appInitialState = {\n    data: false,\n    screenshot: false\n};\n\nexport default (state = appInitialState, {type, payload})=>{\n    switch(type){\n        case SET_GLOBAL_DATA:\n            return {...state, data: payload};\n        case SET_SCREENSHOT_FILE:\n            return {...state, screenshot: payload};\n        case UNSET_QUOTE_RESULT:\n            return {...state, screenshot: false};\n        default:\n            return {...state};\n    }\n};\n","import { combineReducers } from 'redux'\nimport NotificationReducer from '../reducers/NotificationReducer';\nimport QuoteReducer from '../reducers/QuoteReducer';\nimport AppReducer from '../reducers/AppReducer';\nimport BoxReducer from '../reducers/BoxReducer';\nimport DataReducer from '../reducers/DataReducer';\n\nlet allReducers = {\n      notification: NotificationReducer,\n      quote: QuoteReducer,\n      app: AppReducer,\n      box: BoxReducer,\n      data: DataReducer\n};\nexport default combineReducers(allReducers);\n\n\n","import { createStore, applyMiddleware } from 'redux';\nimport {is_production} from './APIS';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { allSagas } from './sagas';\n\nimport rootReducer from \"./reducers/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\nlet store = null;\nif(!is_production){\n    store = createStore(\n        rootReducer,\n        composeWithDevTools(\n            applyMiddleware(sagaMiddleware)\n        )\n    );\n}else{\n    store = createStore(\n        rootReducer,\n        applyMiddleware(sagaMiddleware)\n    );\n}\n\nsagaMiddleware.run(allSagas);\nexport default store;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {sendNotification} from \"../actions/Notification\";\n\nlet Header = (props)=>{\n    let onSubmitSearch = (e)=>{\n        e.preventDefault();\n        props.dispatch(sendNotification(\"This is an example when search entered.\"));\n    };\n\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" target=\"_blank\" href=\"https://cybetiq.com\">Drag-Box V.3.21</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <NavLink className=\"nav-link\" to={'/'}>Home</NavLink>\n                </li>\n                <li className=\"nav-item active\">\n                    <NavLink className=\"nav-link\" to='/self-service'>Self Service</NavLink>\n                </li>\n                <li className=\"nav-item active\">\n                    <NavLink className=\"nav-link\" to='/contact'>Contact</NavLink>\n                </li>\n            </ul>\n            <form onSubmit={onSubmitSearch} className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n        </div>\n    </nav>\n)};\n\nexport default connect(null, dispatch => ({dispatch}))(Header);\n","import React, {Fragment} from 'react';\n\nimport Header from './Header';\nimport {discardNotification} from '../actions/Notification';\n\nimport {connect} from \"react-redux\";\n\nconst getNotificationTitle = (type)=>{\n    switch(type){\n        case 0:\n            return \"Notification!\";\n        case 1:\n            return \"Success!\";\n        case -1:\n            return \"Oops!\";\n    }\n};\n\nlet getNotification = (notification, dispatch)=>{\n    return (\n        <div className=\"alert-area\">\n            <div className=\"alert-box\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{getNotificationTitle(notification.type)}</h5>\n                        <p className=\"card-text\">{notification.message}</p>\n                        <button onClick={(e)=>{dispatch(discardNotification())}} className=\"btn btn-primary\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nlet Layout = (props)=>{\n\n   return (\n       <Fragment>\n           <Header/>\n           <div className=\"container\" style={{flexDirection: \"column\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"50px 30px\"}}>\n           { props.children }\n           </div>\n           {(props.notification.have)?getNotification(props.notification, props.dispatch):false}\n       </Fragment>\n   );\n};\n\nexport default connect(store=>({notification: store.notification}), dispatch => ({dispatch}))(Layout);\n","import {FETCH_BOX_DATA, SUBMIT_CONTACT_DATA} from '../constants/action-types';\n\nexport let fetchBoxData = ()=>{\n    return {\n        type: FETCH_BOX_DATA\n    };\n};\n\nexport let submitContactData = (data)=>{\n    return {\n        type: SUBMIT_CONTACT_DATA,\n        payload: data\n    };\n};\n","import {SET_QUOTE, SET_QUOTE_RESULT, UNSET_QUOTE_RESULT} from '../constants/action-types';\n\nexport let setQuote = (wall_a = false, wall_b = false, wall_c1 = false, wall_c2 = false)=>{\n    let result = {\n        type: SET_QUOTE,\n        payload: {\n            wall_a: wall_a,\n            wall_b: wall_b,\n            wall_c1: wall_c1,\n            wall_c2: wall_c2\n        }\n    };\n    return result;\n};\n\nexport let setQuoteWallA = (wall_a)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_a: wall_a\n        }\n    };\n};\n\nexport let setQuoteWallB = (wall_b)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_b\n        }\n    };\n};\n\nexport let setQuoteWallC1 = (wall_c1)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_c1\n        }\n    };\n};\n\nexport let setQuoteWallC2 = (wall_c2)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_c2\n        }\n    };\n};\n\nexport let setResult = (data) => {\n    return {\n        type: SET_QUOTE_RESULT,\n        payload: data\n    };\n};\n\nexport let clearResult = () => {\n    return {\n        type: UNSET_QUOTE_RESULT,\n        payload: {}\n    };\n};\n","import React, {Fragment, Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faBackward } from '@fortawesome/free-solid-svg-icons';\nimport {discardNotification} from '../actions/Notification';\nimport {setHistory} from '../actions/ActionApp';\nimport {fetchBoxData} from '../actions/ActionAPIS';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {clearResult as clearQuote} from \"../actions/ActionQuote\";\n\nlet styles = {\n    fullScreen: {\n        backgroundColor: '#000000bd',\n        position: 'fixed',\n        zIndex: '99999999',\n        height: '100vh',\n        width: '100vw',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n};\n\nconst getNotificationTitle = (type)=>{\n    switch(type){\n        case 0:\n            return \"Notification!\";\n        case 1:\n            return \"Success!\";\n        case -1:\n            return \"Oops!\";\n    }\n};\n\nclass Layout extends Component{\n\n    componentDidMount() {\n        this.props.dispatch(fetchBoxData());\n    }\n\n    state={\n        redirectTo: false\n    };\n    componentDidUpdate() {\n        if(this.state.redirectTo){\n            this.setState({redirectTo: false});\n        }\n    }\n\n    goForCustomQuery() {\n        this.props.dispatch(clearQuote());\n        this.setState({redirectTo: '/contact'});\n        this.props.dispatch(discardNotification());\n    }\n\n    getNotification = (notification, dispatch)=>{\n        /*setTimeout(()=>{\n            dispatch(countdownNotification(--notification.countdown));\n        },1000);*/\n        return (\n            <div className=\"alert-area\">\n                <div className=\"alert-box\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className='row'>\n                                <div className='col-12 mb-4'>\n                                    <h5 className=\"card-title\">{getNotificationTitle(notification.type)}</h5>\n                                    <p className=\"card-text\">{notification.message}</p>\n                                </div>\n                                <div className='col-6 text-left'>\n                                    <button onClick={this.goForCustomQuery.bind(this)} className=\"btn btn-outline-danger\">Have custom query ?</button>\n                                </div>\n                                <div className='col-6 text-right'>\n                                    <button onClick={(e)=>{dispatch(discardNotification())}} className=\"btn btn-outline-primary\">Ok</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='progress-bar' style={{width: notification.countdown * 10+\"%\"}}/>\n                </div>\n            </div>\n        );\n    };\n\n    redirectToHome = (e) => {\n        e.preventDefault(true);\n        this.setState({\n            redirectTo: '/'\n        });\n    };\n\n    redirectToBack = (e) => {\n        e.preventDefault(true);\n        let currentHistoryIndex = this.props.app.currentHistoryIndex;\n        let history = this.props.app.history;\n        if(currentHistoryIndex >= 0) {\n            let newIndex = --currentHistoryIndex;\n            let newHistory = history.slice(0, newIndex+1);\n            this.setState({\n                redirectTo: newHistory[newIndex]\n            });\n            this.props.dispatch(setHistory(newIndex, newHistory));\n        }else{\n            console.log({currentHistoryIndex, history});\n        }\n    };\n\n    fullScreenLoader = () => {\n         return(\n            <div style={styles.fullScreen}>\n              <Loader\n                 type=\"BallTriangle\"\n                 color=\"#00BFFF\"\n                 height={100}\n                 width={100}\n              />\n            </div>\n         );\n    };\n\n    render(){\n        return (\n            <Fragment>\n                {(this.props.app.loading)?this.fullScreenLoader():false}\n                {(this.state.redirectTo)?<Redirect to={this.state.redirectTo}/>:false}\n                <div className=\"container-fluid\" style={{position: \"fixed\", top: \"0px\", zIndex: \"999\"}}>\n                    <nav className=\"navbar navbar-expand-sm bg-light justify-content-center\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.redirectToHome}>\n                                    <FontAwesomeIcon icon={faHome} /> Home\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.redirectToBack}>\n                                    <FontAwesomeIcon icon={faBackward} /> Back\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"container body-container\" style={{\n                    flexDirection: \"column\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    maxWidth: \"unset\",\n                    marginTop: \"58px\"\n                }}>\n                    {this.props.children}\n                </div>\n                {(this.props.notification.have) ? this.getNotification(this.props.notification, this.props.dispatch) : false}\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(store=>({notification: store.notification, app: store.app}), dispatch => ({dispatch}))(Layout);\n","import React, {Component, Fragment} from 'react';\nimport Tabs from 'react-responsive-tabs';\nimport 'react-responsive-tabs/styles.css';\nimport './styles.css';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {sendNotification} from \"../../actions/Notification\";\nimport {checkAllWalls, getClosestMinimumSizeRack, getScreenshotOfElement, dataURLtoFile} from '../QuoteRules';\nimport imgBox from '../../../assets/imgs/wood.jpg';\nimport {setGlobalData, setNewHistory, setScreenshotFile} from \"../../actions/ActionApp\";\nimport {setQuote} from '../../actions/ActionQuote';\n\nconst getOffset = (el) => {\n    if(el) {\n        const elComputed = window.getComputedStyle(el);\n\n        let _x = 0;\n        let _y = 0;\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n            _x += el.offsetLeft;\n            _y += el.offsetTop - el.scrollTop;\n            el = el.offsetParent;\n        }\n\n        let result = {\n            left: _x,\n            top: _y,\n            height: parseInt((elComputed.height).replace(\"px\", \"\")),\n            width: parseInt((elComputed.width).replace(\"px\", \"\")),\n        };\n\n        result = {...result, right: result.width + result.left, bottom: result.top + result.height};\n        return result;\n    }else{\n        return false;\n    }\n};\nconst setLeft = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.left;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.left = str;\n};\nconst setBottom = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.bottom;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.top = str;\n};\nconst setRight = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.right;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.left = str;\n};\nconst setRightInner = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let str = px.right - (el_Offset.right - el_Offset.left);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.left = str;\n};\nconst setBottomInner = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.bottom - (el_Offset.bottom - el_Offset.top);\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.top = str;\n};\nconst setTop = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.top;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.top = str;\n};\nconst setHeight = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.height;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.height = str;\n};\nconst setWidth = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.width;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.width = str;\n};\n\nconst box_styles = {\n    //background: `url(${imgBox})`,\n    backgroundSize: \"cover\",\n    //boxShadow: \"black 1px 1px 5px\",\n    border: \"inset #804c0a thin\"\n};\n\nclass SelfService extends Component{\n\n    //Page Re-directions...\n        redirectToHomePage = (bool)=> {\n            this.props.dispatch(sendNotification(\"You need to select basic requirement of the app.\"));\n            return (bool) ? <Redirect to=\"/\"/> : false;\n        };\n\n    //DOM Declaration...\n        dom_omgArea = null;\n        dom_omgContainer = null;\n        dom_omgContainerPadding = null;\n\n        dom_wall_top = null;\n        dom_wall_left = null;\n        dom_wall_right = null;\n        dom_wall_bottom_left = null;\n        dom_wall_bottom_right = null;\n\n        dom_input_wall_a = null;\n        dom_input_wall_b = null;\n        dom_input_wall_c1 = null;\n        dom_input_wall_c2 = null;\n\n        dom_box1_dom = null;\n        dom_box2_dom = null;\n\n    screenHeight = false;\n    screenWidth = false;\n\n    //State declaration...\n        state = {\n            currentTab: 0,\n\n            screenHeight: false,\n            screenWidth: false,\n\n            //Actual Vars...\n            boxExtraZoom: 1.8,\n            totalBoxes: 1,\n            boxes: {\n                a: false,\n                b: false\n            },\n            isBoxDirectionLeft: true,\n\n            wall_a: 0,\n            wall_b: 0,\n            wall_c1: 0,\n            wall_c2: 0,\n\n            input_wall_a: 0,\n            input_wall_b: 0,\n            input_wall_c1: 0,\n            input_wall_c2: 0,\n\n            containerPadding: 5,\n            normalLength: 300,\n            thickness: 7,\n\n            boxAHeight: 120,\n            boxAWidth: 45,\n            boxALeft: 0,\n            boxATop: 0,\n\n            boxBHeight: 120,\n            boxBWidth:45,\n            boxBLeft: 0,\n            boxBTop: 0,\n\n            //Perceptual Vars...\n            perceptualBoxAHeight: 0,\n            perceptualBoxAWidth: 0,\n\n            perceptualBoxBHeight: 0,\n            perceptualBoxBWidth: 0,\n\n            perceptualWallThickness: 0,\n            perceptualContainerPadding: 0,\n            perceptualMaxLength: 0,\n            perceptualWallA: 0,\n            perceptualWallB: 0,\n            perceptualWallC1: 0,\n            perceptualWallC2: 0,\n\n\n            //Validation & Switches...\n            do_WallRuleUpdate: false,\n            do_InitializeDoms: false,\n            do_DrawBoxEdges: false,\n            do_PerseptualCalculation: false,\n            do_SmartPlaceBoxes: false,\n            do_RefreshScreenLengths: false,\n            do_SetArgs: false,\n            do_GetRequireBoxesAndDirection: false,\n            do_redirectToContact: false,\n\n            alreadyLoaded: false\n        };\n\n    //Extra variables...\n        dragBox1 = false;\n        dragBox2 = false;\n        dragging = false;\n\n        allActions = [];\n\n    //Input Events...\n        onChangeWallA = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_a: val\n            });\n        };\n\n        onChangeWallB = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_b: val\n            });\n        };\n\n        onChangeWallC1 = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_c1: val\n            });\n        };\n\n        onChangeWallC2 = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_c2: val\n            });\n        };\n\n        onBlurWallA = ()=>{\n            let val = this.state.input_wall_a;\n\n            if(val > 360){\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall-A should be less or equals 3.6m\"));\n            }else if(val < 90){\n                val = 90;\n                this.props.dispatch(sendNotification(\"Wall-A should be greater or equals 90cm\"));\n            }\n\n            this.setState({\n                wall_a: val,\n                input_wall_a: val,\n                do_WallRuleUpdate: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_PerseptualCalculation: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n            //this.props.dispatch(setQuoteWallA(val));\n            this.refreshScreenLengths(true);\n        };\n\n        onBlurWallB = ()=>{\n            let val = this.state.input_wall_b;\n\n            if(val > 360){\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall-B should be less or equals 3.6m\"));\n            }else if(val < 90){\n                val = 90;\n                this.props.dispatch(sendNotification(\"Wall-B should be greater or equals 90cm\"));\n            }\n\n            this.setState({\n                wall_b: val,\n                input_wall_b: val,\n                do_WallRuleUpdate: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_PerseptualCalculation: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n            this.refreshScreenLengths(true);\n        };\n\n        onBlurWallC1 = ()=>{\n            let val = this.state.input_wall_c1;\n\n            if(val < 0){\n                val = 0;\n                this.props.dispatch(sendNotification(\"Wall-C1 should be greater or equals 0cm\"));\n            }\n\n            this.setState({\n                wall_c1: val,\n                input_wall_c1: val,\n                do_WallRuleUpdate: true,\n                do_PerseptualCalculation: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n        };\n\n        onBlurWallC2 = () => {\n            let val = this.state.input_wall_c2;\n\n            if(val < 0){\n                val = 0;\n                this.props.dispatch(sendNotification(\"Wall-C2 should be greater or equals 0cm\"));\n            }\n\n            this.setState({\n                wall_c2: val,\n                input_wall_c2: val,\n                do_WallRuleUpdate: true,\n                do_PerseptualCalculation: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n        };\n\n    //Component Hooks...\n        onScreenScroll = () => {\n            this.refreshScreenLengths(true);\n        };\n\n        componentDidUpdate(){\n            this.consoleApp(\"componentDidUpdate() => \");\n            this.quickSetup();\n        }\n        componentDidMount() {\n\n            if(this.props.app.history[this.props.app.currentHistoryIndex] !== \"/self-service\") {\n                this.props.dispatch(setNewHistory('/self-service'));\n            }\n            this.consoleApp(\"componentDidMount() => \");\n            window.addEventListener(\"resize\", ()=>this.refreshScreenLengths(true));\n            document.querySelector('.omg-part.omg-part-1').addEventListener('scroll', this.onScreenScroll);\n            this.setState({\n                do_InitializeDoms: true,\n                do_SetArgs: true,\n                do_WallRuleUpdate: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_PerseptualCalculation: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n        }\n        componentWillReceiveProps(nextProps, nextContext) {\n            this.consoleApp(\"componentWillReceiveProps()\");\n        }\n        componentWillUnmount() {\n            document.removeEventListener('mousemove', this.onMouseMove);\n            document.removeEventListener('mouseup', this.onMouseUp);\n            window.removeEventListener(\"resize\", ()=>this.refreshScreenLengths(true));\n            document.querySelector('.omg-part.omg-part-1').removeEventListener(\"scroll\", this.onScreenScroll);\n        }\n\n    //Basic Functions...\n        redirectToContactPage = (bool)=> {\n            if(bool) {\n                return <Redirect to={{pathname: '/contact', state: {redirect_back_path: '/'}}}/>;\n            }else{\n                return false;\n            }\n        };\n\n        consoleApp = (label, data = false) => {\n            if(data !== false ){\n                console.log(\"APP: \" + label + \" => \", data);\n            }else{\n                console.log(\"APP: \"+label);\n            }\n        };\n        consoleTest = (label, data = false) => {\n            if(data !== false ){\n                console.log(\"TEST: \"+label+\" => \",data);\n            }else{\n                console.log(\"TEST: \"+label);\n            }\n        };\n\n        //Limitation Functions start...\n            checkPerceptualWallThickness = (thickness)=>{\n                if(thickness > 45){\n                    thickness = 45;\n                }\n                return thickness;\n            };\n            checkPerceptualPadding = (padding)=>{\n                if(padding > 15){\n                    padding = 15;\n                }\n                return padding;\n            };\n        //Limitation Functions end...\n\n\n        quickSetup = () => {\n                if(this.state.do_RefreshScreenLengths) {\n                    this.setState({\n                        do_RefreshScreenLengths: false,\n                        ...this.refreshScreenLengths(false)\n                    });\n                }\n                else if(this.state.do_InitializeDoms){\n                    this.setState({\n                        do_InitializeDoms: false,\n                        ...this.initializeDoms()\n                    });\n                }\n                else if(this.state.do_SetArgs){\n                    this.setState({\n                        do_SetArgs: false,\n                        ...this.setArgs()\n                    });\n                }\n                else if(this.state.do_WallRuleUpdate){\n                    const rules = this.wallsRulesCheck();\n                    this.setState({\n                        do_WallRuleUpdate: false,\n                        ...rules\n                    });\n                    if(this.allActions.length) {\n                        this.allActions.map((action, index) => {\n                            return this.props.dispatch({...action});\n                        });\n                        this.allActions = [];\n                    }\n                }\n                else if(this.state.do_GetRequireBoxesAndDirection){\n                    this.setState({\n                        do_GetRequireBoxesAndDirection: false,\n                        ...this.getRequireBoxesAndDirection()\n                    });\n                }\n                else if(this.state.do_PerseptualCalculation){\n                    this.setState({\n                        do_PerseptualCalculation: false,\n                        ...this.perspectiveCalculation()\n                    });\n                }\n                else if(this.state.do_DrawBoxEdges) {\n                    this.setState({\n                        do_DrawBoxEdges: false,\n                        ...this.drawBoxEdges()\n                    });\n                }\n                else if(this.state.do_SmartPlaceBoxes) {\n                    this.setState({\n                        do_SmartPlaceBoxes: false,\n                        ...this.smartPlaceBoxes()\n                    });\n                }\n        };\n\n        initializeDoms = () =>{\n            let changeState = {};\n\n            this.dom_omgArea = document.querySelector('.omg-area');\n            this.dom_omgContainer = this.dom_omgArea.querySelector('.omg-container');\n            if(this.dom_omgContainer){\n                this.dom_wall_top = this.dom_omgContainer.querySelector(\".wall.wall-top\");\n                this.dom_wall_left = this.dom_omgContainer.querySelector(\".wall.wall-left\");\n                this.dom_wall_right = this.dom_omgContainer.querySelector(\".wall.wall-right\");\n                this.dom_wall_bottom_left = this.dom_omgContainer.querySelector(\".wall.wall-bottom-left\");\n                this.dom_wall_bottom_right = this.dom_omgContainer.querySelector(\".wall.wall-bottom-right\");\n                this.dom_box_doms = this.dom_omgContainer.querySelectorAll('.box');\n                this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n\n                this.dom_input_wall_a = this.dom_omgArea.querySelector(\"input#lengthOfWallA\");\n                this.dom_input_wall_b = this.dom_omgArea.querySelector(\"input#lengthOfWallB\");\n                this.dom_input_wall_c1 = this.dom_omgArea.querySelector(\"input#lengthOfWallC1\");\n                this.dom_input_wall_c2 = this.dom_omgArea.querySelector(\"input#lengthOfWallC2\");\n\n                this.dom_omgContainerPadding = this.dom_omgContainer.querySelector('.container-padding');\n\n                let isValid = (this.dom_wall_top && this.dom_wall_left && this.dom_wall_right && this.dom_wall_bottom_left\n                    && this.dom_wall_bottom_right\n                    /*&& this.dom_input_wall_a && this.dom_input_wall_b && this.dom_input_wall_c1 && this.dom_input_wall_c2*/\n                     /*&& this.dom_box1_dom && this.dom_box2_dom*/\n                    && this.dom_omgContainerPadding\n                );\n                if(isValid) {\n                    document.addEventListener('mousemove', this.onMouseMove);\n                    document.addEventListener('mouseup', this.onMouseUp);\n                    changeState[\"alreadyLoaded\"] = true;\n                }else{\n                    this.props.dispatch(sendNotification(\"Something is missing, some UI Elements not found...\"));\n                }\n            }else{\n                this.props.dispatch(sendNotification(\"Container not found!\"));\n            }\n\n            return changeState;\n        };\n        setArgs = () => {\n            let changeState = {};\n\n            let wall_a = this.props.quote.wall_a;\n            let wall_b = this.props.quote.wall_b;\n            let wall_c1 = this.props.quote.wall_c1;\n            let wall_c2 = this.props.quote.wall_c2;\n\n            changeState = {\n              wall_a, wall_b, wall_c1, wall_c2,\n                input_wall_a: wall_a,\n                input_wall_b: wall_b,\n                input_wall_c1: wall_c1,\n                input_wall_c2: wall_c2\n            };\n\n            return changeState;\n        };\n        wallsRulesCheck = ()=> {\n            let changeState = {};\n\n            let wall_a = this.state.wall_a;\n            let wall_b = this.state.wall_b;\n            let wall_c1 = this.state.wall_c1;\n            let wall_c2 = this.state.wall_c2;\n\n            let responseRules = checkAllWalls(this.props.boxes, wall_a, wall_b, wall_c1, wall_c2, this.state.containerPadding);\n            if (responseRules.haveActions) {\n                this.allActions = responseRules.actions;\n            }\n\n            if (responseRules.success) {\n                let totalRacks = 0;\n                if(responseRules.data.haveSingleRack){\n                    totalRacks = 1;\n                }else if(responseRules.data.haveDoubleRack){\n                    totalRacks = 2;\n                }\n\n\n                wall_a = responseRules.data.a;\n                wall_b = responseRules.data.b;\n                wall_c1 = responseRules.data.c1;\n                wall_c2 = responseRules.data.c2;\n                this.setState({\n                    totalBoxes: totalRacks,\n                    input_wall_a: wall_a,\n                    input_wall_b: wall_b,\n                    input_wall_c1: wall_c1,\n                    input_wall_c2: wall_c2,\n                    wall_a, wall_b, wall_c1, wall_c2,\n                });\n                this.refreshScreenLengths(true);\n            } else {\n                this.redirectToContactPage(true);\n            }\n\n            return changeState;\n        };\n        perspectiveCalculation = () =>{\n            let changeState = {};\n            let ratio_WallA_WallB = this.state.wall_a / this.state.wall_b;\n            let ratio_screen_height_width = this.state.screenHeight/this.state.screenWidth;\n            //let boxZoomFactor;\n            if(ratio_WallA_WallB >= 1) {\n                //WallA is larger than WallB\n                if(ratio_screen_height_width > 1){\n                    //Where screen height is larger than width...\n                    changeState[\"perceptualMaxLength\"] = this.screenWidth/2;\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"] / ratio_WallA_WallB;\n                }else{\n                    //Where screen width is larger than height...\n                    changeState[\"perceptualMaxLength\"] = this.screenHeight/2;\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"] / ratio_WallA_WallB;\n                }\n                let actualThickness = ((this.state.normalLength / this.state.wall_a) * this.state.thickness);\n                changeState[\"perceptualWallThickness\"] = changeState[\"perceptualWallA\"] * (actualThickness/this.state.wall_a);\n                changeState[\"perceptualWallThickness\"] = this.checkPerceptualWallThickness(changeState[\"perceptualWallThickness\"]);\n                let actualPadding = ((this.state.normalLength / this.state.wall_a) * this.state.containerPadding);\n                changeState[\"perceptualContainerPadding\"] = changeState[\"perceptualWallA\"] * (actualPadding / this.state.wall_a);\n                changeState[\"perceptualContainerPadding\"] = this.checkPerceptualPadding(changeState[\"perceptualContainerPadding\"]);\n\n            }else{\n                //WallB is larger than WallA\n\n                if(ratio_screen_height_width > 1){\n                    //Where screen height is larger than width...\n                    changeState[\"perceptualMaxLength\"]  = this.screenWidth/2;\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"] * ratio_WallA_WallB;\n                }else{\n                    //Where screen width is larger than height...\n                    changeState[\"perceptualMaxLength\"] = this.screenHeight/2;\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"] * ratio_WallA_WallB;\n                }\n                let actualThickness = ((this.state.normalLength / this.state.wall_b) * this.state.thickness);\n                changeState[\"perceptualWallThickness\"] = changeState[\"perceptualWallB\"] * (actualThickness/this.state.wall_b);\n                changeState[\"perceptualWallThickness\"] = this.checkPerceptualWallThickness(changeState[\"perceptualWallThickness\"]);\n                let actualPadding = ((this.state.normalLength / this.state.wall_b) * this.state.containerPadding);\n                changeState[\"perceptualContainerPadding\"] = changeState[\"perceptualWallB\"] * (actualPadding/this.state.wall_b);\n                changeState[\"perceptualContainerPadding\"] = this.checkPerceptualPadding(changeState[\"perceptualContainerPadding\"]);\n                //zoom = changeState[\"perceptualWallB\"] / this.state.wall_b;\n                //boxZoomFactor = this.state.wall_b / changeState[\"perceptualWallB\"];\n                //zoom = (this.state.normalLength / this.state.wall_b);\n            }\n\n\n            //TODO : box height\n\n\n\n\n\n\n\n\n            //Box A - Height & Width...\n            changeState[\"perceptualWallC1\"] = changeState[\"perceptualWallA\"] * (this.state.wall_c1/this.state.wall_a);\n            changeState[\"perceptualWallC2\"] = changeState[\"perceptualWallA\"] * (this.state.wall_c2/this.state.wall_a);\n            return changeState;\n        };\n        getRequireBoxesAndDirection = () => {\n            let boxA = false;\n            let boxB = false;\n            let boxDirectionLeft = this.state.wall_c1 >= this.state.wall_c2;\n            if (this.state.totalBoxes === 2) {\n                let searchMaxHeight;\n                let searchMaxWidth;\n                    //For Box b - (vertically - height)\n                      searchMaxHeight = this.state.wall_b - (this.state.containerPadding * 2);\n                      searchMaxWidth = this.state.wall_a - (this.state.containerPadding * 2);\n                      let rack = getClosestMinimumSizeRack(this.props.boxes, searchMaxWidth, searchMaxHeight);\n                      if(rack){\n                          boxB = rack;\n\n                          //For Box a - (horizontally - width)\n                          searchMaxHeight = this.state.wall_a - (this.state.containerPadding * 2) - boxB.width;\n                          searchMaxWidth = this.state.wall_b - (this.state.containerPadding * 2);\n\n                          rack = getClosestMinimumSizeRack(this.props.boxes, searchMaxWidth, searchMaxHeight);\n                          if(rack){\n                              boxA = rack;\n                          }\n                      }\n            }else if(this.state.totalBoxes === 1){\n                let searchMaxHeight;\n                let searchMaxWidth;\n                //For Box b - (vertically - height)\n                searchMaxHeight = this.state.wall_b - (this.state.containerPadding * 2);\n                searchMaxWidth = this.state.wall_a - (this.state.containerPadding * 2);\n\n                let rack = getClosestMinimumSizeRack(this.props.boxes, searchMaxWidth, searchMaxHeight);\n                if(rack){\n                    boxA = rack;\n                }\n            }\n\n            return {\n                boxes: {\n                    a: boxA,\n                    b: boxB\n                },\n                isBoxDirectionLeft: boxDirectionLeft\n            };\n        };\n        drawBoxEdges = () =>{\n            let changeState = {};\n            setHeight(this.dom_omgContainer, {height: this.state.perceptualWallB - this.state.perceptualWallThickness});\n            setWidth(this.dom_omgContainer, {width: this.state.perceptualWallA - this.state.perceptualWallThickness});\n\n            let containerOffset = getOffset(this.dom_omgContainer);\n\n            //For right & left wall only...\n            let elOffset = getOffset(this.dom_wall_right);\n            let wall_fixed_height = containerOffset.height + (this.state.perceptualWallThickness * 2) - 0.5;\n\n            //Left Wall...\n            setWidth(this.dom_wall_left, {width: this.state.perceptualWallThickness});\n            setLeft(this.dom_wall_left,containerOffset,true);\n            setTop(this.dom_wall_left,containerOffset, true);\n            setHeight(this.dom_wall_left, {height: wall_fixed_height});\n\n            //Right Wall...\n            setWidth(this.dom_wall_right, {width: this.state.perceptualWallThickness});\n            setRight(this.dom_wall_right,{right:containerOffset.right + 1});\n            setTop(this.dom_wall_right, containerOffset, true);\n            setHeight(this.dom_wall_right, {height: wall_fixed_height});\n\n            //Top Wall...\n            setHeight(this.dom_wall_top, {height: this.state.perceptualWallThickness});\n            setLeft(this.dom_wall_top,containerOffset);\n            setTop(this.dom_wall_top, containerOffset, false, true);\n            setWidth(this.dom_wall_top, {width: containerOffset.width + 1});\n\n            //Bottom Left Wall...\n            setHeight(this.dom_wall_bottom_left, {height: this.state.perceptualWallThickness});\n            setLeft(this.dom_wall_bottom_left,containerOffset);\n            setBottom(this.dom_wall_bottom_left, containerOffset, false, false);\n            setWidth(this.dom_wall_bottom_left, { width: this.state.perceptualWallC1 });\n\n            //Bottom Right Wall...\n            setHeight(this.dom_wall_bottom_right, {height: this.state.perceptualWallThickness});\n            setBottom(this.dom_wall_bottom_right, containerOffset);\n            setWidth(this.dom_wall_bottom_right, { width: this.state.perceptualWallC2});\n            setRightInner(this.dom_wall_bottom_right, {right: containerOffset.right + 1 });\n\n\n            //Set Input of WALL A\n            let offsetWallTop = getOffset(this.dom_wall_top);\n            setTop(this.dom_input_wall_a, {top: offsetWallTop.top-5}, false, true);\n\n            //Set Input of WALL B\n            let offsetWallLeft = getOffset(this.dom_wall_left);\n            setLeft(this.dom_input_wall_b, {left: offsetWallLeft.left}, true, false);\n\n            //Set Input of WALL C1\n            let offsetWallBottomLeft = getOffset(this.dom_wall_bottom_left);\n            let offsetWallBottomRight = getOffset(this.dom_wall_bottom_right);\n            let offsetWallRight = getOffset(this.dom_wall_right);\n\n            setBottom(this.dom_input_wall_c1, {bottom: offsetWallBottomLeft.bottom+50}, false, true);\n            setLeft(this.dom_input_wall_c1, {left: offsetWallBottomLeft.left}, false, true);\n\n            //Set Input of WALL C2\n            setBottom(this.dom_input_wall_c2, {bottom: offsetWallBottomLeft.bottom+50}, false, true);\n            setRight(this.dom_input_wall_c2, {right: offsetWallRight.left}, false, true);\n\n            return changeState;\n        };\n        smartPlaceBoxes = ()=>{\n            let changeState = {};\n\n            let containerCurrentOffset = getOffset(this.dom_omgContainerPadding);\n            let containerActualOffset = {\n                width: this.state.wall_a - (this.state.containerPadding * 2),\n                height: this.state.wall_b - (this.state.containerPadding * 2)\n            };\n\n            if(this.state.totalBoxes === 2){\n                changeState[\"perceptualBoxAHeight\"] = (containerCurrentOffset.height / containerActualOffset.height) * this.state.boxes.a.width - 2;\n                changeState[\"perceptualBoxAWidth\"] = (containerCurrentOffset.width / containerActualOffset.width) * this.state.boxes.a.height  - 2;\n\n                changeState[\"perceptualBoxBHeight\"] = (containerCurrentOffset.height / containerActualOffset.height) * this.state.boxes.b.height - 2;\n                changeState[\"perceptualBoxBWidth\"] = (containerCurrentOffset.width / containerActualOffset.width) * this.state.boxes.b.width - 2;\n            }else if (this.state.totalBoxes === 1) {\n                changeState[\"perceptualBoxAHeight\"] = (containerCurrentOffset.height / containerActualOffset.height) * this.state.boxes.a.height - 2;\n                changeState[\"perceptualBoxAWidth\"] = (containerCurrentOffset.width / containerActualOffset.width) * this.state.boxes.a.width - 2;\n            }\n\n\n            if(this.state.totalBoxes === 2) {\n                this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n\n                let containerOffset = getOffset(this.dom_omgContainerPadding);\n                let box1_offset = getOffset(this.dom_box1_dom);\n                let box2_offset = getOffset(this.dom_box2_dom);\n\n\n                    if(this.state.isBoxDirectionLeft){\n                        box2_offset.left = containerOffset.left + 1;\n                        box2_offset.top = containerOffset.top  + 1;\n\n                        box1_offset.left = containerOffset.left + changeState[\"perceptualBoxBWidth\"] + 1;\n                        box1_offset.top = containerOffset.top  + 1;\n                    }else{\n                        box2_offset.right = containerOffset.right - 1;\n                        box2_offset.width = changeState[\"perceptualBoxBWidth\"];\n                        box2_offset.left = box2_offset.right - box2_offset.width;\n                        box2_offset.top = containerOffset.top + 1;\n\n                        box1_offset.width = changeState[\"perceptualBoxAWidth\"];\n                        box1_offset.right = box2_offset.right;\n                        box1_offset.left = containerOffset.right - 1 - box2_offset.width - box1_offset.width;\n                        box1_offset.top = containerOffset.top + 1;\n                        //box1_offset.bottom = box1_offset.top + box1_offset.height;\n                    }\n\n                setLeft(this.dom_box1_dom, box1_offset);\n                setTop(this.dom_box1_dom, box1_offset);\n\n                setLeft(this.dom_box2_dom, box2_offset);\n                setTop(this.dom_box2_dom, box2_offset);\n            }else{\n                this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n\n                let containerOffset = getOffset(this.dom_omgContainerPadding);\n                let box1_offset = getOffset(this.dom_box1_dom);\n\n                box1_offset.left = containerOffset.left + 1;\n                box1_offset.top = containerOffset.top + 1;\n                box1_offset.right = box1_offset.left + this.perceptiveBoxAWidth;\n                box1_offset.bottom = containerOffset.bottom + this.perceptiveBoxAHeight;\n\n                setLeft(this.dom_box1_dom, box1_offset);\n                setTop(this.dom_box1_dom, box1_offset);\n            }\n            return changeState;\n        };\n\n        onChangeWallACalculateC1AndC2 = (wall_a) =>{\n            let available_space_for_c1_and_c2 = wall_a - 90;\n\n            if(\n                this.state.wall_c1 < 0 ||\n                this.state.wall_c2 < 0 ||\n                this.state.wall_c1 + this.state.wall_c2 > available_space_for_c1_and_c2\n            ){\n                let wall_c1 = available_space_for_c1_and_c2;\n                let wall_c2 = 0;\n                this.setState({\n                    wall_c1,\n                    input_wall_c1: wall_c1,\n                    wall_c2,\n                    input_wall_c2: wall_c2\n                });\n                this.perspectiveCalculation();\n            }\n        };\n        onChangeWallC1CalculateC1AndC2 = (int_WallC1) =>{\n            let int_WallC2 = parseInt(this.state.wall_c2);\n            let int_WallA = parseInt(this.state.wall_a);\n            let available_space_for_c1_and_c2 = int_WallA - 90;\n            if(\n                int_WallC1 < 0 ||\n                int_WallC2 < 0 ||\n                int_WallC1 + int_WallC2 > available_space_for_c1_and_c2\n            ){\n                int_WallC1 = available_space_for_c1_and_c2;\n                int_WallC2 = 0;\n                this.setState({\n                    int_WallC1,\n                    input_wall_c1: int_WallC1,\n                    int_WallC2,\n                    input_wall_c2: int_WallC2\n                });\n                //this.perspectiveCalculation();\n            }\n        };\n        onChangeWallsCalculateC1AndC2 = () =>{\n            let int_WallC1 = parseInt(this.state.wall_c1);\n            let int_WallC2 = parseInt(this.state.wall_c2);\n            let int_WallA = parseInt(this.state.wall_a);\n            let available_space_for_c1_and_c2 = int_WallA - 90;\n            if(\n                int_WallC1 < 0 ||\n                int_WallC2 < 0 ||\n                int_WallC1 + int_WallC2 > available_space_for_c1_and_c2\n            ){\n\n                int_WallC1 = available_space_for_c1_and_c2;\n                int_WallC2 = 0;\n                this.setState({\n                    int_WallC1,\n                    input_wall_c1: int_WallC1,\n                    int_WallC2,\n                    input_wall_c2: int_WallC2\n                });\n                this.perspectiveCalculation();\n            }\n        };\n        refreshScreenLengths = (updateState = false)=>{\n            let changeState = {};\n\n            let screenHeight = window.innerHeight;\n            let screenWidth = window.innerWidth;\n\n            this.screenHeight = screenHeight;\n            this.screenWidth = screenWidth;\n\n            changeState = {\n                screenHeight,\n                screenWidth\n            };\n\n            if(updateState === true){\n                this.setState({...changeState, ...{\n                    do_WallRuleUpdate: true,\n                    do_DrawBoxEdges: true,\n                    do_PerseptualCalculation: true,\n                    do_SmartPlaceBoxes: true,\n                }});\n            }else {\n                return changeState;\n            }\n        };\n\n        onSubmitEntry = (e)=>{\n            e.preventDefault(true);\n            let containerOffset = getOffset(this.dom_omgContainer);\n            getScreenshotOfElement(this.dom_omgContainer,0, 0, containerOffset.width, containerOffset.height, (log)=>{\n                console.log(log);\n            }).then(canvas => {\n                let doc = document.querySelector('.container-fluid.omg-part.omg-part-2');\n                doc.appendChild(canvas);\n                //let image_url = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");  // here is the most important part because if you dont replace you will get a DOM 18 exception.\n                console.log(\"getScreenshotOfElement() => \",{canvas});\n                let screenshot = dataURLtoFile(canvas.toDataURL(), 'screenshot');\n                console.log(setScreenshotFile(canvas.toDataURL()));\n                this.props.dispatch(setScreenshotFile(canvas.toDataURL()));\n\n                let dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                let dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n                let box1_offset = getOffset(dom_box1_dom);\n                let box2_offset = getOffset(dom_box2_dom);\n                this.props.dispatch(setGlobalData({...this.state, box1_offset: box1_offset, box2_offset: box2_offset}));\n                this.props.dispatch(setQuote(this.state.wall_a, this.state.wall_b, this.state.wall_c1, this.state.wall_c2));\n                this.setState({do_redirectToContact: true});\n            });\n\n            /*let dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n            let dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n            let box1_offset = getOffset(dom_box1_dom);\n            let box2_offset = getOffset(dom_box2_dom);\n            this.props.dispatch(setGlobalData({...this.state, box1_offset: box1_offset, box2_offset: box2_offset}));\n            this.props.dispatch(setQuote(this.state.wall_a, this.state.wall_b, this.state.wall_c1, this.state.wall_c2));\n            this.setState({do_redirectToContact: true});*/\n        };\n    //Move Functions...\n        // calculate relative position to the mouse and set dragging=true\n        onMouseDown_Box1 = (e) => {\n            this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n            let cursorPosition = {x: e.pageX, y: e.pageY};\n            if (e.button !== 0) return;\n            let pos = getOffset(e.target);\n            this.dragging = true;\n            this.dragBox1 = true;\n            this.dragBox2 = false;\n\n            this.relativeDistance = {\n                x: cursorPosition.x - pos.left,\n                y: cursorPosition.y - pos.top\n            };\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        onMouseDown_Box2 = (e) => {\n            this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n            let cursorPosition = {x: e.pageX, y: e.pageY};\n            if (e.button !== 0) return;\n            let pos = getOffset(e.target);\n            this.dragging = true;\n            this.dragBox1 = false;\n            this.dragBox2 = true;\n\n            this.relativeDistance = {\n                x: cursorPosition.x - pos.left,\n                y: cursorPosition.y - pos.top\n            };\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        haveBoxCollision = (box_type, currentCursorPosition) => {\n            let have_collision = false;\n\n            let container_offset = getOffset(this.dom_omgContainerPadding);\n\n\n            let bottom_below_top;\n            let bottom_below_bottom;\n            let top_above_top;\n            let top_above_bottom;\n            let left_lefted_left;\n            let left_righted_left;\n            let left_lefted_right;\n            let right_righted_right;\n            let right_lefted_right;\n            let right_righted_left;\n\n            switch(box_type) {\n                case 1:\n                    let box1_future_offset = getOffset(this.dom_box1_dom);\n                    let box2_current_offset = getOffset(this.dom_box2_dom);\n\n                    box1_future_offset.left = currentCursorPosition.x - this.relativeDistance.x;\n                    box1_future_offset.top = currentCursorPosition.y - this.relativeDistance.y;\n                    box1_future_offset.bottom = box1_future_offset.top + box1_future_offset.height;\n                    box1_future_offset.right = box1_future_offset.left + box1_future_offset.width;\n\n                    if(box2_current_offset) {\n                        bottom_below_top = (box1_future_offset.bottom >= box2_current_offset.top);      //\n                        bottom_below_bottom = (box1_future_offset.bottom >= box2_current_offset.bottom);    //\n                        top_above_top = (box1_future_offset.top <= box2_current_offset.top);    //\n                        top_above_bottom = (box1_future_offset.top < box2_current_offset.bottom);  //\n                        left_lefted_left = (box1_future_offset.left <= box2_current_offset.left);   //\n                        left_righted_left = (box1_future_offset.left >= box2_current_offset.left);   //\n                        left_lefted_right = (box1_future_offset.left <= box2_current_offset.right);     //\n                        right_righted_right = (box1_future_offset.right >= box2_current_offset.right);  //\n                        right_lefted_right = (box1_future_offset.right <= box2_current_offset.right);  //\n                        right_righted_left = (box1_future_offset.right >= box2_current_offset.left);    //\n\n                        if (bottom_below_top && top_above_bottom) {\n                            if (left_lefted_left && right_righted_left) {\n                                have_collision = true;\n                            }\n                            if (left_righted_left && right_lefted_right) {\n                                have_collision = true;\n                            }\n                            if (right_righted_right && left_lefted_right) {\n                                have_collision = true;\n                            }\n                        } else if (right_righted_left && left_lefted_right) {\n                            if (top_above_top && bottom_below_top) {\n                                have_collision = true;\n                            }\n                            if (bottom_below_bottom && top_above_bottom) {\n                                have_collision = true;\n                            }\n                        }\n                    }\n\n                    if(\n                        box1_future_offset.left < container_offset.left\n                        ||\n                        box1_future_offset.top < container_offset.top\n                        ||\n                        box1_future_offset.right > container_offset.right\n                        ||\n                        box1_future_offset.bottom > container_offset.bottom\n                    ){\n                        have_collision = true;\n                    }\n\n                    break;\n                case 2:\n                    let box2_future_offset = getOffset(this.dom_box2_dom);\n                    let box1_current_offset = getOffset(this.dom_box1_dom);\n\n                    box2_future_offset.left = currentCursorPosition.x - this.relativeDistance.x;\n                    box2_future_offset.top = currentCursorPosition.y - this.relativeDistance.y;\n                    box2_future_offset.bottom = box2_future_offset.top + box2_future_offset.height;\n                    box2_future_offset.right = box2_future_offset.left + box2_future_offset.width;\n\n                    bottom_below_top = (box2_future_offset.bottom >= box1_current_offset.top);      //\n                    bottom_below_bottom = (box2_future_offset.bottom >= box1_current_offset.bottom);    //\n                    top_above_top = (box2_future_offset.top <= box1_current_offset.top);    //\n                    top_above_bottom = (box2_future_offset.top <= box1_current_offset.bottom);  //\n                    left_lefted_left = (box2_future_offset.left <= box1_current_offset.left);   //\n                    left_righted_left = (box2_future_offset.left >= box1_current_offset.left);\n                    left_lefted_right = (box2_future_offset.left <= box1_current_offset.right);     //\n                    right_righted_right = (box2_future_offset.right >= box1_current_offset.right);  //\n                    right_lefted_right = (box2_future_offset.right <= box1_current_offset.right);\n                    right_righted_left = (box2_future_offset.right >= box1_current_offset.left);    //\n\n\n                    if (bottom_below_top && top_above_bottom) {\n                        if (left_lefted_left && right_righted_left) {\n                            have_collision = true;\n                        }\n                        if (left_righted_left && right_lefted_right) {\n                            have_collision = true;\n                        }\n                        if (right_righted_right && left_lefted_right) {\n                            have_collision = true;\n                        }\n                    }else if (right_righted_left && left_lefted_right) {\n                        if (top_above_top && bottom_below_top) {\n                            have_collision = true;\n                        }\n                        if (bottom_below_bottom && top_above_bottom) {\n                            have_collision = true;\n                        }\n                    }\n\n                    if(\n                        box2_future_offset.left < container_offset.left\n                        ||\n                        box2_future_offset.top < container_offset.top\n                        ||\n                        box2_future_offset.right > container_offset.right\n                        ||\n                        box2_future_offset.bottom > container_offset.bottom\n                    ){\n                        have_collision = true;\n                    }\n                    break;\n            }\n            return have_collision;\n        };\n\n        onDragBox2 = (cursorPosition) => {\n            if(!this.haveBoxCollision(2, cursorPosition)) {\n                setLeft(this.dom_box2_dom, {left: cursorPosition.x - this.relativeDistance.x});\n                setTop(this.dom_box2_dom, {top: cursorPosition.y - this.relativeDistance.y});\n            }\n        };\n\n        onDragBox1 = (cursorPosition) => {\n            if(!this.haveBoxCollision(1, cursorPosition)){\n                setLeft(this.dom_box1_dom, {left: cursorPosition.x - this.relativeDistance.x});\n                setTop(this.dom_box1_dom, {top: cursorPosition.y - this.relativeDistance.y});\n            }\n        };\n\n        onMouseUp = (e) => {\n            if(this.dragging){\n                let box_pos_data = {\n                    box1_offset: this.state.box1_offset,\n                    box2_offset: this.state.box2_offset\n                };\n\n                if(this.dragBox1){\n                    let box1_offset = getOffset(this.dom_box1_dom);\n                    box_pos_data.box1_offset = box1_offset;\n                }\n\n                if(this.dragBox2){\n                    let box2_offset = getOffset(this.dom_box2_dom);\n                    box_pos_data.box2_offset = box2_offset;\n                }\n\n                this.dragging = false;\n                this.dragBox1 = false;\n                this.dragBox2 = false;\n            }\n\n            this.relativeDistance = {\n                x: 0,\n                y: 0\n            };\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        relativeDistance = {\n            x: 0,\n            y: 0\n        };\n\n        onMouseMove = (e) => {\n            let cursorPosition = {x: e.pageX, y: e.pageY};\n            if (!this.dragging) return;\n\n            //let container_offset = getOffset(this.dom_omgContainer);\n\n            if(this.dragBox1){\n                this.onDragBox1(cursorPosition);\n            }else if(this.dragBox2){\n                this.onDragBox2(cursorPosition);\n            }\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        getRenderBoxes = () => {\n            if(this.state.totalBoxes === 2) {\n                return (\n                    <Fragment>\n                        <div style={{\n                            height: this.state.perceptualBoxAHeight,\n                            width: this.state.perceptualBoxAWidth,\n                            left: this.state.boxALeft,\n                            top: this.state.boxATop, ...box_styles\n                        }} onMouseDown={this.onMouseDown_Box1} className=\"box box-a\">\n                            Box A\n                        </div>\n                        <div style={{\n                            height: this.state.perceptualBoxBHeight,\n                            width: this.state.perceptualBoxBWidth,\n                            left: this.state.boxBLeft,\n                            top: this.state.boxBTop, ...box_styles\n                        }} onMouseDown={this.onMouseDown_Box2} className=\"box box-b\">\n                            Box B\n                        </div>\n                    </Fragment>\n                );\n            }else if(this.state.totalBoxes === 1){\n                return (\n                    <Fragment>\n                        <div style={{\n                            height: this.state.perceptualBoxAHeight,\n                            width: this.state.perceptualBoxAWidth,\n                            left: this.state.boxALeft,\n                            top: this.state.boxATop, ...box_styles\n                        }} onMouseDown={this.onMouseDown_Box1} className=\"box box-a\">\n                            Box A\n                        </div>\n                    </Fragment>\n                );\n            }else{\n                return false;\n            }\n        };\n\n        getRenderData = () => {\n                return (\n                    <Fragment>\n                        <div className=\"container-fluid omg-parts\">\n                            <div className=\"container-fluid omg-part omg-part-1\">\n                                <div className=\"omg-area\">\n                                    <input type=\"number\" onChange={this.onChangeWallA} onBlur={this.onBlurWallA} min=\"90\" max=\"360\" className=\"form-control\" id=\"lengthOfWallA\" placeholder=\"Length of wall A\" value={this.state.input_wall_a}/>\n                                    <input type=\"number\" onChange={this.onChangeWallB} onBlur={this.onBlurWallB} min=\"90\" max=\"360\" className=\"form-control\" id=\"lengthOfWallB\" placeholder=\"Length of wall B\" value={this.state.input_wall_b}/>\n                                    <input type=\"number\" onChange={this.onChangeWallC1} onBlur={this.onBlurWallC1} min=\"0\" className=\"form-control\" id=\"lengthOfWallC1\" placeholder=\"Length of C1\" value={this.state.input_wall_c1}/>\n                                    <input type=\"number\" onChange={this.onChangeWallC2} onBlur={this.onBlurWallC2} min=\"0\" className=\"form-control\" id=\"lengthOfWallC2\" placeholder=\"Length of C2\" value={this.state.input_wall_c2}/>\n                                    <div className='omg-container' style={{padding: this.state.perceptualContainerPadding}}>\n                                        <div className='container-padding'>\n                                            {this.getRenderBoxes()}\n                                            <div className='wall wall-top'/>\n                                            <div className='wall wall-left'/>\n                                            <div className='wall wall-right'/>\n                                            <div className='wall wall-bottom-right'/>\n                                            <div className='wall wall-bottom-left'/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button onClick={this.onSubmitEntry} className=\"btn btn-primary\">Submit Entry</button>\n                            </div>\n                            <div className=\"container-fluid omg-part omg-part-2\" style={{alignItems: \"unset\"}}>\n                                <Tabs showInkBar={true} onChange={this.onChangeTab} selectedTabKey={this.state.currentTab} items={this.getTabs()} />\n                            </div>\n                        </div>\n                    </Fragment>\n                );\n        };\n\n        onChangeTab = (index) => {\n            this.setState({currentTab: index});\n        };\n\n        getMesurementInfo = ()=>(\n            <Fragment>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-striped table-dark\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Component</th>\n                            <th scope=\"col\">Length</th>\n                            <th scope=\"col\">Depth</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <th scope=\"row\">01.</th>\n                            <td>Wall-A</td>\n                            <td>{this.state.wall_a} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">02.</th>\n                            <td>Wall-B</td>\n                            <td>{this.state.wall_b} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">03.</th>\n                            <td>Wall-C1</td>\n                            <td>{this.state.wall_c1} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">04.</th>\n                            <td>Wall-C2</td>\n                            <td>{this.state.wall_c2} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">05.</th>\n                            <td>Inner Padding (Fixed)</td>\n                            <td>--</td>\n                            <td>{this.state.containerPadding} cms</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">06.</th>\n                            <td>Wall Thickness (Fixed)</td>\n                            <td>--</td>\n                            <td>{this.state.thickness} cms</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">07.</th>\n                            <td>Box-A</td>\n                            <td>{this.state.boxes.a.height} cms</td>\n                            <td>{this.state.boxes.a.width} cms</td>\n                        </tr>\n                        {(this.state.totalBoxes === 2)?\n                            <tr>\n                                <th scope=\"row\">08.</th>\n                                <td>Box-B</td>\n                                <td>{this.state.boxes.b.height} cms</td>\n                                <td>{this.state.boxes.b.width} cms</td>\n                            </tr>\n                        :false}\n                        </tbody>\n                    </table>\n                </div>\n            </Fragment>\n        );\n\n        getAvailableBoxByIndex = (index)=>{\n            return this.props.boxes[index];\n        };\n\n        changeBoxASize = (event) => {\n            let el = event.target;\n            let val = el.options[el.selectedIndex].value;\n            let selectedBox = this.getAvailableBoxByIndex(val);\n            this.changeBoxSize('a', selectedBox);\n        };\n\n        changeBoxBSize = (event) => {\n            let el = event.target;\n            let val = el.options[el.selectedIndex].value;\n            let selectedBox = this.getAvailableBoxByIndex(val);\n            this.changeBoxSize('b', selectedBox);\n        };\n\n        changeBoxSize = (box_label,selectedBox)=>{\n            let stateBoxes = {...this.state.boxes};\n            let refine_box_data = {height: selectedBox.length, width: selectedBox.depth};\n            let final_data = {\n                boxes: stateBoxes,\n                do_WallRuleUpdate: true,\n                do_DrawBoxEdges: true,\n                do_PerseptualCalculation: true,\n                do_SmartPlaceBoxes: true,\n            };\n            switch(box_label){\n                case \"a\":\n                    stateBoxes.a = refine_box_data;\n                    break;\n                case \"b\":\n                    stateBoxes.b = refine_box_data;\n                    break;\n            }\n            final_data.boxes = stateBoxes;\n            this.setState(final_data);\n        };\n\n\n    //Box A control events...\n        onClick_increaseBoxA_width = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n            this.consoleTest('Box-A increase width...');\n\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.depth > current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                //this.props.dispatch(sendNotification(\"The depth more than \"+current_box.width+\"cm is not available for Box-A.\",-1));\n                this.props.dispatch(sendNotification(\"Sorry other boxes with different sizes will not fit into this room.\",-1));\n            }\n        };\n\n        onClick_increaseBoxA_height = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n            this.consoleTest('Box-A increase height...');\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.length > current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"Sorry other boxes with different sizes will not fit into this room.\",-1));\n                //this.props.dispatch(sendNotification(\"The height more than \"+current_box.height+\"cm is not available for Box-A.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxA_width = ()=>{\n            this.consoleTest('Box-A decrease width...');\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n\n            let nextAvailableBox = false;\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.depth < current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The depth less than \"+current_box.width+\"cm is not available for Box-A.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxA_height = ()=>{\n            this.consoleTest('Box-A decrease height...');\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n\n            let nextAvailableBox = false;\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.length < current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The height less than \"+current_box.height+\"cm is not available for Box-A.\",-1));\n            }\n        };\n\n\n    //Box B control events...\n        onClick_increaseBoxB_width = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n            this.consoleTest('Box-B increase width...');\n\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.depth > current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The depth more than \"+current_box.width+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n        onClick_increaseBoxB_height = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n            this.consoleTest('Box-B increase height...');\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.length > current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The height more than \"+current_box.height+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxB_width = ()=>{\n            this.consoleTest('Box-B decrease width...');\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n\n            let nextAvailableBox = false;\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.depth < current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The depth less than \"+current_box.width+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxB_height = ()=>{\n            this.consoleTest('Box-B decrease height...');\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n\n            let nextAvailableBox = false;\n\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.length < current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The height less than \"+current_box.height+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n\n        getBoxControls = ()=>(\n            <Fragment>\n                <div className=\"table-responsive\">\n                    <table style={{textAlign: 'center'}} className=\"table table-striped table-dark\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Box</th>\n                            <th scope=\"col\">Depth & Length</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <th scope=\"row\">01.</th>\n                            <td>Box-A</td>\n                            <td>\n                                <select onChange={this.changeBoxASize} className=\"form-control\">\n                                    {this.props.boxes.map((box, index1) => {\n                                        let selectedBoxA = this.state.boxes.a;\n                                        let isSelected = (selectedBoxA.height === box.length) && (selectedBoxA.width === box.depth);\n                                        if(box.enable) {\n                                            return <option value={index1} selected={isSelected}>{box.depth}cm, {box.length}cm</option>;\n                                        }else{\n                                            return <option disabled={true} value={index1}>{box.depth}cm, {box.length}cm</option>;\n                                        }\n                                    })}\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">02.</th>\n                            <td>Box-A</td>\n                            <td>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <td>Depth</td>\n                                            <td>Length</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                    <button onClick={this.onClick_increaseBoxA_width.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                    <button onClick={this.onClick_decreaseBoxA_width.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                    <button onClick={this.onClick_increaseBoxA_height.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                    <button onClick={this.onClick_decreaseBoxA_height.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                        {(this.state.totalBoxes === 2)?\n                            <Fragment>\n                                <tr>\n                                    <th scope=\"row\">03.</th>\n                                    <td>Box-B</td>\n                                    <td>\n                                        <select onChange={this.changeBoxBSize} className=\"form-control\">\n                                            {this.props.boxes.map((box, index1) => {\n                                                let selectedBoxB = this.state.boxes.b;\n                                                let isSelected = (selectedBoxB.height === box.length) && (selectedBoxB.width === box.depth);\n                                                if(box.enable) {\n                                                    return <option value={index1} selected={isSelected}>{box.depth}cm, {box.length}cm</option>;\n                                                }else{\n                                                    return <option disabled={true} value={index1}>{box.depth}cm, {box.length}cm</option>;\n                                                }\n                                            })}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">04.</th>\n                                    <td>Box-B</td>\n                                    <td>\n                                        <table>\n                                            <thead>\n                                            <tr>\n                                                <td>Depth</td>\n                                                <td>Length</td>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            <tr>\n                                                <td>\n                                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                        <button onClick={this.onClick_increaseBoxB_width.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                        <button onClick={this.onClick_decreaseBoxB_width.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                        <button onClick={this.onClick_increaseBoxB_height.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                        <button onClick={this.onClick_decreaseBoxB_height.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </td>\n                                </tr>\n                            </Fragment>\n                            :false}\n                        </tbody>\n                    </table>\n                </div>\n            </Fragment>\n        );\n\n        getInstructionInfo = ()=>(\n            <Fragment>\n                <div className=\"alert alert-info\" role=\"alert\">\n                    <h4 className=\"alert-heading\">Well done! NOW,</h4>\n                    <p>Click on the box to change the size or drag them around to re-arrange them.</p>\n                    <hr/>\n                    <p className=\"mb-0\">Any confusion please <a href=\"#\" onClick={()=>{this.setState({do_redirectToContact: true})}}>contact us</a>.</p>\n                </div>\n            </Fragment>\n        );\n\n        getBoxAvailibilityInfo = ()=>{\n            return (\n                <Fragment>\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-striped table-dark\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Depth</th>\n                                    <th scope=\"col\">Length</th>\n                                    <th scope=\"col\">Availability ?</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.boxes.map(({depth, length, enable}, index) => {\n                                   return (\n                                       <tr className={enable?'':'in-active'} key={index} aria-disabled={true}>\n                                           <th scope=\"row\">{index + 1}.</th>\n                                           <td>{depth} cms</td>\n                                           <td>{length} cms</td>\n                                           <td>{enable?'Available':'Not Available'}</td>\n                                       </tr>\n                                   );\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </Fragment>\n            );\n        };\n\n        getTabs = () => {\n            this.consoleApp('State', this.state);\n            this.consoleApp('Props', this.props);\n            const tabs = [\n                { name: 'Instructions.', content: this.getInstructionInfo() },\n                { name: 'Controls.', content: this.getBoxControls() },\n                { name: 'Advance Info.', content: this.getMesurementInfo() },\n                { name: 'Box Availibilities.', content: this.getBoxAvailibilityInfo() }];\n            return tabs.map((president, index) => ({\n                title: president.name,\n                getContent: () => president.content,\n                key: index,\n                tabClassName: 'tab',\n                panelClassName: 'panel',\n            }));\n        };\n\n\n\n    //Render Layout...\n    render(){\n        return(\n            <Fragment>\n                {(!this.props.app.is_quote_selected)?this.redirectToHomePage(true):false}\n                {this.redirectToContactPage(this.props.app.redirect_to_contact_page || this.state.do_redirectToContact)}\n                {this.getRenderData()}\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(store=>({boxes: store.box.boxes, notification: store.notification, quote: store.quote, app: store.app}), dispatch => ({dispatch}))(SelfService);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {setQuote, clearResult as clearQuote} from '../../actions/ActionQuote';\nimport {removeSpecialCase, setSpecialCase, isQuotActive, setNewHistory, setHistory} from '../../actions/ActionApp';\n\nimport {sendNotification} from '../../actions/Notification';\nimport {Redirect} from \"react-router-dom\";\n\nconst redirectToQuotationPage = (bool)=> {\n    return (bool) ? <Redirect to={{ pathname: '/self-service', state: {redirect_back_path: '/'} }}/> : false;\n};\nconst redirectToContactPage = (bool)=> {\n    return (bool) ? <Redirect to={{ pathname: '/contact', state: {redirect_back_path: '/'} }}/> : false;\n}; \nconst getTrimmedString = (str) => {\n    if(typeof str == \"string\"){\n        return str.trim();\n    }else{\n        return str;\n    }\n};\n\nclass QuoteSelection extends Component{\n\n    state = {\n      wall_a: \"\",\n      wall_b: \"\",\n      wall_c1: \"\",\n      wall_c2: \"\",\n\n      redirect_quotation: false,\n      redirect_contact: false\n    };\n\n    componentDidMount() {\n        if(this.props.app.history[this.props.app.currentHistoryIndex] !== \"/\") {\n            this.props.dispatch(setHistory('0',['/']));\n        }\n    }\n\n    onClickSubmit = (e)=>{\n        e.preventDefault();\n        this.props.dispatch(clearQuote());\n        let wall_a = getTrimmedString(this.state.wall_a);\n        let wall_b = getTrimmedString(this.state.wall_b);\n        let wall_c1 = getTrimmedString(this.state.wall_c1);\n        let wall_c2 = getTrimmedString(this.state.wall_c2);\n\n        if((!wall_a || wall_a.length <= 0) && (wall_a !== 0 || wall_a !== \"0\")){\n            wall_a = false;\n        }else{\n            wall_a = parseInt(wall_a);\n        }\n        if((!wall_b || wall_b.length <= 0) && (wall_b !== 0 || wall_b !== \"0\")){\n            wall_b = false;\n        }else{\n            wall_b = parseInt(wall_b);\n        }\n        if((!wall_c1 || wall_c1.length <= 0) && (wall_c1 !== 0 || wall_c1 !== \"0\")){\n            wall_c1 = false;\n        }else{\n            wall_c1 = parseInt(wall_c1);\n        }\n        if((!wall_c2 || wall_c2.length <= 0) && (wall_c2 !== 0 || wall_c2 !== \"0\")){\n            wall_c2 = false;\n        }else{\n            wall_c2 = parseInt(wall_c2);\n        }\n\n        if(!wall_a && !wall_b){\n            this.props.dispatch(setSpecialCase('The value of Wall-A & Wall-B is blank.'));\n            this.props.dispatch(sendNotification(\"Wall-A & Wall-B values is mandatory.\"));\n            this.setState({redirect_contact: true});\n        }else if(!wall_a){\n            this.props.dispatch(setSpecialCase('The value of Wall-A is blank.'));\n            this.props.dispatch(sendNotification(\"Wall-A is value is mandatory.\"));\n            this.setState({redirect_contact: true});\n        }else if(!wall_b){\n            this.props.dispatch(setSpecialCase('The value of Wall-B is blank.'));\n            this.props.dispatch(sendNotification(\"Wall-B is value is mandatory.\"));\n            this.setState({redirect_contact: true});\n        }else if(wall_a > 360 & wall_b > 360){\n            this.props.dispatch(setSpecialCase('Maximum Length of Wall-A & Wall-B is greater than 3.6m.'));\n            this.props.dispatch(sendNotification('Maximum Length of Wall-A & Wall-B is greater than 3.6m.'));\n            this.setState({redirect_contact: true});\n        }else if(wall_a > 360){\n            this.props.dispatch(setSpecialCase('Maximum Length of Wall-A is greater than 3.6m.'));\n            this.props.dispatch(sendNotification('Maximum Length of Wall-A is greater than 3.6m.'));\n            this.setState({redirect_contact: true});\n        }else if(wall_b > 360){\n            this.props.dispatch(setSpecialCase('Maximum Length of Wall-B is greater than 3.6m.'));\n            this.props.dispatch(sendNotification('Maximum Length of Wall-B is greater than 3.6m.'));\n            this.setState({redirect_contact: true});\n        }else{\n            this.props.dispatch(removeSpecialCase());\n            let result = setQuote(wall_a, wall_b, wall_c1, wall_c2);\n            console.log({result});\n            if(result) {\n                this.props.dispatch(result);\n                this.props.dispatch(isQuotActive());\n                this.setState({redirect_quotation: true});\n            }else{\n                this.props.dispatch(sendNotification(\"Wall-A & Wall-B is mandatory, if you have confusion please contact us.\"));\n                this.setState({redirect_contact: true});\n            }\n        }\n    };\n\n    onBlurWallA = ()=>{\n        if(this.state.wall_a.length > 0) {\n            let val = this.state.wall_a;\n            if (val < 1) {\n                this.props.dispatch(sendNotification(\"Please provide Wall-A value correctly.\"));\n                val = 90;\n            } \n            /*else if (val > 360) {\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall A should be less than or equals 3.6m.\"));\n            }*/\n            this.setState({wall_a: val});\n        }else{\n            this.props.dispatch(sendNotification(\"If you have confusion you can contact us.\"));\n        }\n    };\n    onBlurWallB = ()=>{\n        if(this.state.wall_b.length > 0) {\n            let val = this.state.wall_b;\n            if (val < 1) {\n                this.props.dispatch(sendNotification(\"Please provide Wall-B value correctly.\"));\n                val = 90;\n            } \n            /*else if (val > 360) {\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall B should be less than or equals 3.6m.\"));\n            }*/\n            this.setState({wall_b: val});\n        }else{\n            this.props.dispatch(sendNotification(\"If you have confusion you can contact us.\"));\n        }\n    };\n    onBlurWallC1 = ()=>{\n        if(this.state.wall_c1.length > 0) {\n            let val = this.state.wall_c1;\n            if (this.state.wall_a > 0 && this.state.wall_b > 0) {\n                let available_space = this.state.wall_a - 90 - this.state.wall_c2;\n                if (available_space < val) {\n                    if (available_space < 0) {\n                        let c2 = parseInt(this.state.wall_c2) + parseInt(available_space);\n                        this.setState({wall_c2: c2, wall_c1: 0});\n                    } else {\n                        this.setState({wall_c1: available_space});\n                    }\n                    this.props.dispatch(sendNotification(\"C1 & C2 should be equals or less than (Wall-A - 90), where 90cm is the minimum door of the container.\"));\n                } else {\n                    this.setState({wall_c1: val});\n                }\n            } else {\n                this.setState({wall_c1: \"\"});\n                this.props.dispatch(sendNotification(\"Please enter Wall-A & Wall-B value first.\"));\n            }\n        }\n    };\n    onBlurWallC2 = ()=>{\n        if(this.state.wall_c2.length > 0) {\n            let val = this.state.wall_c2;\n            if (this.state.wall_a.length > 0 && this.state.wall_b.length > 0) {\n                let available_space = this.state.wall_a - 90 - this.state.wall_c1;\n                if (available_space < val) {\n                    if (available_space < 0) {\n                        let c1 = parseInt(this.state.wall_c1) + parseInt(available_space);\n                        this.setState({wall_c1: c1});\n                        this.setState({wall_c2: 0});\n                    } else {\n                        this.setState({wall_c2: available_space});\n                    }\n                    this.props.dispatch(sendNotification(\"C1 & C2 should be equals or less than (Wall-A - 90), where 90cm is the minimum door of the container.\"));\n                } else {\n                    this.setState({wall_c2: val});\n                }\n            } else {\n                this.setState({wall_c2: \"\"});\n                this.props.dispatch(sendNotification(\"Please enter Wall-A & Wall-B value first.\"));\n            }\n        }\n    };\n\n    onChangeWallA = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_a: val});\n    };\n    onChangeWallB = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_b: val});\n    };\n    onChangeWallC1 = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_c1: val});\n    };\n    onChangeWallC2 = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_c2: val});\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.onClickSubmit}>\n                {redirectToQuotationPage(this.state.redirect_quotation)}\n                {redirectToContactPage(this.state.redirect_contact)}\n                <div className=\"form-group\">\n                    <label>Enter length of Wall-A (**Mandatory)</label>\n                    <input value={this.state.wall_a} onBlur={this.onBlurWallA} onChange={this.onChangeWallA} type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter length of Wall-B (**Mandatory)</label>\n                    <input value={this.state.wall_b} onBlur={this.onBlurWallB} onChange={this.onChangeWallB}  type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter length of C1</label>\n                    <input value={this.state.wall_c1} onBlur={this.onBlurWallC1} onChange={this.onChangeWallC1} type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter length of C2</label>\n                    <input value={this.state.wall_c2} onBlur={this.onBlurWallC2} onChange={this.onChangeWallC2}  type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <button onClick={this.onClickSubmit} type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default connect(store=>({notification: store.notification, quote: store.quote, app: store.app}), dispatch => ({dispatch}))(QuoteSelection);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {sendNotification} from \"../../actions/Notification\";\n\nimport {Redirect} from 'react-router-dom';\nimport {setNewHistory, RemoveRedirect} from \"../../actions/ActionApp\";\nimport {submitContactData} from '../../actions/ActionAPIS';\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst redirectToHomePage = (bool)=> {\n    return (bool) ? <Redirect to=\"/\"/> : false;\n};\n\nclass ContactPage extends Component{\n    state = {\n        redirect_to: false,\n        full_name: false,\n        email: false,\n        subject: false\n    };\n\n    componentDidMount() {\n        if(this.props.app.history[this.props.app.currentHistoryIndex] !== \"/contact\") {\n            this.props.dispatch(setNewHistory('/contact'));\n        }\n        console.log('componentDidMount() data => ',this.props.data);\n    }\n\n    componentDidUpdate(){\n        let path = this.props.app.redirectToPath;\n        if(path){\n            this.props.dispatch(RemoveRedirect());\n            this.setState({redirect_to: path});\n        }\n    }\n\n    onSubmitForm = (e)=>{\n        e.preventDefault();\n        if(!this.state.full_name){\n            this.props.dispatch(sendNotification(\"Please enter your full name.\", -1));\n        }else if(!this.state.email) {\n            this.props.dispatch(sendNotification(\"Please enter your email.\", -1));\n        }else if(!validateEmail(this.state.email)){\n            this.props.dispatch(sendNotification(\"Please enter valid email.\", -1));\n        }else if(!this.state.subject){\n            this.props.dispatch(sendNotification(\"Please enter your extra requirement.\", -1));\n        }else{\n            let haveSpecialCase = this.props.app.is_special_cases;\n\n            let final_data = {\n                data: this.props.data,\n                screenshot: this.props.screenshot,\n                contact_details: {\n                    full_name: this.state.full_name,\n                    email: this.state.email,\n                    subject: this.state.subject\n                },\n                special: false\n            };\n\n            if(haveSpecialCase){\n                final_data['special'] = this.props.app.reason_special_cases;\n            }\n\n            console.log('submitContactData => ',submitContactData(final_data));\n            this.props.dispatch(submitContactData(final_data));\n            //this.props.dispatch(sendNotification(\"Submitted thank you, we will contact you soon!.\", 1));\n            //this.setState({redirect_to: '/'});\n        }\n        //this.props.dispatch(sendNotification(\"This is an example when submit contact data.\"));\n    };\n    onClickBack = (e) => {\n        let lastRedirectLocation = '/';\n        console.log('contactPage props => ',this.props);\n        if(\n            this.hasOwnProperty('props')\n            && this.props.hasOwnProperty('location')\n            && this.props.location.hasOwnProperty('state')\n            && this.props.location.state.hasOwnProperty('redirect_back_path')\n        ){\n            lastRedirectLocation = this.props.location.state.redirect_back_path;\n        }else{\n            lastRedirectLocation = '/';\n        }\n        this.setState({redirect_to: lastRedirectLocation});\n    };\n\n    specialCases = () =>{\n        if(this.props.app.is_special_cases){\n            return (\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <h2>{this.props.app.reason_special_cases}</h2>\n                </div>\n            );\n        }else{\n            return false;\n        }\n    };\n\n    render() {\n        return (\n            <Fragment>\n                {(this.state.redirect_to !== false)?<Redirect to={this.state.redirect_to}/>:false}\n                <div className='container p-4'>\n                    {/*<div className='row' style={{ 'marginBottom' : '20px', display: \"flex\",\n                        justifyContent: \"center\" }}>\n                        <button onClick={this.onClickBack.bind(this)} type=\"button\" className=\"btn btn-outline-info\">{'<< Back to Main'}</button>\n                    </div>*/}\n                    {\n                        (!!this.props.data)?\n                            <div className=\"jumbotron mb-20\">\n                                <h3 className=\"display-4\">Submit Quote</h3>\n                                <p className=\"lead\">Submit your quotes to admin.</p>\n                            </div>\n                            :\n                            <div className=\"jumbotron mb-20\">\n                                <h3 className=\"display-4\">Contact</h3>\n                                <p className=\"lead\">Submit your enquiry data to admin.</p>\n                            </div>\n                    }\n                    <div className='row' style={{ display: \"flex\",\n                        justifyContent: \"center\" }}>\n                        {\n                            (!!this.props.data)?\n                                <div className=\"col-md-6 col-sm-12\">\n                                    <img className='img-responsive' src={this.props.screenshot}/>\n                                </div>\n                            :false\n                        }\n                        <div className=\"col-md-6 col-sm-12\">\n                            <form onSubmit={this.onSubmitForm.bind(this)}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\">Full Name</label>\n                                <input onChange={e=>{let val = e.target.value; val = val.trim(); if(!val.length){val = false;} console.log({full_name: val}); this.setState({full_name: val})}} className=\"form-control\" name=\"full_name\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                                <input onChange={e=>{let val = e.target.value; val = val.trim(); if(!val.length){val = false;} console.log({email: val}); this.setState({email: val})}} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\">Subject / Requirements</label>\n                                <textarea onChange={e=>{let val = e.target.value; val = val.trim(); if(!val.length){val = false;} console.log({subject: val}); this.setState({subject: val})}} className=\"form-control\" name=\"subject\"/>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n                        </form>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(store=>({notification: store.notification, quote: store.quote, app: store.app, data: store.data.data, screenshot: store.data.screenshot}), dispatch => ({dispatch}))(ContactPage);\n","import React, {Component} from 'react';\n\nclass HomePage extends Component{\n    render(){\n        return(\n            <div>Error Page</div>\n        );\n    }\n}\n\nexport default HomePage;\n","// src/history.js\n\nimport createMemoryHistory from 'history/createMemoryHistory';\n\nexport default createMemoryHistory();\n","import React, {Component} from 'react';\n\nimport Layout from './components/Layout';\nimport SimpleLayout from './components/LayoutSimple';\n\nimport SelfService from './components/Pages/SelfService';\nimport QuoteSelection from './components/Pages/QuoteSelection';\nimport ContactPage from './components/Pages/ContactPage';\nimport Page404 from './components/Pages/404';\nimport { MemoryRouter, Route, Switch } from \"react-router-dom\";\nimport history from './history';\n\nexport default class Routes extends Component {\n    render(){\n        return (\n            <MemoryRouter history={history}>\n                <SimpleLayout>\n                    <Switch>\n                        <Route path=\"/\" exact component={QuoteSelection} />\n                        <Route path=\"/self-service\" exact component={SelfService} />\n                        <Route path=\"/contact\" exact component={ContactPage} />\n                        <Route component={Page404} />\n                    </Switch>\n                </SimpleLayout>\n            </MemoryRouter>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport Routes from \"./Routes\";\n\nexport default class main extends Component{\n    render(){\n        return (\n            <Provider store={store}>\n                <Routes />\n            </Provider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Apps from './Apps';\nimport * as serviceWorker from './serviceWorker';\nimport {is_production} from './Apps/APIS';\n\nlet mode = is_production?'Production':'Development';\nconsole.log('Currently running => '+mode);\nReactDOM.render(<Apps />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}