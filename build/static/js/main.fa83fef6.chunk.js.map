{"version":3,"sources":["assets/imgs/wood.jpg","Apps/APIS.js","Apps/constants/action-types.js","Apps/actions/ActionApp.js","Apps/actions/Notification.js","Apps/sagas/APICalling.js","Apps/actions/ActionBoxes.js","Apps/components/QuoteRules.js","Apps/sagas/index.js","Apps/reducers/NotificationReducer.js","Apps/reducers/QuoteReducer.js","Apps/reducers/AppReducer.js","Apps/reducers/BoxReducer.js","Apps/reducers/DataReducer.js","Apps/reducers/index.js","Apps/Store.js","Apps/components/Header.js","Apps/components/Layout.js","Apps/actions/ActionAPIS.js","Apps/actions/ActionQuote.js","Apps/components/LayoutSimple.js","Apps/components/Pages/SelfService.js","Apps/components/Pages/QuoteSelection.js","Apps/components/Pages/ContactPage.js","Apps/components/Pages/404.js","Apps/history.js","Apps/Routes.js","Apps/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SITE_URL","window","location","href","split","AJAX_URL","APIS","PLUGIN_ASSET_URL","AJAX_GET_ALL_BOXES","AJAX_SUBMIT_CONTACT_DATA","SET_QUOTE","FETCH_BOX_DATA","SUBMIT_CONTACT_DATA","isQuotActive","type","payload","is_quote_selected","arguments","length","undefined","setSpecialCase","reason","is_special_cases","reason_special_cases","redirect_to_contact_page","RedirectTo","path","setNewHistory","route","setHistory","index","history","removeSpecialCase","LoadingStart","LoadingEnd","setGlobalData","data","setScreenshotFile","file","sendNotification","message","have","countdown","discardNotification","countdownNotification","val","fetch__GetAllBoxes","post__ContactData","fetchAllBoxes","axios","get","headers","Access-Control-Allow-Origin","Content-Type","then","response","success","catch","err","submitContactData","post","mode","withCredentials","credentials","regenerator_default","a","wrap","_context","prev","next","put","call","sent","abrupt","stop","_marked","result","_context2","_marked2","setBoxData","arrData","generateRack","item","depth","width","height","enable","status","getClosestMinimumSizeRack","racks","equals_or_less","availableRacks","map","rack","push","l","d","minCloseRackDepth","minCloseRackLength","tempDepth","tempLength","_ref","_ref2","checkAllWalls","b","c1","c2","prevC1","prevC2","actions","haveSingleRack","haveDoubleRack","parseInt","available_space","haveActions","Object","objectSpread","getScreenshotOfElement","element","posX","posY","callback","doc","document","documentElement","doc_top","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","y","x","html2canvas","onrendered","canvas","imageData","getContext","getImageData","outputCanvas","createElement","outputContext","idata","createImageData","set","putImageData","toDataURL","replace","useCORS","taintTest","allowTaint","scrollY","dataURLtoFile","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","FETCH_BOX_LIST_ASYNC","SUBMIT_CONTACT_ASYNC","allSagas","finalData","sagas_marked","sagas_marked2","_context3","t0","all","takeLatest","t1","t2","t3","_marked3","initialState","quoteInitialState","wall_a","wall_b","wall_c1","wall_c2","appInitialState","currentHistoryIndex","loading","below90cm","redirectToPath","boxes","screenshot","allReducers","notification","state","quote","app","box","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","connect","dispatch","props","react_default","className","target","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","to","onSubmit","e","preventDefault","placeholder","react","components_Header","style","flexDirection","display","justifyContent","alignItems","padding","children","getNotificationTitle","onClick","setQuote","clearResult","styles","fullScreen","backgroundColor","position","zIndex","top","left","Layout","redirectTo","getNotification","setTimeout","_this","goForCustomQuery","bind","assertThisInitialized","redirectToHome","setState","redirectToBack","newIndex","newHistory","slice","fullScreenLoader","react_loader_spinner_default","color","this","clearQuote","react_router","index_es","icon","faHome","faBackward","maxWidth","marginTop","Component","getOffset","el","elComputed","getComputedStyle","_x","_y","isNaN","offsetLeft","offsetTop","offsetParent","right","bottom","setLeft","px","countWidth","countHeight","el_Offset","extraWidth","extraHeight","str","setBottom","setRight","setRightInner","setTop","setHeight","setWidth","box_styles","backgroundSize","border","SelfService","redirectToHomePage","bool","dom_omgArea","dom_omgContainer","dom_omgContainerPadding","dom_wall_top","dom_wall_left","dom_wall_right","dom_wall_bottom_left","dom_wall_bottom_right","dom_input_wall_a","dom_input_wall_b","dom_input_wall_c1","dom_input_wall_c2","dom_box1_dom","dom_box2_dom","screenHeight","screenWidth","currentTab","boxExtraZoom","totalBoxes","isBoxDirectionLeft","input_wall_a","input_wall_b","input_wall_c1","input_wall_c2","containerPadding","normalLength","thickness","boxAHeight","boxAWidth","boxALeft","boxATop","boxBHeight","boxBWidth","boxBLeft","boxBTop","perceptualBoxAHeight","perceptualBoxAWidth","perceptualBoxBHeight","perceptualBoxBWidth","perceptualWallThickness","perceptualContainerPadding","perceptualMaxLength","perceptualWallA","perceptualWallB","perceptualWallC1","perceptualWallC2","do_WallRuleUpdate","do_InitializeDoms","do_DrawBoxEdges","do_PerseptualCalculation","do_SmartPlaceBoxes","do_RefreshScreenLengths","do_SetArgs","do_GetRequireBoxesAndDirection","do_redirectToContact","alreadyLoaded","dragBox1","dragBox2","dragging","allActions","onChangeWallA","value","onChangeWallB","onChangeWallC1","onChangeWallC2","onBlurWallA","refreshScreenLengths","onBlurWallB","onBlurWallC1","onBlurWallC2","onScreenScroll","redirectToContactPage","pathname","redirect_back_path","consoleApp","label","console","log","consoleTest","checkPerceptualWallThickness","checkPerceptualPadding","quickSetup","initializeDoms","setArgs","rules","wallsRulesCheck","action","getRequireBoxesAndDirection","perspectiveCalculation","drawBoxEdges","smartPlaceBoxes","changeState","querySelector","dom_box_doms","querySelectorAll","addEventListener","onMouseMove","onMouseUp","responseRules","totalRacks","ratio_WallA_WallB","ratio_screen_height_width","actualThickness","actualPadding","boxA","boxB","boxDirectionLeft","searchMaxHeight","searchMaxWidth","containerOffset","wall_fixed_height","offsetWallTop","offsetWallLeft","offsetWallBottomLeft","offsetWallRight","containerCurrentOffset","containerActualOffset","box1_offset","box2_offset","perceptiveBoxAWidth","perceptiveBoxAHeight","onChangeWallACalculateC1AndC2","available_space_for_c1_and_c2","onChangeWallC1CalculateC1AndC2","int_WallC1","int_WallC2","onChangeWallsCalculateC1AndC2","updateState","innerHeight","innerWidth","onSubmitEntry","appendChild","onMouseDown_Box1","cursorPosition","pageX","pageY","button","pos","relativeDistance","stopPropagation","onMouseDown_Box2","haveBoxCollision","box_type","currentCursorPosition","bottom_below_top","bottom_below_bottom","top_above_top","top_above_bottom","left_lefted_left","left_righted_left","left_lefted_right","right_righted_right","right_lefted_right","right_righted_left","have_collision","container_offset","box1_future_offset","box2_current_offset","box2_future_offset","box1_current_offset","onDragBox2","onDragBox1","box_pos_data","getRenderBoxes","onMouseDown","getRenderData","onChange","onBlur","min","max","lib_default","showInkBar","onChangeTab","selectedTabKey","items","getTabs","getMesurementInfo","scope","getAvailableBoxByIndex","changeBoxASize","event","options","selectedIndex","selectedBox","changeBoxSize","changeBoxBSize","canFitBoxAInWidth","availableWidth","canFitBoxAInHeight","availableHeight","canFitBoxBInWidth","_ref3","canFitBoxBInHeight","_ref4","box_label","stateBoxes","refine_box_data","final_data","onClick_increaseBoxA_width","available_boxes","current_box","nextAvailableBox","onClick_increaseBoxA_height","onClick_decreaseBoxA_width","i","onClick_decreaseBoxA_height","onClick_increaseBoxB_width","onClick_increaseBoxB_height","onClick_decreaseBoxB_width","onClick_decreaseBoxB_height","getBoxControls","textAlign","index1","selectedBoxA","isSelected","selected","disabled","role","selectedBoxB","getInstructionInfo","getBoxAvailibilityInfo","_ref5","key","aria-disabled","name","content","president","title","getContent","tabClassName","panelClassName","_this2","nextProps","nextContext","_this3","removeEventListener","getTrimmedString","trim","QuoteSelection","redirect_quotation","redirect_contact","onClickSubmit","ContactPage","redirect_to","full_name","email","subject","onSubmitForm","test","String","toLowerCase","haveSpecialCase","contact_details","special","onClickBack","lastRedirectLocation","hasOwnProperty","specialCases","src","htmlFor","aria-describedby","HomePage","createMemoryHistory","Routes","LayoutSimple","exact","component","Page404","main","es","Routes_Routes","Boolean","hostname","ReactDOM","render","Apps_main","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa83fef6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wood.702fc426.jpg\";","\n//Check production or development....\nexport const is_production = true;\n\n\n\n\n\nlet currentURL = \"\";\nlet arrResult = null;\n\nif(!is_production){\n\tcurrentURL = \"http://localhost/wp_cybetiq/self-quotation-system/wp-admin/admin.php?page=csq-main\";\n\tarrResult = currentURL.split(\"wp-admin\");\n}else{\n\tcurrentURL = window.location.href;\n\tarrResult = currentURL.split(\"wp-content/plugins\");\n}\n\nlet SITE_URL = arrResult[0];\nlet AJAX_URL = SITE_URL + \"wp-admin/admin-ajax.php\";\n\nlet AJAX_GET_ALL_BOXES = AJAX_URL+\"?action=getAllBoxes\";\nlet AJAX_SUBMIT_CONTACT_DATA = AJAX_URL+\"?action=postSubmitContact\";\n\nlet PLUGIN_ASSET_URL = SITE_URL+\"wp-content/plugins/cybetiq-self-quotation-system/init-app/resources/\";\n\nexport default {\n    PLUGIN_ASSET_URL,\n    SITE_URL,\n    AJAX_URL,\n    AJAX_GET_ALL_BOXES,\n    AJAX_SUBMIT_CONTACT_DATA\n};\n","export const LOADING_START = 'ACTION_LOADING_START';\nexport const LOADING_END = 'ACTION_LOADING_END';\n\nexport const ALERT_ON = 'ACTION_NOTIFICATION_ON';\nexport const ALERT_COUNTDOWN = 'ACTION_NOTIFICATION_COUNTDOWN';\nexport const ALERT_OFF = 'ACTION_NOTIFICATION_OFF';\n\nexport const SET_QUOTE_ACTIVE = 'ACTION_QUOTE_ACTIVE';\nexport const SET_QUOTE_IS_SPECIAL_WITH_REASON = 'ACTION_QUOTE_IS_SPECIAL_WITH_REASON';\nexport const SET_QUOTE_BELOW_90_WARN = 'ACTION_QUOTE_BELOW_90_WARN';\nexport const SET_QUOTE_NOT_SPECIAL = 'ACTION_QUOTE_NOT_SPECIAL';\nexport const SET_QUOTE = 'ACTION_QUOTE_SET';\n\nexport const SET_BOXES = 'ACTION_SET_BOXES';\nexport const CLEAR_BOXES = 'ACTION_CLEAR_BOXES';\n\nexport const SET_QUOTE_RESULT = 'ACTION_QUOTE_SET_RESULT';\nexport const UNSET_QUOTE_RESULT = 'ACTION_QUOTE_UNSET_RESULT';\n\nexport const SET_NEW_HISTORY = 'ACTION_APP_SET_NEW_HISTORY';\nexport const SET_HISTORY = 'ACTION_APP_SET_HISTORY';\nexport const SET_HISTORY_INDEX = 'ACTION_APP_SET_HISTORY_INDEX';\nexport const UNSET_HISTORY = 'ACTION_APP_UNSET_HISTORY';\n\nexport const REDIRECT_TO_CONTACT = 'ACTION_REDIRECTION_CONTACT_PAGE';\nexport const REDIRECT_TO_PATH = 'ACTION_REDIRECT_TO_PATH';\n\nexport const SET_GLOBAL_DATA = 'ACTION_SET_GLOBAL_DATA';\n\nexport const FETCH_BOX_DATA = 'ACTION_FETCH_BOX_DATA';\nexport const SUBMIT_CONTACT_DATA = 'ACTION_SUBMIT_CONTACT_DATA';\n\nexport const SET_SCREENSHOT_FILE = 'ACTION_SET_SCREENSHOT_FILE';\n","import {REDIRECT_TO_PATH, SET_QUOTE_BELOW_90_WARN, SET_SCREENSHOT_FILE, SET_GLOBAL_DATA, LOADING_START, LOADING_END, SET_QUOTE_ACTIVE, SET_QUOTE_IS_SPECIAL_WITH_REASON, SET_QUOTE_NOT_SPECIAL, REDIRECT_TO_CONTACT, SET_NEW_HISTORY,SET_HISTORY, UNSET_HISTORY} from '../constants/action-types';\n\nexport let isQuotActive = (active = true)=>{\n    return {\n        type: SET_QUOTE_ACTIVE,\n        payload: {\n            is_quote_selected: active\n        }\n    };\n};\nexport const setSpecialCase = (reason, redirect_to_contact = true)=>{\n    return {\n        type : SET_QUOTE_IS_SPECIAL_WITH_REASON,\n        payload: {\n            is_special_cases: true,\n            reason_special_cases: reason,\n            redirect_to_contact_page: redirect_to_contact\n        }\n    };\n};\nexport const setSpecialCase_below90cm = (status = true)=>{\n    return {\n        type : SET_QUOTE_BELOW_90_WARN,\n        payload: status\n    };\n};\nexport const RedirectTo = (path)=>{\n    return {\n        type : REDIRECT_TO_PATH,\n        payload: path\n    };\n};\nexport const RemoveRedirect = ()=>{\n    return {\n        type : REDIRECT_TO_PATH,\n        payload: false\n    };\n};\nexport const redirectToContactPage = ()=>{\n    return {\n        type : REDIRECT_TO_CONTACT,\n        payload: {\n            redirect_to_contact_page: true\n        }\n    };\n};\nexport const removeRedirectToContactPage = ()=>{\n    return {\n        type : REDIRECT_TO_CONTACT,\n        payload: {\n            redirect_to_contact_page: false\n        }\n    };\n};\n\nexport const setNewHistory = (route)=>{\n    return {\n        type : SET_NEW_HISTORY,\n        payload: {\n            route\n        }\n    };\n};\nexport const setHistory = (index, history)=>{\n    return {\n        type : SET_HISTORY,\n        payload: {\n            index, history\n        }\n    };\n};\nexport const clearHistory = ()=>{\n    return {\n        type : UNSET_HISTORY\n    };\n};\n\nexport const removeSpecialCase = ()=>{\n    return {\n        type : SET_QUOTE_IS_SPECIAL_WITH_REASON,\n        payload: {\n            is_special_cases: false,\n            reason_special_cases: false,\n            redirect_to_contact_page: false\n        }\n    };\n};\n\nexport const LoadingStart = (reason)=>{\n    return {\n        type : LOADING_START,\n        payload: reason\n    };\n};\nexport const LoadingEnd = ()=>{\n    return {\n        type : LOADING_END\n    };\n};\n\nexport const setGlobalData = (data) => {\n    return {\n        type : SET_GLOBAL_DATA,\n        payload: data\n    };\n};\n\nexport const setScreenshotFile = (file) => {\n    return {\n        type : SET_SCREENSHOT_FILE,\n        payload: file\n    };\n};\n","import {ALERT_ON,ALERT_OFF, ALERT_COUNTDOWN} from '../constants/action-types';\n\nexport let sendNotification = (message, type = 0)=>{\n    return {\n        type: ALERT_ON,\n        payload: {\n            have: true,\n            message,\n            type,\n            countdown: 10\n        }\n    };\n};\n\nexport let discardNotification = ()=>{\n    return {\n        type: ALERT_OFF,\n        payload: {\n            have: false,\n            message: false,\n            type: false,\n            countdown: false\n        }\n    };\n};\n\n\nexport let countdownNotification = (val = false)=>{\n    if(val <= 0){\n        val = false;\n        return discardNotification();\n    }\n    return {\n        type: ALERT_COUNTDOWN,\n        payload: val\n    };\n};\n","import axios from 'axios';\nimport { takeLatest, all, put, call } from 'redux-saga/effects';\nimport APIS from '../APIS';\nimport {RedirectTo, LoadingEnd, LoadingStart} from \"../actions/ActionApp\";\nimport {sendNotification} from \"../actions/Notification\";\n\nexport const fetchAllBoxes = () =>{\n    let config = {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n        }\n    }; \n\n    return axios.get(APIS.AJAX_GET_ALL_BOXES, config)\n        .then(response => {\n            let data = response.data;\n            if(data.success){\n                return data.data;\n            }else{\n                return false;\n            }\n        })\n        .catch(err => {\n            return false;\n        });\n};\n\nexport const submitContactData = (payload) =>{\n    let config = {\n        mode: 'no-cors',\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n        },\n        withCredentials: true,\n        credentials: 'same-origin',\n    }; \n\n    return axios.post(APIS.AJAX_SUBMIT_CONTACT_DATA, payload, config)\n    .then(response => {\n        let data = response.data;\n        if(data.success){\n            return true;\n        }\n        return false;\n    })\n    .catch(err => {\n        return false;\n    });;\n};\n\nexport function* fetch__GetAllBoxes() {\n    yield put(LoadingStart('Fetching Box Data...'));\n    let data = yield call(fetchAllBoxes);\n    yield put(LoadingEnd());\n    return data;\n}\nexport function* post__ContactData(payload) {\n    yield put(LoadingStart('Submit Contact Data...'));\n    let result = yield call(submitContactData, payload);\n    yield put(LoadingEnd());\n    yield put(RedirectTo('/'));\n    return result;\n}\n","import {SET_BOXES, CLEAR_BOXES} from '../constants/action-types';\n\nexport let setBoxData = (arrData)=>{\n    return {\n        type: SET_BOXES,\n        payload: arrData\n    };\n};\nexport let clearBoxData = ()=>{\n    return {\n        type: CLEAR_BOXES\n    };\n};\n","import html2canvas from 'html2canvas';\nimport {sendNotification} from '../actions/Notification';\nimport {setSpecialCase, removeSpecialCase, redirectToContactPage} from '../actions/ActionApp';\n\nconst response = (success = true, actions = [], data = false)=>{\n    let haveActions = false;\n    if(actions.length){\n        haveActions = true;\n    }\n    return {\n        success,\n        data,\n        actions,\n        haveActions\n    };\n};\n\nexport const generateRack = (item)=>{\n    let depth = item.width;\n    let length = item.height;\n    let enable = item.status === 'enable';\n    return {depth, length, enable};\n};\n\nexport const getRackByIndex = (availableRacks, index) => {\n    let data = availableRacks[index];\n    if(data){\n        return {\n            height: data.length,\n            width: data.depth\n        };\n    }else{\n        return false;\n    }\n};\nexport const getClosestMinimumSizeRack = ( racks, width, height, equals_or_less = false)=>{\n    let availableRacks = [];\n    racks.map(rack => {\n        if(rack.enable){\n            availableRacks.push(rack);\n            return true;\n        }\n        return false;\n    });\n\n    let l = height;\n    let d = width;\n\n    let minCloseRackDepth = false;\n    let minCloseRackLength = false;\n    let tempDepth = 0;\n    let tempLength = 0;\n\n    //GET MIN AVAILABLE WIDTH OR DEPTH...\n    availableRacks.map(({depth}, index) => {\n        if(!minCloseRackDepth) {\n            if ((d < depth) || (equals_or_less && d <= depth)) {\n                minCloseRackDepth = tempDepth;\n            } else {\n                tempDepth = depth;\n            }\n        }\n    });\n    if(!minCloseRackDepth) {\n        minCloseRackDepth = tempDepth;\n    }\n\n    //GET MIN AVAILABLE HEIGHT OR LENGTH...\n    availableRacks.map(({depth, length}, index) => {\n        if(!minCloseRackLength && depth === minCloseRackDepth) {\n            if ((l < length) || (equals_or_less && l <= length)) {\n                minCloseRackLength = tempLength;\n            } else {\n                tempLength = length;\n            }\n        }\n    });\n    if(!minCloseRackLength) {\n        minCloseRackLength = tempLength;\n    }\n\n\n    if(minCloseRackLength && minCloseRackDepth){\n        return {\n            height: minCloseRackLength,\n            width: minCloseRackDepth\n        };\n    }else{\n        return false;\n    }\n};\n\nexport const isRackSize_applicableInContainer = ( racks, available_width, available_height)=>{\n    let availableRacks = [];\n    racks.map(rack => {\n        if(rack.enable){\n            availableRacks.push(rack);\n            return true;\n        }\n        return false;\n    });\n\n    let box = getClosestMinimumSizeRack(availableRacks, available_width, available_height, true);\n};\n\nexport const checkAllWalls = (availableRacks, a, b, c1, c2, ignoreInvalid = true, containerMargin = 5) => {\n\n\n    let prevC1 = c1;\n    let prevC2 = c2;\n\n    let actions = [];\n    let success = true;\n    let data = {\n        racks: [],\n        haveSingleRack: false,\n        haveDoubleRack: false,\n    };\n\n    if(!a || a.length <= 0){\n        actions.push(sendNotification('Please enter Wall-A value properly or contact us.'));\n        actions.push(redirectToContactPage());\n        success = false;\n    }else if(!b || b.length <= 0){\n        actions.push(sendNotification('Please enter Wall-B value properly or contact us.'));\n        actions.push(redirectToContactPage());\n        success = false;\n    }else{\n        a = parseInt(a);\n        b = parseInt(b);\n\n        if(a > 360){\n            actions.push(setSpecialCase('Maximum Length of Wall-A is greater than 3.6m.'));\n            actions.push(redirectToContactPage());\n            actions.push(sendNotification('Maximum Length of Wall-A is greater than 3.6m.'));\n            a = 360;\n            success = true;\n        }else if(a < 90){\n            actions.push(setSpecialCase('Maximum Length of Wall-A is less than 90cm.'));\n            actions.push(sendNotification('Maximum Length of Wall-A is less than 90cm.'));\n            a = 90;\n            actions.push(redirectToContactPage());\n            success = true;\n        }else if(b > 360){\n            actions.push(setSpecialCase('Maximum Length of Wall-B is greater than 3.6m.'));\n            actions.push(redirectToContactPage());\n            success = false;\n        }else if(b < 90){\n            actions.push(setSpecialCase('Maximum Length of Wall-B is less than 90cm.'));\n            actions.push(redirectToContactPage());\n            success = false;\n        }\n    }\n\n\n    //Calculate C1 & C2\n    if(success) {\n        //Rack Validation System...\n        if (a <= 90) {\n            data.haveSingleRack = true;\n        } else if (a > 90 && a <= 120) {\n            data.haveSingleRack = true;\n        } else if (a > 120 && a <= 135) {\n            data.haveDoubleRack = true;\n        } else if (a > 135 && a <= 150) {\n            data.haveDoubleRack = true;\n        } else if (a > 150 && a <= 180) {\n            data.haveDoubleRack = true;\n        } else if (a > 180) {\n            data.haveDoubleRack = true;\n        }\n\n\n        //Logics...\n        if (!c1 && c1 !== 0 && !c2 && c2 !== 0) {\n            //When C1 & C2 Both Not Seted...\n            if (a <= 90) {\n                actions.push(setSpecialCase('Wall-A <= 90.', false));\n                c1 = c2 = 0;\n            } else if (a > 90 && a <= 120) {\n                c1 = a - 90;\n                c2 = 0;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 120 && a <= 135) {\n                c1 = 30;\n                c2 = a - 120;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 135 && a <= 150) {\n                c1 = 45;\n                c2 = a - 135;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 150 && a <= 180) {\n                c1 = 60;\n                c2 = a - 150;\n                actions.push(setSpecialCase('90cm < Wall-A < 121.', false));\n            } else if (a > 180) {\n                actions.push(setSpecialCase('Wall-A > 180.', false));\n                c1 = c2 = (a - 90) / 2;\n            }\n        } else {\n            if ((!c1 && c1 !== 0) && c2) {\n                //If C1 Not Available...\n                if (c2 > a - 90) {\n                    let val = a - 90;\n                    actions.push(sendNotification('C2 should be less than or equals ' + val + 'cm (Wall-A - 90cm) min, reset C1 to 0.'));\n                    c2 = val;\n                    c1 = 0;\n                } else if (c2 < 0) {\n                    let val = a - 90;\n                    actions.push(sendNotification('C2 should be greater than or equals 0cm min, reset C1 to ' + val + '.'));\n                    c2 = 0;\n                    c1 = val;\n                } else {\n                    c1 = a - 90 - c2;\n                }\n            } else if ((!c2 && c2 !== 0) && c1) {\n                //If C2 Not Available...\n                if (c1 > a - 90) {\n                    let val = a - 90;\n                    actions.push(sendNotification('C1 should be less than or equals ' + val + 'cm (Wall-A - 90cm) min, reset C2 to 0.'));\n                    c1 = val;\n                    c2 = 0;\n                } else if (c1 < 0) {\n                    let val = a - 90;\n                    actions.push(sendNotification('C1 should be greater than or equals 0cm min, reset C1 to ' + val + '.'));\n                    c1 = 0;\n                    c2 = val;\n                } else {\n                    c2 = a - 90 - c1;\n                }\n            } else {\n                //If Both C1 & C2 available...\n                c1 = parseInt(c1);\n                c2 = parseInt(c2);\n\n                let available_space = a - 90;\n\n                if(c1 > available_space){\n                    actions.push(sendNotification('C1 should be less or equals (Wall-A - 90cm - Wall-C2) min, reset C1 to '+available_space+' & C2 to 0.'));\n                    c1 = available_space;\n                    c2 = 0;\n                }else if(c2 > available_space){\n                    actions.push(sendNotification('C1 should be less or equals (Wall-A - 90cm - Wall-C1) min, reset C2 to '+available_space+' & C1 to 0.'));\n                    c2 = available_space;\n                    c1 = 0;\n                }else if(c1 < 0){\n                    actions.push(sendNotification('C1 should be greater or equals 0cm min, reset C1 to 0.'));\n                    c1 = 0;\n                }else if(c2 < 0){\n                    actions.push(sendNotification('C2 should be greater or equals 0cm min, reset C2 to 0.'));\n                    c2 = 0;\n                }else{\n                    if (c1 > available_space - c2){\n                        let val = available_space - c2;\n                        actions.push(sendNotification('C1 should be less than or equals ' + val + 'cm (Wall-A - 90cm - C2) min, reset C1 to '+val+'.'));\n                        c1 = val;\n                    }else if (c2 > available_space - c1){\n                        let val = available_space - c1;\n                        actions.push(sendNotification('C2 should be less than or equals ' + val + 'cm (Wall-A - 90cm - C1) min, reset C2 to '+val+'.'));\n                        c2 = val;\n                    }\n                }\n            }\n        }\n\n        prevC1 = c1;\n        prevC2 = c2;\n    }\n\n    data = {a, b, c1:prevC1,c2:prevC2, ...data};\n    return response(success, actions, data);\n};\n\n\nexport const getScreenshotOfElement = (element, posX, posY, width, height, callback) => {\n    let doc = document.documentElement;\n    let doc_left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    let doc_top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\n    let y = posY;\n    let x = posX;\n    return html2canvas(element, {\n        onrendered: function (canvas) {\n            let context = canvas.getContext('2d');\n            let imageData = context.getImageData(x, y, width, height).data;\n            let outputCanvas = document.createElement('canvas');\n            let outputContext = outputCanvas.getContext('2d');\n            outputCanvas.width = width;\n            outputCanvas.height = height;\n\n            let idata = outputContext.createImageData(width, height);\n            idata.data.set(imageData);\n            outputContext.putImageData(idata, 0, 0);\n            callback(outputCanvas.toDataURL().replace(\"data:image/png;base64,\", \"\"));\n        },\n        width: width,\n        height: height,\n        useCORS: false,\n        taintTest: true,\n        allowTaint: true,\n        scrollY: -doc_top\n    });\n};\n\n\nexport const dataURLtoFile = (dataurl, filename) => {\n    const arr = dataurl.split(',')\n    const mime = arr[0].match(/:(.*?);/)[1]\n    const bstr = atob(arr[1])\n    let n = bstr.length\n    const u8arr = new Uint8Array(n)\n    while (n) {\n        u8arr[n] = bstr.charCodeAt(n)\n        n -= 1 // to make eslint happy\n    }\n    return new File([u8arr], filename, { type: mime })\n};\n\nexport const openInNewTab = (url) => {\n    var win = window.open(url, '_blank');\n    win.focus();\n};\n","import { takeLatest, all, put, call } from 'redux-saga/effects';\nimport {FETCH_BOX_DATA, SUBMIT_CONTACT_DATA} from '../constants/action-types';\nimport {fetch__GetAllBoxes, post__ContactData} from './APICalling';\nimport {setBoxData} from \"../actions/ActionBoxes\";\nimport {sendNotification} from \"../actions/Notification\";\nimport {generateRack} from '../components/QuoteRules';\n\nexport function* FETCH_BOX_LIST_ASYNC(){\n    let result = yield call(fetch__GetAllBoxes);\n    let data = yield result;\n    if(data && data) {\n        let finalData = [];\n        data.map((item)=>{\n            finalData.push(generateRack(item));\n        });\n        yield put(setBoxData(finalData));\n    }\n}\nexport function* SUBMIT_CONTACT_ASYNC({payload}){\n\n    let result = yield call(post__ContactData, payload);\n    let response = yield result;\n    if(response) {\n        yield put(sendNotification('Submitted! thank you, we will contact you soon!', 1));\n    }else{\n        yield put(sendNotification('Submission failed, Please try again!', -1));\n    }\n}\n\nexport function* allSagas(){\n    yield all([\n        yield takeLatest(FETCH_BOX_DATA, FETCH_BOX_LIST_ASYNC),\n        yield takeLatest(SUBMIT_CONTACT_DATA, SUBMIT_CONTACT_ASYNC)\n    ]);\n}\n","import { ALERT_OFF, ALERT_ON, ALERT_COUNTDOWN } from \"../constants/action-types\";\n\nconst initialState = {\n    have: false,\n    message: false,\n    type: false,\n    countdown: false\n};\n\nexport default (state = initialState, {type, payload})=>{\n    switch(type){\n        case ALERT_ON:\n            return payload;\n        case ALERT_OFF:\n            return payload;\n        case ALERT_COUNTDOWN:\n             return {countdown: payload, ...state};\n        default:\n            return {...state};\n    }\n};\n","import { SET_QUOTE, SET_QUOTE_RESULT, UNSET_QUOTE_RESULT } from \"../constants/action-types\";\n\nconst quoteInitialState = {\n    wall_a: false,\n    wall_b: false,\n    wall_c1: false,\n    wall_c2: false,\n    result: false\n};\n\nexport default (state = quoteInitialState, {type, payload})=>{\n    switch(type){\n        case SET_QUOTE:\n            return {...state, ...payload};\n        case SET_QUOTE_RESULT:\n            return {...state, ...{result: payload}};\n        case UNSET_QUOTE_RESULT:\n            return {...quoteInitialState};\n        default:\n            return {...state, ...{result: false}};\n    }\n};\n","import { REDIRECT_TO_PATH, SET_QUOTE_BELOW_90_WARN, LOADING_START, LOADING_END, SET_QUOTE_ACTIVE, REDIRECT_TO_CONTACT, SET_QUOTE_IS_SPECIAL_WITH_REASON,SET_NEW_HISTORY,SET_HISTORY, SET_HISTORY_INDEX, UNSET_HISTORY } from \"../constants/action-types\";\n\nconst appInitialState = {\n    is_quote_selected: false,\n    is_special_cases: false,\n    reason_special_cases: false,\n    redirect_to_contact_page: false,\n    history: [],\n    currentHistoryIndex: -1,\n    loading: false,\n    below90cm: false,\n    redirectToPath: false\n};\n\nexport default (state = appInitialState, {type, payload})=>{\n    let data;\n    switch(type){\n        case LOADING_START:\n            return {...state, loading: payload};\n        case REDIRECT_TO_PATH:\n            return {...state, redirectToPath: payload};\n        case LOADING_END:\n            return {...state, loading: false};\n        case SET_QUOTE_ACTIVE:\n            return {...state, ...payload};\n        case REDIRECT_TO_CONTACT:\n            data = {...state, ...payload};\n            return data;\n        case SET_QUOTE_IS_SPECIAL_WITH_REASON:\n            return {...state,...payload};\n        case SET_NEW_HISTORY:\n            state.history.push(payload.route);\n            state.currentHistoryIndex++;\n            return {...state};\n        case SET_QUOTE_BELOW_90_WARN:\n            data = {...state, below90cm: payload};\n            break;\n        case SET_HISTORY:\n            return {...state, ...{\n                    history: payload.history,\n                    currentHistoryIndex: payload.index\n                }};\n        default:\n            return {...state};\n    }\n};\n","import { SET_BOXES, CLEAR_BOXES } from \"../constants/action-types\";\n\nconst initialState = {\n    boxes: []\n};\n\nexport default (state = initialState, {type, payload})=>{\n    switch(type){\n        case SET_BOXES:\n            return {...state, boxes: payload};\n        case CLEAR_BOXES:\n            return {...state, boxes: []};\n        default:\n            return state;\n    }\n};\n","import { UNSET_QUOTE_RESULT, SET_GLOBAL_DATA, SET_SCREENSHOT_FILE } from \"../constants/action-types\";\n\nconst appInitialState = {\n    data: false,\n    screenshot: false\n};\n\nexport default (state = appInitialState, {type, payload})=>{\n    switch(type){\n        case SET_GLOBAL_DATA:\n            return {...state, data: payload};\n        case SET_SCREENSHOT_FILE:\n            return {...state, screenshot: payload};\n        case UNSET_QUOTE_RESULT:\n            return {...state, screenshot: false};\n        default:\n            return {...state};\n    }\n};\n","import { combineReducers } from 'redux'\nimport NotificationReducer from '../reducers/NotificationReducer';\nimport QuoteReducer from '../reducers/QuoteReducer';\nimport AppReducer from '../reducers/AppReducer';\nimport BoxReducer from '../reducers/BoxReducer';\nimport DataReducer from '../reducers/DataReducer';\n\nlet allReducers = {\n      notification: NotificationReducer,\n      quote: QuoteReducer,\n      app: AppReducer,\n      box: BoxReducer,\n      data: DataReducer\n};\nexport default combineReducers(allReducers);\n\n\n","import { createStore, applyMiddleware } from 'redux';\nimport {is_production} from './APIS';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { allSagas } from './sagas';\n\nimport rootReducer from \"./reducers/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\nlet store = null;\nif(!is_production){\n    store = createStore(\n        rootReducer,\n        composeWithDevTools(\n            applyMiddleware(sagaMiddleware)\n        )\n    );\n}else{\n    store = createStore(\n        rootReducer,\n        applyMiddleware(sagaMiddleware)\n    );\n}\n\nsagaMiddleware.run(allSagas);\nexport default store;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {sendNotification} from \"../actions/Notification\";\n\nlet Header = (props)=>{\n    let onSubmitSearch = (e)=>{\n        e.preventDefault();\n        props.dispatch(sendNotification(\"This is an example when search entered.\"));\n    };\n\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" target=\"_blank\" href=\"https://cybetiq.com\">Drag-Box V.3.21</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <NavLink className=\"nav-link\" to={'/'}>Home</NavLink>\n                </li>\n                <li className=\"nav-item active\">\n                    <NavLink className=\"nav-link\" to='/self-service'>Self Service</NavLink>\n                </li>\n                <li className=\"nav-item active\">\n                    <NavLink className=\"nav-link\" to='/contact'>Contact</NavLink>\n                </li>\n            </ul>\n            <form onSubmit={onSubmitSearch} className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n        </div>\n    </nav>\n)};\n\nexport default connect(null, dispatch => ({dispatch}))(Header);\n","import React, {Fragment} from 'react';\n\nimport Header from './Header';\nimport {discardNotification} from '../actions/Notification';\n\nimport {connect} from \"react-redux\";\n\nconst getNotificationTitle = (type)=>{\n    switch(type){\n        case 0:\n            return \"Notification!\";\n        case 1:\n            return \"Success!\";\n        case -1:\n            return \"Oops!\";\n    }\n};\n\nlet getNotification = (notification, dispatch)=>{\n    return (\n        <div className=\"alert-area\">\n            <div className=\"alert-box\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{getNotificationTitle(notification.type)}</h5>\n                        <p className=\"card-text\">{notification.message}</p>\n                        <button onClick={(e)=>{dispatch(discardNotification())}} className=\"btn btn-primary\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nlet Layout = (props)=>{\n\n   return (\n       <Fragment>\n           <Header/>\n           <div className=\"container\" style={{flexDirection: \"column\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: \"50px 30px\"}}>\n           { props.children }\n           </div>\n           {(props.notification.have)?getNotification(props.notification, props.dispatch):false}\n       </Fragment>\n   );\n};\n\nexport default connect(store=>({notification: store.notification}), dispatch => ({dispatch}))(Layout);\n","import {FETCH_BOX_DATA, SUBMIT_CONTACT_DATA} from '../constants/action-types';\n\nexport let fetchBoxData = ()=>{\n    return {\n        type: FETCH_BOX_DATA\n    };\n};\n\nexport let submitContactData = (data)=>{\n    return {\n        type: SUBMIT_CONTACT_DATA,\n        payload: data\n    };\n};\n","import {SET_QUOTE, SET_QUOTE_RESULT, UNSET_QUOTE_RESULT} from '../constants/action-types';\n\nexport let setQuote = (wall_a = false, wall_b = false, wall_c1 = false, wall_c2 = false)=>{\n    let result = {\n        type: SET_QUOTE,\n        payload: {\n            wall_a: wall_a,\n            wall_b: wall_b,\n            wall_c1: wall_c1,\n            wall_c2: wall_c2\n        }\n    };\n    return result;\n};\n\nexport let setQuoteWallA = (wall_a)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_a: wall_a\n        }\n    };\n};\n\nexport let setQuoteWallB = (wall_b)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_b\n        }\n    };\n};\n\nexport let setQuoteWallC1 = (wall_c1)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_c1\n        }\n    };\n};\n\nexport let setQuoteWallC2 = (wall_c2)=>{\n    return {\n        type: SET_QUOTE,\n        payload: {\n            wall_c2\n        }\n    };\n};\n\nexport let setResult = (data) => {\n    return {\n        type: SET_QUOTE_RESULT,\n        payload: data\n    };\n};\n\nexport let clearResult = () => {\n    return {\n        type: UNSET_QUOTE_RESULT,\n        payload: {}\n    };\n};\n","import React, {Fragment, Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faBackward } from '@fortawesome/free-solid-svg-icons';\nimport {discardNotification,countdownNotification} from '../actions/Notification';\nimport {setHistory} from '../actions/ActionApp';\nimport {fetchBoxData} from '../actions/ActionAPIS';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {clearResult as clearQuote} from \"../actions/ActionQuote\";\n\nlet styles = {\n    fullScreen: {\n        backgroundColor: '#000000bd',\n        position: 'fixed',\n        zIndex: '99999999',\n        height: '100vh',\n        width: '100vw',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n};\n\nconst getNotificationTitle = (type)=>{\n    switch(type){\n        case 0:\n            return \"Notification!\";\n        case 1:\n            return \"Success!\";\n        case -1:\n            return \"Oops!\";\n    }\n};\n\nclass Layout extends Component{\n\n    componentDidMount() {\n        this.props.dispatch(fetchBoxData());\n    }\n\n    state={\n        redirectTo: false\n    };\n    componentDidUpdate() {\n        if(this.state.redirectTo){\n            this.setState({redirectTo: false});\n        }\n    }\n\n    goForCustomQuery() {\n        this.props.dispatch(clearQuote());\n        this.setState({redirectTo: '/contact'});\n        this.props.dispatch(discardNotification());\n    }\n\n    getNotification = (notification, dispatch)=>{\n        setTimeout(()=>{\n            dispatch(countdownNotification(--notification.countdown));\n        },1000);\n        return (\n            <div className=\"alert-area\">\n                <div className=\"alert-box\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className='row'>\n                                <div className='col-12 mb-4'>\n                                    <h5 className=\"card-title\">{getNotificationTitle(notification.type)}</h5>\n                                    <p className=\"card-text\">{notification.message}</p>\n                                </div>\n                                <div className='col-6 text-left'>\n                                    <button onClick={this.goForCustomQuery.bind(this)} className=\"btn btn-outline-danger\">Have custom query ?</button>\n                                </div>\n                                <div className='col-6 text-right'>\n                                    <button onClick={(e)=>{dispatch(discardNotification())}} className=\"btn btn-outline-primary\">Ok</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='progress-bar' style={{width: notification.countdown * 10+\"%\"}}/>\n                </div>\n            </div>\n        );\n    };\n\n    redirectToHome = (e) => {\n        e.preventDefault(true);\n        this.setState({\n            redirectTo: '/'\n        });\n    };\n\n    redirectToBack = (e) => {\n        e.preventDefault(true);\n        let currentHistoryIndex = this.props.app.currentHistoryIndex;\n        let history = this.props.app.history;\n        if(currentHistoryIndex >= 0) {\n            let newIndex = --currentHistoryIndex;\n            let newHistory = history.slice(0, newIndex+1);\n            this.setState({\n                redirectTo: newHistory[newIndex]\n            });\n            this.props.dispatch(setHistory(newIndex, newHistory));\n        }\n    };\n\n    fullScreenLoader = () => {\n         return(\n            <div style={styles.fullScreen}>\n              <Loader\n                 type=\"BallTriangle\"\n                 color=\"#00BFFF\"\n                 height={100}\n                 width={100}\n              />\n            </div>\n         );\n    };\n\n    render(){\n        return (\n            <Fragment>\n                {(this.props.app.loading)?this.fullScreenLoader():false}\n                {(this.state.redirectTo)?<Redirect to={this.state.redirectTo}/>:false}\n                <div className=\"container-fluid\" style={{position: \"fixed\", top: \"0px\", zIndex: \"999\"}}>\n                    <nav className=\"navbar navbar-expand-sm bg-light justify-content-center\">\n                        <ul className=\"navbar-nav\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.redirectToHome}>\n                                    <FontAwesomeIcon icon={faHome} /> Home\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\" onClick={this.redirectToBack}>\n                                    <FontAwesomeIcon icon={faBackward} /> Back\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"container body-container\" style={{\n                    flexDirection: \"column\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    maxWidth: \"unset\",\n                    marginTop: \"58px\"\n                }}>\n                    {this.props.children}\n                </div>\n                {(this.props.notification.have) ? this.getNotification(this.props.notification, this.props.dispatch) : false}\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(store=>({notification: store.notification, app: store.app}), dispatch => ({dispatch}))(Layout);\n","import React, {Component, Fragment} from 'react';\nimport Tabs from 'react-responsive-tabs';\nimport 'react-responsive-tabs/styles.css';\nimport './styles.css';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {sendNotification} from \"../../actions/Notification\";\nimport {checkAllWalls, getClosestMinimumSizeRack, getScreenshotOfElement, dataURLtoFile} from '../QuoteRules';\nimport imgBox from '../../../assets/imgs/wood.jpg';\nimport {setGlobalData, setNewHistory, setScreenshotFile} from \"../../actions/ActionApp\";\nimport {setQuote} from '../../actions/ActionQuote';\n\nconst getOffset = (el) => {\n    if(el) {\n        const elComputed = window.getComputedStyle(el);\n\n        let _x = 0;\n        let _y = 0;\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n            _x += el.offsetLeft;\n            _y += el.offsetTop - el.scrollTop;\n            el = el.offsetParent;\n        }\n\n        let result = {\n            left: _x,\n            top: _y,\n            height: parseInt((elComputed.height).replace(\"px\", \"\")),\n            width: parseInt((elComputed.width).replace(\"px\", \"\")),\n        };\n\n        result = {...result, right: result.width + result.left, bottom: result.top + result.height};\n        return result;\n    }else{\n        return false;\n    }\n};\nconst setLeft = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.left;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.left = str;\n};\nconst setBottom = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.bottom;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.top = str;\n};\nconst setRight = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.right;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.left = str;\n};\nconst setRightInner = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let str = px.right - (el_Offset.right - el_Offset.left);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.left = str;\n};\nconst setBottomInner = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.bottom - (el_Offset.bottom - el_Offset.top);\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.top = str;\n};\nconst setTop = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.top;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.top = str;\n};\nconst setHeight = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.height;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.height = str;\n};\nconst setWidth = (el, px, countWidth = false, countHeight = false) =>{\n    let el_Offset = getOffset(el);\n    let extraWidth = el_Offset.width;\n    let extraHeight = el_Offset.height;\n\n    let str = px.width;\n    if(countWidth){\n        str -= extraWidth;\n    }\n    if(countHeight){\n        str -= extraHeight;\n    }\n    if(px){\n        str += \"px\";\n    }else{\n        str += \"%\";\n    }\n    el.style.width = str;\n};\n\nconst box_styles = {\n    //background: `url(${imgBox})`,\n    backgroundSize: \"cover\",\n    //boxShadow: \"black 1px 1px 5px\",\n    border: \"inset #804c0a thin\"\n};\n\nclass SelfService extends Component{\n\n    //Page Re-directions...\n        redirectToHomePage = (bool)=> {\n            this.props.dispatch(sendNotification(\"You need to select basic requirement of the app.\"));\n            return (bool) ? <Redirect to=\"/\"/> : false;\n        };\n\n    //DOM Declaration...\n        dom_omgArea = null;\n        dom_omgContainer = null;\n        dom_omgContainerPadding = null;\n\n        dom_wall_top = null;\n        dom_wall_left = null;\n        dom_wall_right = null;\n        dom_wall_bottom_left = null;\n        dom_wall_bottom_right = null;\n\n        dom_input_wall_a = null;\n        dom_input_wall_b = null;\n        dom_input_wall_c1 = null;\n        dom_input_wall_c2 = null;\n\n        dom_box1_dom = null;\n        dom_box2_dom = null;\n\n    screenHeight = false;\n    screenWidth = false;\n\n    //State declaration...\n        state = {\n            currentTab: 0,\n\n            screenHeight: false,\n            screenWidth: false,\n\n            //Actual Vars...\n            boxExtraZoom: 1.8,\n            totalBoxes: 1,\n            boxes: {\n                a: false,\n                b: false\n            },\n            isBoxDirectionLeft: true,\n\n            wall_a: 0,\n            wall_b: 0,\n            wall_c1: 0,\n            wall_c2: 0,\n\n            input_wall_a: 0,\n            input_wall_b: 0,\n            input_wall_c1: 0,\n            input_wall_c2: 0,\n\n            containerPadding: 5,\n            normalLength: 300,\n            thickness: 7,\n\n            boxAHeight: 120,\n            boxAWidth: 45,\n            boxALeft: 0,\n            boxATop: 0,\n\n            boxBHeight: 120,\n            boxBWidth:45,\n            boxBLeft: 0,\n            boxBTop: 0,\n\n            //Perceptual Vars...\n            perceptualBoxAHeight: 0,\n            perceptualBoxAWidth: 0,\n\n            perceptualBoxBHeight: 0,\n            perceptualBoxBWidth: 0,\n\n            perceptualWallThickness: 0,\n            perceptualContainerPadding: 0,\n            perceptualMaxLength: 0,\n            perceptualWallA: 0,\n            perceptualWallB: 0,\n            perceptualWallC1: 0,\n            perceptualWallC2: 0,\n\n\n            //Validation & Switches...\n            do_WallRuleUpdate: false,\n            do_InitializeDoms: false,\n            do_DrawBoxEdges: false,\n            do_PerseptualCalculation: false,\n            do_SmartPlaceBoxes: false,\n            do_RefreshScreenLengths: false,\n            do_SetArgs: false,\n            do_GetRequireBoxesAndDirection: false,\n            do_redirectToContact: false,\n\n            alreadyLoaded: false\n        };\n\n    //Extra variables...\n        dragBox1 = false;\n        dragBox2 = false;\n        dragging = false;\n\n        allActions = [];\n\n    //Input Events...\n        onChangeWallA = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_a: val\n            });\n        };\n\n        onChangeWallB = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_b: val\n            });\n        };\n\n        onChangeWallC1 = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_c1: val\n            });\n        };\n\n        onChangeWallC2 = (e)=>{\n            let val = e.target.value;\n            this.setState({\n                input_wall_c2: val\n            });\n        };\n\n        onBlurWallA = ()=>{\n            let val = this.state.input_wall_a;\n\n            if(val > 360){\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall-A should be less or equals 3.6m\"));\n            }else if(val < 90){\n                val = 90;\n                this.props.dispatch(sendNotification(\"Wall-A should be greater or equals 90cm\"));\n            }\n\n            this.setState({\n                wall_a: val,\n                input_wall_a: val,\n                do_WallRuleUpdate: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_PerseptualCalculation: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n            //this.props.dispatch(setQuoteWallA(val));\n            this.refreshScreenLengths(true);\n        };\n\n        onBlurWallB = ()=>{\n            let val = this.state.input_wall_b;\n\n            if(val > 360){\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall-B should be less or equals 3.6m\"));\n            }else if(val < 90){\n                val = 90;\n                this.props.dispatch(sendNotification(\"Wall-B should be greater or equals 90cm\"));\n            }\n\n            this.setState({\n                wall_b: val,\n                input_wall_b: val,\n                do_WallRuleUpdate: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_PerseptualCalculation: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n            this.refreshScreenLengths(true);\n        };\n\n        onBlurWallC1 = ()=>{\n            let val = this.state.input_wall_c1;\n\n            if(val < 0){\n                val = 0;\n                this.props.dispatch(sendNotification(\"Wall-C1 should be greater or equals 0cm\"));\n            }\n\n            this.setState({\n                wall_c1: val,\n                input_wall_c1: val,\n                do_WallRuleUpdate: true,\n                do_PerseptualCalculation: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n        };\n\n        onBlurWallC2 = () => {\n            let val = this.state.input_wall_c2;\n\n            if(val < 0){\n                val = 0;\n                this.props.dispatch(sendNotification(\"Wall-C2 should be greater or equals 0cm\"));\n            }\n\n            this.setState({\n                wall_c2: val,\n                input_wall_c2: val,\n                do_WallRuleUpdate: true,\n                do_PerseptualCalculation: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n        };\n\n    //Component Hooks...\n        onScreenScroll = () => {\n            this.refreshScreenLengths(true);\n        };\n\n        componentDidUpdate(){\n            this.quickSetup();\n        }\n        componentDidMount() {\n\n            if(this.props.app.history[this.props.app.currentHistoryIndex] !== \"/self-service\") {\n                this.props.dispatch(setNewHistory('/self-service'));\n            }\n            window.addEventListener(\"resize\", ()=>this.refreshScreenLengths(true));\n            document.querySelector('.omg-part.omg-part-1').addEventListener('scroll', this.onScreenScroll);\n            this.setState({\n                do_InitializeDoms: true,\n                do_SetArgs: true,\n                do_WallRuleUpdate: true,\n                do_GetRequireBoxesAndDirection: true,\n                do_PerseptualCalculation: true,\n                do_DrawBoxEdges: true,\n                do_SmartPlaceBoxes: true,\n                do_RefreshScreenLengths: true\n            });\n        }\n        componentWillReceiveProps(nextProps, nextContext) {\n        }\n        componentWillUnmount() {\n            document.removeEventListener('mousemove', this.onMouseMove);\n            document.removeEventListener('mouseup', this.onMouseUp);\n            window.removeEventListener(\"resize\", ()=>this.refreshScreenLengths(true));\n            document.querySelector('.omg-part.omg-part-1').removeEventListener(\"scroll\", this.onScreenScroll);\n        }\n\n    //Basic Functions...\n        redirectToContactPage = (bool)=> {\n            if(bool) {\n                return <Redirect to={{pathname: '/contact', state: {redirect_back_path: '/'}}}/>;\n            }else{\n                return false;\n            }\n        };\n\n        consoleApp = (label, data = false) => {\n            if(data !== false ){\n                console.log(\"APP: \" + label + \" => \", data);\n            }else{\n                console.log(\"APP: \"+label);\n            }\n        };\n        consoleTest = (label, data = false) => {\n            if(data !== false ){\n                console.log(\"TEST: \"+label+\" => \",data);\n            }else{\n                console.log(\"TEST: \"+label);\n            }\n        };\n\n        //Limitation Functions start...\n            checkPerceptualWallThickness = (thickness)=>{\n                if(thickness > 45){\n                    thickness = 45;\n                }\n                return thickness;\n            };\n            checkPerceptualPadding = (padding)=>{\n                if(padding > 15){\n                    padding = 15;\n                }\n                return padding;\n            };\n        //Limitation Functions end...\n\n\n        quickSetup = () => {\n                if(this.state.do_RefreshScreenLengths) {\n                    this.setState({\n                        do_RefreshScreenLengths: false,\n                        ...this.refreshScreenLengths(false)\n                    });\n                }\n                else if(this.state.do_InitializeDoms){\n                    this.setState({\n                        do_InitializeDoms: false,\n                        ...this.initializeDoms()\n                    });\n                }\n                else if(this.state.do_SetArgs){\n                    this.setState({\n                        do_SetArgs: false,\n                        ...this.setArgs()\n                    });\n                }\n                else if(this.state.do_WallRuleUpdate){\n                    const rules = this.wallsRulesCheck();\n                    this.setState({\n                        do_WallRuleUpdate: false,\n                        ...rules\n                    });\n                    if(this.allActions.length) {\n                        this.allActions.map((action, index) => {\n                            return this.props.dispatch({...action});\n                        });\n                        this.allActions = [];\n                    }\n                }\n                else if(this.state.do_GetRequireBoxesAndDirection){\n                    this.setState({\n                        do_GetRequireBoxesAndDirection: false,\n                        ...this.getRequireBoxesAndDirection()\n                    });\n                }\n                else if(this.state.do_PerseptualCalculation){\n                    this.setState({\n                        do_PerseptualCalculation: false,\n                        ...this.perspectiveCalculation()\n                    });\n                }\n                else if(this.state.do_DrawBoxEdges) {\n                    this.setState({\n                        do_DrawBoxEdges: false,\n                        ...this.drawBoxEdges()\n                    });\n                }\n                else if(this.state.do_SmartPlaceBoxes) {\n                    this.setState({\n                        do_SmartPlaceBoxes: false,\n                        ...this.smartPlaceBoxes()\n                    });\n                }\n        };\n\n        initializeDoms = () =>{\n            let changeState = {};\n\n            this.dom_omgArea = document.querySelector('.omg-area');\n            this.dom_omgContainer = this.dom_omgArea.querySelector('.omg-container');\n            if(this.dom_omgContainer){\n                this.dom_wall_top = this.dom_omgContainer.querySelector(\".wall.wall-top\");\n                this.dom_wall_left = this.dom_omgContainer.querySelector(\".wall.wall-left\");\n                this.dom_wall_right = this.dom_omgContainer.querySelector(\".wall.wall-right\");\n                this.dom_wall_bottom_left = this.dom_omgContainer.querySelector(\".wall.wall-bottom-left\");\n                this.dom_wall_bottom_right = this.dom_omgContainer.querySelector(\".wall.wall-bottom-right\");\n                this.dom_box_doms = this.dom_omgContainer.querySelectorAll('.box');\n                this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n\n                this.dom_input_wall_a = this.dom_omgArea.querySelector(\"input#lengthOfWallA\");\n                this.dom_input_wall_b = this.dom_omgArea.querySelector(\"input#lengthOfWallB\");\n                this.dom_input_wall_c1 = this.dom_omgArea.querySelector(\"input#lengthOfWallC1\");\n                this.dom_input_wall_c2 = this.dom_omgArea.querySelector(\"input#lengthOfWallC2\");\n\n                this.dom_omgContainerPadding = this.dom_omgContainer.querySelector('.container-padding');\n\n                let isValid = (this.dom_wall_top && this.dom_wall_left && this.dom_wall_right && this.dom_wall_bottom_left\n                    && this.dom_wall_bottom_right\n                    /*&& this.dom_input_wall_a && this.dom_input_wall_b && this.dom_input_wall_c1 && this.dom_input_wall_c2*/\n                     /*&& this.dom_box1_dom && this.dom_box2_dom*/\n                    && this.dom_omgContainerPadding\n                );\n                if(isValid) {\n                    document.addEventListener('mousemove', this.onMouseMove);\n                    document.addEventListener('mouseup', this.onMouseUp);\n                    changeState[\"alreadyLoaded\"] = true;\n                }else{\n                    this.props.dispatch(sendNotification(\"Something is missing, some UI Elements not found...\"));\n                }\n            }else{\n                this.props.dispatch(sendNotification(\"Container not found!\"));\n            }\n\n            return changeState;\n        };\n        setArgs = () => {\n            let changeState = {};\n\n            let wall_a = this.props.quote.wall_a;\n            let wall_b = this.props.quote.wall_b;\n            let wall_c1 = this.props.quote.wall_c1;\n            let wall_c2 = this.props.quote.wall_c2;\n\n            changeState = {\n              wall_a, wall_b, wall_c1, wall_c2,\n                input_wall_a: wall_a,\n                input_wall_b: wall_b,\n                input_wall_c1: wall_c1,\n                input_wall_c2: wall_c2\n            };\n\n            return changeState;\n        };\n        wallsRulesCheck = ()=> {\n            let changeState = {};\n\n            let wall_a = this.state.wall_a;\n            let wall_b = this.state.wall_b;\n            let wall_c1 = this.state.wall_c1;\n            let wall_c2 = this.state.wall_c2;\n\n            let responseRules = checkAllWalls(this.props.boxes, wall_a, wall_b, wall_c1, wall_c2, this.state.containerPadding);\n            if (responseRules.haveActions) {\n                this.allActions = responseRules.actions;\n            }\n\n            if (responseRules.success) {\n                let totalRacks = 0;\n                if(responseRules.data.haveSingleRack){\n                    totalRacks = 1;\n                }else if(responseRules.data.haveDoubleRack){\n                    totalRacks = 2;\n                }\n\n\n                wall_a = responseRules.data.a;\n                wall_b = responseRules.data.b;\n                wall_c1 = responseRules.data.c1;\n                wall_c2 = responseRules.data.c2;\n                this.setState({\n                    totalBoxes: totalRacks,\n                    input_wall_a: wall_a,\n                    input_wall_b: wall_b,\n                    input_wall_c1: wall_c1,\n                    input_wall_c2: wall_c2,\n                    wall_a, wall_b, wall_c1, wall_c2,\n                });\n                this.refreshScreenLengths(true);\n            } else {\n                this.redirectToContactPage(true);\n            }\n\n            return changeState;\n        };\n        perspectiveCalculation = () =>{\n            let changeState = {};\n            let ratio_WallA_WallB = this.state.wall_a / this.state.wall_b;\n            let ratio_screen_height_width = this.state.screenHeight/this.state.screenWidth;\n            //let boxZoomFactor;\n            if(ratio_WallA_WallB >= 1) {\n                //WallA is larger than WallB\n                if(ratio_screen_height_width > 1){\n                    //Where screen height is larger than width...\n                    changeState[\"perceptualMaxLength\"] = this.screenWidth/2;\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"] / ratio_WallA_WallB;\n                }else{\n                    //Where screen width is larger than height...\n                    changeState[\"perceptualMaxLength\"] = this.screenHeight/2;\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"] / ratio_WallA_WallB;\n                }\n                let actualThickness = ((this.state.normalLength / this.state.wall_a) * this.state.thickness);\n                changeState[\"perceptualWallThickness\"] = changeState[\"perceptualWallA\"] * (actualThickness/this.state.wall_a);\n                changeState[\"perceptualWallThickness\"] = this.checkPerceptualWallThickness(changeState[\"perceptualWallThickness\"]);\n                let actualPadding = ((this.state.normalLength / this.state.wall_a) * this.state.containerPadding);\n                changeState[\"perceptualContainerPadding\"] = changeState[\"perceptualWallA\"] * (actualPadding / this.state.wall_a);\n                changeState[\"perceptualContainerPadding\"] = this.checkPerceptualPadding(changeState[\"perceptualContainerPadding\"]);\n\n            }else{\n                //WallB is larger than WallA\n\n                if(ratio_screen_height_width > 1){\n                    //Where screen height is larger than width...\n                    changeState[\"perceptualMaxLength\"]  = this.screenWidth/2;\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"] * ratio_WallA_WallB;\n                }else{\n                    //Where screen width is larger than height...\n                    changeState[\"perceptualMaxLength\"] = this.screenHeight/2;\n                    changeState[\"perceptualWallB\"] = changeState[\"perceptualMaxLength\"];\n                    changeState[\"perceptualWallA\"] = changeState[\"perceptualMaxLength\"] * ratio_WallA_WallB;\n                }\n                let actualThickness = ((this.state.normalLength / this.state.wall_b) * this.state.thickness);\n                changeState[\"perceptualWallThickness\"] = changeState[\"perceptualWallB\"] * (actualThickness/this.state.wall_b);\n                changeState[\"perceptualWallThickness\"] = this.checkPerceptualWallThickness(changeState[\"perceptualWallThickness\"]);\n                let actualPadding = ((this.state.normalLength / this.state.wall_b) * this.state.containerPadding);\n                changeState[\"perceptualContainerPadding\"] = changeState[\"perceptualWallB\"] * (actualPadding/this.state.wall_b);\n                changeState[\"perceptualContainerPadding\"] = this.checkPerceptualPadding(changeState[\"perceptualContainerPadding\"]);\n                //zoom = changeState[\"perceptualWallB\"] / this.state.wall_b;\n                //boxZoomFactor = this.state.wall_b / changeState[\"perceptualWallB\"];\n                //zoom = (this.state.normalLength / this.state.wall_b);\n            }\n\n\n            //TODO : box height\n\n\n\n\n\n\n\n\n            //Box A - Height & Width...\n            changeState[\"perceptualWallC1\"] = changeState[\"perceptualWallA\"] * (this.state.wall_c1/this.state.wall_a);\n            changeState[\"perceptualWallC2\"] = changeState[\"perceptualWallA\"] * (this.state.wall_c2/this.state.wall_a);\n            return changeState;\n        };\n        getRequireBoxesAndDirection = () => {\n            let boxA = false;\n            let boxB = false;\n            let boxDirectionLeft = this.state.wall_c1 >= this.state.wall_c2;\n            if (this.state.totalBoxes === 2) {\n                let searchMaxHeight;\n                let searchMaxWidth;\n                    //For Box b - (vertically - height)\n                      searchMaxHeight = this.state.wall_b - (this.state.containerPadding * 2);\n                      searchMaxWidth = this.state.wall_a - (this.state.containerPadding * 2);\n                      let rack = getClosestMinimumSizeRack(this.props.boxes, searchMaxWidth, searchMaxHeight);\n                      if(rack){\n                          boxB = rack;\n\n                          //For Box a - (horizontally - width)\n                          searchMaxHeight = this.state.wall_a - (this.state.containerPadding * 2) - boxB.width;\n                          searchMaxWidth = this.state.wall_b - (this.state.containerPadding * 2);\n\n                          rack = getClosestMinimumSizeRack(this.props.boxes, searchMaxWidth, searchMaxHeight);\n                          if(rack){\n                              boxA = rack;\n                          }\n                      }\n            }else if(this.state.totalBoxes === 1){\n                let searchMaxHeight;\n                let searchMaxWidth;\n                //For Box b - (vertically - height)\n                searchMaxHeight = this.state.wall_b - (this.state.containerPadding * 2);\n                searchMaxWidth = this.state.wall_a - (this.state.containerPadding * 2);\n\n                let rack = getClosestMinimumSizeRack(this.props.boxes, searchMaxWidth, searchMaxHeight);\n                if(rack){\n                    boxA = rack;\n                }\n            }\n\n            return {\n                boxes: {\n                    a: boxA,\n                    b: boxB\n                },\n                isBoxDirectionLeft: boxDirectionLeft\n            };\n        };\n        drawBoxEdges = () =>{\n            let changeState = {};\n            setHeight(this.dom_omgContainer, {height: this.state.perceptualWallB - this.state.perceptualWallThickness});\n            setWidth(this.dom_omgContainer, {width: this.state.perceptualWallA - this.state.perceptualWallThickness});\n\n            let containerOffset = getOffset(this.dom_omgContainer);\n\n            //For right & left wall only...\n            let elOffset = getOffset(this.dom_wall_right);\n            let wall_fixed_height = containerOffset.height + (this.state.perceptualWallThickness * 2) - 0.5;\n\n            //Left Wall...\n            setWidth(this.dom_wall_left, {width: this.state.perceptualWallThickness});\n            setLeft(this.dom_wall_left,containerOffset,true);\n            setTop(this.dom_wall_left,containerOffset, true);\n            setHeight(this.dom_wall_left, {height: wall_fixed_height});\n\n            //Right Wall...\n            setWidth(this.dom_wall_right, {width: this.state.perceptualWallThickness});\n            setRight(this.dom_wall_right,{right:containerOffset.right + 1});\n            setTop(this.dom_wall_right, containerOffset, true);\n            setHeight(this.dom_wall_right, {height: wall_fixed_height});\n\n            //Top Wall...\n            setHeight(this.dom_wall_top, {height: this.state.perceptualWallThickness});\n            setLeft(this.dom_wall_top,containerOffset);\n            setTop(this.dom_wall_top, containerOffset, false, true);\n            setWidth(this.dom_wall_top, {width: containerOffset.width + 1});\n\n            //Bottom Left Wall...\n            setHeight(this.dom_wall_bottom_left, {height: this.state.perceptualWallThickness});\n            setLeft(this.dom_wall_bottom_left,containerOffset);\n            setBottom(this.dom_wall_bottom_left, containerOffset, false, false);\n            setWidth(this.dom_wall_bottom_left, { width: this.state.perceptualWallC1 });\n\n            //Bottom Right Wall...\n            setHeight(this.dom_wall_bottom_right, {height: this.state.perceptualWallThickness});\n            setBottom(this.dom_wall_bottom_right, containerOffset);\n            setWidth(this.dom_wall_bottom_right, { width: this.state.perceptualWallC2});\n            setRightInner(this.dom_wall_bottom_right, {right: containerOffset.right + 1 });\n\n\n            //Set Input of WALL A\n            let offsetWallTop = getOffset(this.dom_wall_top);\n            setTop(this.dom_input_wall_a, {top: offsetWallTop.top-5}, false, true);\n\n            //Set Input of WALL B\n            let offsetWallLeft = getOffset(this.dom_wall_left);\n            setLeft(this.dom_input_wall_b, {left: offsetWallLeft.left}, true, false);\n\n            //Set Input of WALL C1\n            let offsetWallBottomLeft = getOffset(this.dom_wall_bottom_left);\n            let offsetWallBottomRight = getOffset(this.dom_wall_bottom_right);\n            let offsetWallRight = getOffset(this.dom_wall_right);\n\n            setBottom(this.dom_input_wall_c1, {bottom: offsetWallBottomLeft.bottom+50}, false, true);\n            setLeft(this.dom_input_wall_c1, {left: offsetWallBottomLeft.left}, false, true);\n\n            //Set Input of WALL C2\n            setBottom(this.dom_input_wall_c2, {bottom: offsetWallBottomLeft.bottom+50}, false, true);\n            setRight(this.dom_input_wall_c2, {right: offsetWallRight.left}, false, true);\n\n            return changeState;\n        };\n        smartPlaceBoxes = ()=>{\n            let changeState = {};\n\n            let containerCurrentOffset = getOffset(this.dom_omgContainerPadding);\n            let containerActualOffset = {\n                width: this.state.wall_a - (this.state.containerPadding * 2),\n                height: this.state.wall_b - (this.state.containerPadding * 2)\n            };\n\n            if(this.state.totalBoxes === 2){\n                changeState[\"perceptualBoxAHeight\"] = (containerCurrentOffset.height / containerActualOffset.height) * this.state.boxes.a.width - 2;\n                changeState[\"perceptualBoxAWidth\"] = (containerCurrentOffset.width / containerActualOffset.width) * this.state.boxes.a.height  - 2;\n\n                changeState[\"perceptualBoxBHeight\"] = (containerCurrentOffset.height / containerActualOffset.height) * this.state.boxes.b.height - 2;\n                changeState[\"perceptualBoxBWidth\"] = (containerCurrentOffset.width / containerActualOffset.width) * this.state.boxes.b.width - 2;\n            }else if (this.state.totalBoxes === 1) {\n                changeState[\"perceptualBoxAHeight\"] = (containerCurrentOffset.height / containerActualOffset.height) * this.state.boxes.a.height - 2;\n                changeState[\"perceptualBoxAWidth\"] = (containerCurrentOffset.width / containerActualOffset.width) * this.state.boxes.a.width - 2;\n            }\n\n\n            if(this.state.totalBoxes === 2) {\n                this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n\n                let containerOffset = getOffset(this.dom_omgContainerPadding);\n                let box1_offset = getOffset(this.dom_box1_dom);\n                let box2_offset = getOffset(this.dom_box2_dom);\n\n\n                    if(this.state.isBoxDirectionLeft){\n                        box2_offset.left = containerOffset.left + 1;\n                        box2_offset.top = containerOffset.top  + 1;\n\n                        box1_offset.left = containerOffset.left + changeState[\"perceptualBoxBWidth\"] + 1;\n                        box1_offset.top = containerOffset.top  + 1;\n                    }else{\n                        box2_offset.right = containerOffset.right - 1;\n                        box2_offset.width = changeState[\"perceptualBoxBWidth\"];\n                        box2_offset.left = box2_offset.right - box2_offset.width;\n                        box2_offset.top = containerOffset.top + 1;\n\n                        box1_offset.width = changeState[\"perceptualBoxAWidth\"];\n                        box1_offset.right = box2_offset.right;\n                        box1_offset.left = containerOffset.right - 1 - box2_offset.width - box1_offset.width;\n                        box1_offset.top = containerOffset.top + 1;\n                        //box1_offset.bottom = box1_offset.top + box1_offset.height;\n                    }\n\n                setLeft(this.dom_box1_dom, box1_offset);\n                setTop(this.dom_box1_dom, box1_offset);\n\n                setLeft(this.dom_box2_dom, box2_offset);\n                setTop(this.dom_box2_dom, box2_offset);\n            }else{\n                this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n\n                let containerOffset = getOffset(this.dom_omgContainerPadding);\n                let box1_offset = getOffset(this.dom_box1_dom);\n\n                box1_offset.left = containerOffset.left + 1;\n                box1_offset.top = containerOffset.top + 1;\n                box1_offset.right = box1_offset.left + this.perceptiveBoxAWidth;\n                box1_offset.bottom = containerOffset.bottom + this.perceptiveBoxAHeight;\n\n                setLeft(this.dom_box1_dom, box1_offset);\n                setTop(this.dom_box1_dom, box1_offset);\n            }\n            return changeState;\n        };\n\n        onChangeWallACalculateC1AndC2 = (wall_a) =>{\n            let available_space_for_c1_and_c2 = wall_a - 90;\n\n            if(\n                this.state.wall_c1 < 0 ||\n                this.state.wall_c2 < 0 ||\n                this.state.wall_c1 + this.state.wall_c2 > available_space_for_c1_and_c2\n            ){\n                let wall_c1 = available_space_for_c1_and_c2;\n                let wall_c2 = 0;\n                this.setState({\n                    wall_c1,\n                    input_wall_c1: wall_c1,\n                    wall_c2,\n                    input_wall_c2: wall_c2\n                });\n                this.perspectiveCalculation();\n            }\n        };\n        onChangeWallC1CalculateC1AndC2 = (int_WallC1) =>{\n            let int_WallC2 = parseInt(this.state.wall_c2);\n            let int_WallA = parseInt(this.state.wall_a);\n            let available_space_for_c1_and_c2 = int_WallA - 90;\n            if(\n                int_WallC1 < 0 ||\n                int_WallC2 < 0 ||\n                int_WallC1 + int_WallC2 > available_space_for_c1_and_c2\n            ){\n                int_WallC1 = available_space_for_c1_and_c2;\n                int_WallC2 = 0;\n                this.setState({\n                    int_WallC1,\n                    input_wall_c1: int_WallC1,\n                    int_WallC2,\n                    input_wall_c2: int_WallC2\n                });\n                //this.perspectiveCalculation();\n            }\n        };\n        onChangeWallsCalculateC1AndC2 = () =>{\n            let int_WallC1 = parseInt(this.state.wall_c1);\n            let int_WallC2 = parseInt(this.state.wall_c2);\n            let int_WallA = parseInt(this.state.wall_a);\n            let available_space_for_c1_and_c2 = int_WallA - 90;\n            if(\n                int_WallC1 < 0 ||\n                int_WallC2 < 0 ||\n                int_WallC1 + int_WallC2 > available_space_for_c1_and_c2\n            ){\n\n                int_WallC1 = available_space_for_c1_and_c2;\n                int_WallC2 = 0;\n                this.setState({\n                    int_WallC1,\n                    input_wall_c1: int_WallC1,\n                    int_WallC2,\n                    input_wall_c2: int_WallC2\n                });\n                this.perspectiveCalculation();\n            }\n        };\n        refreshScreenLengths = (updateState = false)=>{\n            let changeState = {};\n\n            let screenHeight = window.innerHeight;\n            let screenWidth = window.innerWidth;\n\n            this.screenHeight = screenHeight;\n            this.screenWidth = screenWidth;\n\n            changeState = {\n                screenHeight,\n                screenWidth\n            };\n\n            if(updateState === true){\n                this.setState({...changeState, ...{\n                    do_WallRuleUpdate: true,\n                    do_DrawBoxEdges: true,\n                    do_PerseptualCalculation: true,\n                    do_SmartPlaceBoxes: true,\n                }});\n            }else {\n                return changeState;\n            }\n        };\n\n        onSubmitEntry = (e)=>{\n            e.preventDefault(true);\n            let containerOffset = getOffset(this.dom_omgArea);\n            getScreenshotOfElement(this.dom_omgArea,200, 200, containerOffset.width, containerOffset.height, (log)=>{\n                \n            }).then(canvas => {\n                let doc = document.querySelector('.container-fluid.omg-part.omg-part-2');\n                doc.appendChild(canvas);\n                let screenshot = dataURLtoFile(canvas.toDataURL(), 'screenshot');\n                this.props.dispatch(setScreenshotFile(canvas.toDataURL()));\n\n                let dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n                let dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n                let box1_offset = getOffset(dom_box1_dom);\n                let box2_offset = getOffset(dom_box2_dom);\n                this.props.dispatch(setGlobalData({...this.state, box1_offset: box1_offset, box2_offset: box2_offset}));\n                this.props.dispatch(setQuote(this.state.wall_a, this.state.wall_b, this.state.wall_c1, this.state.wall_c2));\n                this.setState({do_redirectToContact: true});\n            });\n\n            /*let dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n            let dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n            let box1_offset = getOffset(dom_box1_dom);\n            let box2_offset = getOffset(dom_box2_dom);\n            this.props.dispatch(setGlobalData({...this.state, box1_offset: box1_offset, box2_offset: box2_offset}));\n            this.props.dispatch(setQuote(this.state.wall_a, this.state.wall_b, this.state.wall_c1, this.state.wall_c2));\n            this.setState({do_redirectToContact: true});*/\n        };\n    //Move Functions...\n        // calculate relative position to the mouse and set dragging=true\n        onMouseDown_Box1 = (e) => {\n            this.dom_box1_dom = this.dom_omgContainer.querySelector('.box.box-a');\n            let cursorPosition = {x: e.pageX, y: e.pageY};\n            if (e.button !== 0) return;\n            let pos = getOffset(e.target);\n            this.dragging = true;\n            this.dragBox1 = true;\n            this.dragBox2 = false;\n\n            this.relativeDistance = {\n                x: cursorPosition.x - pos.left,\n                y: cursorPosition.y - pos.top\n            };\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        onMouseDown_Box2 = (e) => {\n            this.dom_box2_dom = this.dom_omgContainer.querySelector('.box.box-b');\n            let cursorPosition = {x: e.pageX, y: e.pageY};\n            if (e.button !== 0) return;\n            let pos = getOffset(e.target);\n            this.dragging = true;\n            this.dragBox1 = false;\n            this.dragBox2 = true;\n\n            this.relativeDistance = {\n                x: cursorPosition.x - pos.left,\n                y: cursorPosition.y - pos.top\n            };\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        haveBoxCollision = (box_type, currentCursorPosition) => {\n            let have_collision = false;\n\n            let container_offset = getOffset(this.dom_omgContainerPadding);\n\n\n            let bottom_below_top;\n            let bottom_below_bottom;\n            let top_above_top;\n            let top_above_bottom;\n            let left_lefted_left;\n            let left_righted_left;\n            let left_lefted_right;\n            let right_righted_right;\n            let right_lefted_right;\n            let right_righted_left;\n\n            switch(box_type) {\n                case 1:\n                    let box1_future_offset = getOffset(this.dom_box1_dom);\n                    let box2_current_offset = getOffset(this.dom_box2_dom);\n\n                    box1_future_offset.left = currentCursorPosition.x - this.relativeDistance.x;\n                    box1_future_offset.top = currentCursorPosition.y - this.relativeDistance.y;\n                    box1_future_offset.bottom = box1_future_offset.top + box1_future_offset.height;\n                    box1_future_offset.right = box1_future_offset.left + box1_future_offset.width;\n\n                    if(box2_current_offset) {\n                        bottom_below_top = (box1_future_offset.bottom >= box2_current_offset.top);      //\n                        bottom_below_bottom = (box1_future_offset.bottom >= box2_current_offset.bottom);    //\n                        top_above_top = (box1_future_offset.top <= box2_current_offset.top);    //\n                        top_above_bottom = (box1_future_offset.top < box2_current_offset.bottom);  //\n                        left_lefted_left = (box1_future_offset.left <= box2_current_offset.left);   //\n                        left_righted_left = (box1_future_offset.left >= box2_current_offset.left);   //\n                        left_lefted_right = (box1_future_offset.left <= box2_current_offset.right);     //\n                        right_righted_right = (box1_future_offset.right >= box2_current_offset.right);  //\n                        right_lefted_right = (box1_future_offset.right <= box2_current_offset.right);  //\n                        right_righted_left = (box1_future_offset.right >= box2_current_offset.left);    //\n\n                        if (bottom_below_top && top_above_bottom) {\n                            if (left_lefted_left && right_righted_left) {\n                                have_collision = true;\n                            }\n                            if (left_righted_left && right_lefted_right) {\n                                have_collision = true;\n                            }\n                            if (right_righted_right && left_lefted_right) {\n                                have_collision = true;\n                            }\n                        } else if (right_righted_left && left_lefted_right) {\n                            if (top_above_top && bottom_below_top) {\n                                have_collision = true;\n                            }\n                            if (bottom_below_bottom && top_above_bottom) {\n                                have_collision = true;\n                            }\n                        }\n                    }\n\n                    if(\n                        box1_future_offset.left < container_offset.left\n                        ||\n                        box1_future_offset.top < container_offset.top\n                        ||\n                        box1_future_offset.right > container_offset.right\n                        ||\n                        box1_future_offset.bottom > container_offset.bottom\n                    ){\n                        have_collision = true;\n                    }\n\n                    break;\n                case 2:\n                    let box2_future_offset = getOffset(this.dom_box2_dom);\n                    let box1_current_offset = getOffset(this.dom_box1_dom);\n\n                    box2_future_offset.left = currentCursorPosition.x - this.relativeDistance.x;\n                    box2_future_offset.top = currentCursorPosition.y - this.relativeDistance.y;\n                    box2_future_offset.bottom = box2_future_offset.top + box2_future_offset.height;\n                    box2_future_offset.right = box2_future_offset.left + box2_future_offset.width;\n\n                    bottom_below_top = (box2_future_offset.bottom >= box1_current_offset.top);      //\n                    bottom_below_bottom = (box2_future_offset.bottom >= box1_current_offset.bottom);    //\n                    top_above_top = (box2_future_offset.top <= box1_current_offset.top);    //\n                    top_above_bottom = (box2_future_offset.top <= box1_current_offset.bottom);  //\n                    left_lefted_left = (box2_future_offset.left <= box1_current_offset.left);   //\n                    left_righted_left = (box2_future_offset.left >= box1_current_offset.left);\n                    left_lefted_right = (box2_future_offset.left <= box1_current_offset.right);     //\n                    right_righted_right = (box2_future_offset.right >= box1_current_offset.right);  //\n                    right_lefted_right = (box2_future_offset.right <= box1_current_offset.right);\n                    right_righted_left = (box2_future_offset.right >= box1_current_offset.left);    //\n\n\n                    if (bottom_below_top && top_above_bottom) {\n                        if (left_lefted_left && right_righted_left) {\n                            have_collision = true;\n                        }\n                        if (left_righted_left && right_lefted_right) {\n                            have_collision = true;\n                        }\n                        if (right_righted_right && left_lefted_right) {\n                            have_collision = true;\n                        }\n                    }else if (right_righted_left && left_lefted_right) {\n                        if (top_above_top && bottom_below_top) {\n                            have_collision = true;\n                        }\n                        if (bottom_below_bottom && top_above_bottom) {\n                            have_collision = true;\n                        }\n                    }\n\n                    if(\n                        box2_future_offset.left < container_offset.left\n                        ||\n                        box2_future_offset.top < container_offset.top\n                        ||\n                        box2_future_offset.right > container_offset.right\n                        ||\n                        box2_future_offset.bottom > container_offset.bottom\n                    ){\n                        have_collision = true;\n                    }\n                    break;\n            }\n            return have_collision;\n        };\n\n        onDragBox2 = (cursorPosition) => {\n            if(!this.haveBoxCollision(2, cursorPosition)) {\n                setLeft(this.dom_box2_dom, {left: cursorPosition.x - this.relativeDistance.x});\n                setTop(this.dom_box2_dom, {top: cursorPosition.y - this.relativeDistance.y});\n            }\n        };\n\n        onDragBox1 = (cursorPosition) => {\n            if(!this.haveBoxCollision(1, cursorPosition)){\n                setLeft(this.dom_box1_dom, {left: cursorPosition.x - this.relativeDistance.x});\n                setTop(this.dom_box1_dom, {top: cursorPosition.y - this.relativeDistance.y});\n            }\n        };\n\n        onMouseUp = (e) => {\n            if(this.dragging){\n                let box_pos_data = {\n                    box1_offset: this.state.box1_offset,\n                    box2_offset: this.state.box2_offset\n                };\n\n                if(this.dragBox1){\n                    let box1_offset = getOffset(this.dom_box1_dom);\n                    box_pos_data.box1_offset = box1_offset;\n                }\n\n                if(this.dragBox2){\n                    let box2_offset = getOffset(this.dom_box2_dom);\n                    box_pos_data.box2_offset = box2_offset;\n                }\n\n                this.dragging = false;\n                this.dragBox1 = false;\n                this.dragBox2 = false;\n            }\n\n            this.relativeDistance = {\n                x: 0,\n                y: 0\n            };\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        relativeDistance = {\n            x: 0,\n            y: 0\n        };\n\n        onMouseMove = (e) => {\n            let cursorPosition = {x: e.pageX, y: e.pageY};\n            if (!this.dragging) return;\n\n            //let container_offset = getOffset(this.dom_omgContainer);\n\n            if(this.dragBox1){\n                this.onDragBox1(cursorPosition);\n            }else if(this.dragBox2){\n                this.onDragBox2(cursorPosition);\n            }\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        getRenderBoxes = () => {\n            if(this.state.totalBoxes === 2) {\n                return (\n                    <Fragment>\n                        <div style={{\n                            height: this.state.perceptualBoxAHeight,\n                            width: this.state.perceptualBoxAWidth,\n                            left: this.state.boxALeft,\n                            top: this.state.boxATop, ...box_styles\n                        }} onMouseDown={this.onMouseDown_Box1} className=\"box box-a\">\n                            Box A\n                        </div>\n                        <div style={{\n                            height: this.state.perceptualBoxBHeight,\n                            width: this.state.perceptualBoxBWidth,\n                            left: this.state.boxBLeft,\n                            top: this.state.boxBTop, ...box_styles\n                        }} onMouseDown={this.onMouseDown_Box2} className=\"box box-b\">\n                            Box B\n                        </div>\n                    </Fragment>\n                );\n            }else if(this.state.totalBoxes === 1){\n                return (\n                    <Fragment>\n                        <div style={{\n                            height: this.state.perceptualBoxAHeight,\n                            width: this.state.perceptualBoxAWidth,\n                            left: this.state.boxALeft,\n                            top: this.state.boxATop, ...box_styles\n                        }} onMouseDown={this.onMouseDown_Box1} className=\"box box-a\">\n                            Box A\n                        </div>\n                    </Fragment>\n                );\n            }else{\n                return false;\n            }\n        };\n\n        getRenderData = () => {\n                return (\n                    <Fragment>\n                        <div className=\"container-fluid omg-parts\">\n                            <div className=\"container-fluid omg-part omg-part-1\">\n                                <div className=\"omg-area\">\n                                    <input type=\"number\" onChange={this.onChangeWallA} onBlur={this.onBlurWallA} min=\"90\" max=\"360\" className=\"form-control\" id=\"lengthOfWallA\" placeholder=\"Length of wall A\" value={this.state.input_wall_a}/>\n                                    <input type=\"number\" onChange={this.onChangeWallB} onBlur={this.onBlurWallB} min=\"90\" max=\"360\" className=\"form-control\" id=\"lengthOfWallB\" placeholder=\"Length of wall B\" value={this.state.input_wall_b}/>\n                                    <input type=\"number\" onChange={this.onChangeWallC1} onBlur={this.onBlurWallC1} min=\"0\" className=\"form-control\" id=\"lengthOfWallC1\" placeholder=\"Length of C1\" value={this.state.input_wall_c1}/>\n                                    <input type=\"number\" onChange={this.onChangeWallC2} onBlur={this.onBlurWallC2} min=\"0\" className=\"form-control\" id=\"lengthOfWallC2\" placeholder=\"Length of C2\" value={this.state.input_wall_c2}/>\n                                    <div className='omg-container' style={{padding: this.state.perceptualContainerPadding}}>\n                                        <div className='container-padding'>\n                                            {this.getRenderBoxes()}\n                                            <div className='wall wall-top'/>\n                                            <div className='wall wall-left'/>\n                                            <div className='wall wall-right'/>\n                                            <div className='wall wall-bottom-right'/>\n                                            <div className='wall wall-bottom-left'/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button onClick={this.onSubmitEntry} className=\"btn btn-primary\">Submit Entry</button>\n                            </div>\n                            <div className=\"container-fluid omg-part omg-part-2\" style={{alignItems: \"unset\"}}>\n                                <Tabs showInkBar={true} onChange={this.onChangeTab} selectedTabKey={this.state.currentTab} items={this.getTabs()} />\n                            </div>\n                        </div>\n                    </Fragment>\n                );\n        };\n\n        onChangeTab = (index) => {\n            this.setState({currentTab: index});\n        };\n\n        getMesurementInfo = ()=>(\n            <Fragment>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-striped table-dark\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Component</th>\n                            <th scope=\"col\">Length</th>\n                            <th scope=\"col\">Depth</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <th scope=\"row\">01.</th>\n                            <td>Wall-A</td>\n                            <td>{this.state.wall_a} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">02.</th>\n                            <td>Wall-B</td>\n                            <td>{this.state.wall_b} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">03.</th>\n                            <td>Wall-C1</td>\n                            <td>{this.state.wall_c1} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">04.</th>\n                            <td>Wall-C2</td>\n                            <td>{this.state.wall_c2} cms</td>\n                            <td>--</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">05.</th>\n                            <td>Inner Padding (Fixed)</td>\n                            <td>--</td>\n                            <td>{this.state.containerPadding} cms</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">06.</th>\n                            <td>Wall Thickness (Fixed)</td>\n                            <td>--</td>\n                            <td>{this.state.thickness} cms</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">07.</th>\n                            <td>Box-A</td>\n                            <td>{this.state.boxes.a.height} cms</td>\n                            <td>{this.state.boxes.a.width} cms</td>\n                        </tr>\n                        {(this.state.totalBoxes === 2)?\n                            <tr>\n                                <th scope=\"row\">08.</th>\n                                <td>Box-B</td>\n                                <td>{this.state.boxes.b.height} cms</td>\n                                <td>{this.state.boxes.b.width} cms</td>\n                            </tr>\n                        :false}\n                        </tbody>\n                    </table>\n                </div>\n            </Fragment>\n        );\n\n        getAvailableBoxByIndex = (index)=>{\n            return this.props.boxes[index];\n        };\n\n        changeBoxASize = (event) => {\n            let el = event.target;\n            let val = el.options[el.selectedIndex].value;\n            let selectedBox = this.getAvailableBoxByIndex(val);\n            this.changeBoxSize('a', selectedBox);\n        };\n\n        changeBoxBSize = (event) => {\n            let el = event.target;\n            let val = el.options[el.selectedIndex].value;\n            let selectedBox = this.getAvailableBoxByIndex(val);\n            this.changeBoxSize('b', selectedBox);\n        };\n\n        canFitBoxAInWidth = ({width}, availableWidth) => {\n            if(availableWidth - width > 0){\n                return true;\n            }else{\n                this.props.dispatch(sendNotification('Can\\'t fit width '+width+'cm in available space '+availableWidth+'cm',-1));\n                return false;\n            }\n        }\n        canFitBoxAInHeight = ({height}, availableHeight) => {\n            if(availableHeight - height > 0){\n                return true;\n            }else{\n                this.props.dispatch(sendNotification('Can\\'t fit height '+height+'cm in available space '+availableHeight+'cm',-1));\n                return false;\n            }\n        }\n\n        canFitBoxBInWidth = ({width}, availableWidth) => {\n            if(availableWidth - width > 0){\n                return true;\n            }else{\n                this.props.dispatch(sendNotification('Can\\'t fit width '+width+'cm in available space '+availableWidth+'cm',-1));\n                return false;\n            }\n        }\n        canFitBoxBInHeight = ({height}, availableHeight) => {\n            if(availableHeight - height > 0){\n                return true;\n            }else{\n                this.props.dispatch(sendNotification('Can\\'t fit height '+height+'cm in available space '+availableHeight+'cm',-1));\n                return false;\n            }\n        }\n\n        changeBoxSize = (box_label,selectedBox)=>{\n            let stateBoxes = {...this.state.boxes};\n            let refine_box_data = {height: selectedBox.length, width: selectedBox.depth};\n            let final_data = {\n                boxes: stateBoxes,\n                do_WallRuleUpdate: true,\n                do_DrawBoxEdges: true,\n                do_PerseptualCalculation: true,\n                do_SmartPlaceBoxes: true,\n            };\n\n            let containerActualOffset = {\n                width: this.state.wall_a - (this.state.containerPadding * 2),\n                height: this.state.wall_b - (this.state.containerPadding * 2)\n            };\n\n            let availableWidth = 0;\n            let availableHeight = 0;\n\n            switch(box_label){\n                case \"a\":\n                    availableHeight = containerActualOffset.width;\n                    if(this.dom_box2_dom){\n                        availableHeight = containerActualOffset.width - this.state.boxes.b.width;\n                    }\n                    availableWidth = containerActualOffset.height;\n                    if(\n                        this.canFitBoxAInWidth(refine_box_data, availableWidth) &&\n                        this.canFitBoxAInHeight(refine_box_data, availableHeight)\n                    ){\n                        stateBoxes.a = refine_box_data;\n                    }\n                    break;\n                case \"b\":\n                    availableWidth = containerActualOffset.width;\n                    availableHeight = containerActualOffset.height;\n                    availableWidth = availableWidth - this.state.boxes.a.height;\n                    if(\n                        this.canFitBoxBInWidth(refine_box_data, availableWidth) &&\n                        this.canFitBoxBInHeight(refine_box_data, availableHeight)\n                    ){\n                        stateBoxes.b = refine_box_data;\n                    }\n                    break;\n            }\n            final_data.boxes = stateBoxes;\n            this.setState(final_data);\n        };\n\n\n    //Box A control events...\n        onClick_increaseBoxA_width = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.depth > current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                //this.props.dispatch(sendNotification(\"The depth more than \"+current_box.width+\"cm is not available for Box-A.\",-1));\n                this.props.dispatch(sendNotification(\"Sorry other boxes with different sizes will not fit into this room.\",-1));\n            }\n        };\n\n        onClick_increaseBoxA_height = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.length > current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"Sorry other boxes with different sizes will not fit into this room.\",-1));\n                //this.props.dispatch(sendNotification(\"The height more than \"+current_box.height+\"cm is not available for Box-A.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxA_width = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n\n            let nextAvailableBox = false;\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.depth < current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The depth less than \"+current_box.width+\"cm is not available for Box-A.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxA_height = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.a;\n\n            let nextAvailableBox = false;\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.length < current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('a',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The height less than \"+current_box.height+\"cm is not available for Box-A.\",-1));\n            }\n        };\n\n\n    //Box B control events...\n        onClick_increaseBoxB_width = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.depth > current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The depth more than \"+current_box.width+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n        onClick_increaseBoxB_height = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n            let nextAvailableBox = false;\n            available_boxes.map(box=>{\n                if(box.enable && box.length > current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n                return false;\n            });\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The height more than \"+current_box.height+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxB_width = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n\n            let nextAvailableBox = false;\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.depth < current_box.width && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The depth less than \"+current_box.width+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n        onClick_decreaseBoxB_height = ()=>{\n            let available_boxes = this.props.boxes;\n            let current_box = this.state.boxes.b;\n\n            let nextAvailableBox = false;\n\n            for(let i = available_boxes.length - 1; 0 <= i; i--){\n                let box = available_boxes[i];\n                if(box.enable && box.length < current_box.height && !nextAvailableBox){\n                    nextAvailableBox = box;\n                }\n            }\n\n            if(nextAvailableBox){\n                this.changeBoxSize('b',nextAvailableBox);\n            }else{\n                this.props.dispatch(sendNotification(\"The height less than \"+current_box.height+\"cm is not available for Box-B.\",-1));\n            }\n        };\n\n\n        getBoxControls = ()=>(\n            <Fragment>\n                <div className=\"table-responsive\">\n                    <table style={{textAlign: 'center'}} className=\"table table-striped table-dark\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Box</th>\n                            <th scope=\"col\">Depth & Length</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <th scope=\"row\">01.</th>\n                            <td>Box-A</td>\n                            <td>\n                                <select onChange={this.changeBoxASize} className=\"form-control\">\n                                    {this.props.boxes.map((box, index1) => {\n                                        let selectedBoxA = this.state.boxes.a;\n                                        let isSelected = (selectedBoxA.height === box.length) && (selectedBoxA.width === box.depth);\n                                        if(box.enable) {\n                                            return <option value={index1} selected={isSelected}>{box.depth}cm, {box.length}cm</option>;\n                                        }else{\n                                            return <option disabled={true} value={index1}>{box.depth}cm, {box.length}cm</option>;\n                                        }\n                                    })}\n                                </select>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">02.</th>\n                            <td>Box-A</td>\n                            <td>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <td>Depth</td>\n                                            <td>Length</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                    <button onClick={this.onClick_increaseBoxA_width.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                    <button onClick={this.onClick_decreaseBoxA_width.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                </div>\n                                            </td>\n                                            <td>\n                                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                    <button onClick={this.onClick_increaseBoxA_height.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                    <button onClick={this.onClick_decreaseBoxA_height.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                        {(this.state.totalBoxes === 2)?\n                            <Fragment>\n                                <tr>\n                                    <th scope=\"row\">03.</th>\n                                    <td>Box-B</td>\n                                    <td>\n                                        <select onChange={this.changeBoxBSize} className=\"form-control\">\n                                            {this.props.boxes.map((box, index1) => {\n                                                let selectedBoxB = this.state.boxes.b;\n                                                let isSelected = (selectedBoxB.height === box.length) && (selectedBoxB.width === box.depth);\n                                                if(box.enable) {\n                                                    return <option value={index1} selected={isSelected}>{box.depth}cm, {box.length}cm</option>;\n                                                }else{\n                                                    return <option disabled={true} value={index1}>{box.depth}cm, {box.length}cm</option>;\n                                                }\n                                            })}\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">04.</th>\n                                    <td>Box-B</td>\n                                    <td>\n                                        <table>\n                                            <thead>\n                                            <tr>\n                                                <td>Depth</td>\n                                                <td>Length</td>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                            <tr>\n                                                <td>\n                                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                        <button onClick={this.onClick_increaseBoxB_width.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                        <button onClick={this.onClick_decreaseBoxB_width.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                        <button onClick={this.onClick_increaseBoxB_height.bind(this)} className='btn btn-sm btn-success'>Increase</button>\n                                                        <button onClick={this.onClick_decreaseBoxB_height.bind(this)} className='btn btn-sm btn-danger'>Decrease</button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            </tbody>\n                                        </table>\n                                    </td>\n                                </tr>\n                            </Fragment>\n                            :false}\n                        </tbody>\n                    </table>\n                </div>\n            </Fragment>\n        );\n\n        getInstructionInfo = ()=>(\n            <Fragment>\n                <div className=\"alert alert-info\" role=\"alert\">\n                    <h4 className=\"alert-heading\">Well done! NOW,</h4>\n                    <p>Click on the box to change the size or drag them around to re-arrange them.</p>\n                    <hr/>\n                    <p className=\"mb-0\">Any confusion please <a href=\"#\" onClick={()=>{this.setState({do_redirectToContact: true})}}>contact us</a>.</p>\n                </div>\n            </Fragment>\n        );\n\n        getBoxAvailibilityInfo = ()=>{\n            return (\n                <Fragment>\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-striped table-dark\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Depth</th>\n                                    <th scope=\"col\">Length</th>\n                                    <th scope=\"col\">Availability ?</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.boxes.map(({depth, length, enable}, index) => {\n                                   return (\n                                       <tr className={enable?'':'in-active'} key={index} aria-disabled={true}>\n                                           <th scope=\"row\">{index + 1}.</th>\n                                           <td>{depth} cms</td>\n                                           <td>{length} cms</td>\n                                           <td>{enable?'Available':'Not Available'}</td>\n                                       </tr>\n                                   );\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </Fragment>\n            );\n        };\n\n        getTabs = () => {\n            const tabs = [\n                { name: 'Instructions.', content: this.getInstructionInfo() },\n                { name: 'Controls.', content: this.getBoxControls() },\n                { name: 'Advance Info.', content: this.getMesurementInfo() },\n                { name: 'Box Availibilities.', content: this.getBoxAvailibilityInfo() }];\n            return tabs.map((president, index) => ({\n                title: president.name,\n                getContent: () => president.content,\n                key: index,\n                tabClassName: 'tab',\n                panelClassName: 'panel',\n            }));\n        };\n\n\n\n    //Render Layout...\n    render(){\n        return(\n            <Fragment>\n                {(!this.props.app.is_quote_selected)?this.redirectToHomePage(true):false}\n                {this.redirectToContactPage(this.props.app.redirect_to_contact_page || this.state.do_redirectToContact)}\n                {this.getRenderData()}\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(store=>({boxes: store.box.boxes, notification: store.notification, quote: store.quote, app: store.app}), dispatch => ({dispatch}))(SelfService);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nimport {setQuote, clearResult as clearQuote} from '../../actions/ActionQuote';\nimport {removeSpecialCase, setSpecialCase, isQuotActive, setNewHistory, setHistory} from '../../actions/ActionApp';\n\nimport {sendNotification} from '../../actions/Notification';\nimport {Redirect} from \"react-router-dom\";\n\nconst redirectToQuotationPage = (bool)=> {\n    return (bool) ? <Redirect to={{ pathname: '/self-service', state: {redirect_back_path: '/'} }}/> : false;\n};\nconst redirectToContactPage = (bool)=> {\n    return (bool) ? <Redirect to={{ pathname: '/contact', state: {redirect_back_path: '/'} }}/> : false;\n}; \nconst getTrimmedString = (str) => {\n    if(typeof str == \"string\"){\n        return str.trim();\n    }else{\n        return str;\n    }\n};\n\nclass QuoteSelection extends Component{\n\n    state = {\n      wall_a: \"\",\n      wall_b: \"\",\n      wall_c1: \"\",\n      wall_c2: \"\",\n\n      redirect_quotation: false,\n      redirect_contact: false\n    };\n\n    componentDidMount() {\n        if(this.props.app.history[this.props.app.currentHistoryIndex] !== \"/\") {\n            this.props.dispatch(setHistory('0',['/']));\n        }\n    }\n\n    onClickSubmit = (e)=>{\n        e.preventDefault();\n        this.props.dispatch(clearQuote());\n        let wall_a = getTrimmedString(this.state.wall_a);\n        let wall_b = getTrimmedString(this.state.wall_b);\n        let wall_c1 = getTrimmedString(this.state.wall_c1);\n        let wall_c2 = getTrimmedString(this.state.wall_c2);\n\n        if((!wall_a || wall_a.length <= 0) && (wall_a !== 0 || wall_a !== \"0\")){\n            wall_a = false;\n        }else{\n            wall_a = parseInt(wall_a);\n        }\n        if((!wall_b || wall_b.length <= 0) && (wall_b !== 0 || wall_b !== \"0\")){\n            wall_b = false;\n        }else{\n            wall_b = parseInt(wall_b);\n        }\n        if((!wall_c1 || wall_c1.length <= 0) && (wall_c1 !== 0 || wall_c1 !== \"0\")){\n            wall_c1 = false;\n        }else{\n            wall_c1 = parseInt(wall_c1);\n        }\n        if((!wall_c2 || wall_c2.length <= 0) && (wall_c2 !== 0 || wall_c2 !== \"0\")){\n            wall_c2 = false;\n        }else{\n            wall_c2 = parseInt(wall_c2);\n        }\n\n        if(!wall_a && !wall_b){\n            this.props.dispatch(setSpecialCase('The value of Wall-A & Wall-B is blank.'));\n            this.props.dispatch(sendNotification(\"Wall-A & Wall-B values is mandatory.\"));\n            this.setState({redirect_contact: true});\n        }else if(!wall_a){\n            this.props.dispatch(setSpecialCase('The value of Wall-A is blank.'));\n            this.props.dispatch(sendNotification(\"Wall-A is value is mandatory.\"));\n            this.setState({redirect_contact: true});\n        }else if(!wall_b){\n            this.props.dispatch(setSpecialCase('The value of Wall-B is blank.'));\n            this.props.dispatch(sendNotification(\"Wall-B is value is mandatory.\"));\n            this.setState({redirect_contact: true});\n        }else if(wall_a > 360 & wall_b > 360){\n            this.props.dispatch(setSpecialCase('Maximum Length of Wall-A & Wall-B is greater than 3.6m.'));\n            this.props.dispatch(sendNotification('Maximum Length of Wall-A & Wall-B is greater than 3.6m.'));\n            this.setState({redirect_contact: true});\n        }else if(wall_a > 360){\n            this.props.dispatch(setSpecialCase('Maximum Length of Wall-A is greater than 3.6m.'));\n            this.props.dispatch(sendNotification('Maximum Length of Wall-A is greater than 3.6m.'));\n            this.setState({redirect_contact: true});\n        }else if(wall_b > 360){\n            this.props.dispatch(setSpecialCase('Maximum Length of Wall-B is greater than 3.6m.'));\n            this.props.dispatch(sendNotification('Maximum Length of Wall-B is greater than 3.6m.'));\n            this.setState({redirect_contact: true});\n        }else{\n            this.props.dispatch(removeSpecialCase());\n            let result = setQuote(wall_a, wall_b, wall_c1, wall_c2);\n            if(result) {\n                this.props.dispatch(result);\n                this.props.dispatch(isQuotActive());\n                this.setState({redirect_quotation: true});\n            }else{\n                this.props.dispatch(sendNotification(\"Wall-A & Wall-B is mandatory, if you have confusion please contact us.\"));\n                this.setState({redirect_contact: true});\n            }\n        }\n    };\n\n    onBlurWallA = ()=>{\n        if(this.state.wall_a.length > 0) {\n            let val = this.state.wall_a;\n            if (val < 1) {\n                this.props.dispatch(sendNotification(\"Please provide Wall-A value correctly.\"));\n                val = 90;\n            } \n            /*else if (val > 360) {\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall A should be less than or equals 3.6m.\"));\n            }*/\n            this.setState({wall_a: val});\n        }else{\n            this.props.dispatch(sendNotification(\"If you have confusion you can contact us.\"));\n        }\n    };\n    onBlurWallB = ()=>{\n        if(this.state.wall_b.length > 0) {\n            let val = this.state.wall_b;\n            if (val < 1) {\n                this.props.dispatch(sendNotification(\"Please provide Wall-B value correctly.\"));\n                val = 90;\n            } \n            /*else if (val > 360) {\n                val = 360;\n                this.props.dispatch(sendNotification(\"Wall B should be less than or equals 3.6m.\"));\n            }*/\n            this.setState({wall_b: val});\n        }else{\n            this.props.dispatch(sendNotification(\"If you have confusion you can contact us.\"));\n        }\n    };\n    onBlurWallC1 = ()=>{\n        if(this.state.wall_c1.length > 0) {\n            let val = this.state.wall_c1;\n            if (this.state.wall_a > 0 && this.state.wall_b > 0) {\n                let available_space = this.state.wall_a - 90 - this.state.wall_c2;\n                if (available_space < val) {\n                    if (available_space < 0) {\n                        let c2 = parseInt(this.state.wall_c2) + parseInt(available_space);\n                        this.setState({wall_c2: c2, wall_c1: 0});\n                    } else {\n                        this.setState({wall_c1: available_space});\n                    }\n                    this.props.dispatch(sendNotification(\"C1 & C2 should be equals or less than (Wall-A - 90), where 90cm is the minimum door of the container.\"));\n                } else {\n                    this.setState({wall_c1: val});\n                }\n            } else {\n                this.setState({wall_c1: \"\"});\n                this.props.dispatch(sendNotification(\"Please enter Wall-A & Wall-B value first.\"));\n            }\n        }\n    };\n    onBlurWallC2 = ()=>{\n        if(this.state.wall_c2.length > 0) {\n            let val = this.state.wall_c2;\n            if (this.state.wall_a.length > 0 && this.state.wall_b.length > 0) {\n                let available_space = this.state.wall_a - 90 - this.state.wall_c1;\n                if (available_space < val) {\n                    if (available_space < 0) {\n                        let c1 = parseInt(this.state.wall_c1) + parseInt(available_space);\n                        this.setState({wall_c1: c1});\n                        this.setState({wall_c2: 0});\n                    } else {\n                        this.setState({wall_c2: available_space});\n                    }\n                    this.props.dispatch(sendNotification(\"C1 & C2 should be equals or less than (Wall-A - 90), where 90cm is the minimum door of the container.\"));\n                } else {\n                    this.setState({wall_c2: val});\n                }\n            } else {\n                this.setState({wall_c2: \"\"});\n                this.props.dispatch(sendNotification(\"Please enter Wall-A & Wall-B value first.\"));\n            }\n        }\n    };\n\n    onChangeWallA = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_a: val});\n    };\n    onChangeWallB = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_b: val});\n    };\n    onChangeWallC1 = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_c1: val});\n    };\n    onChangeWallC2 = (e)=>{\n        let val = e.target.value;\n        this.setState({wall_c2: val});\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.onClickSubmit}>\n                {redirectToQuotationPage(this.state.redirect_quotation)}\n                {redirectToContactPage(this.state.redirect_contact)}\n                <div className=\"form-group\">\n                    <label>Enter length of Wall-A (**Mandatory)</label>\n                    <input value={this.state.wall_a} onBlur={this.onBlurWallA} onChange={this.onChangeWallA} type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter length of Wall-B (**Mandatory)</label>\n                    <input value={this.state.wall_b} onBlur={this.onBlurWallB} onChange={this.onChangeWallB}  type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter length of C1</label>\n                    <input value={this.state.wall_c1} onBlur={this.onBlurWallC1} onChange={this.onChangeWallC1} type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label>Enter length of C2</label>\n                    <input value={this.state.wall_c2} onBlur={this.onBlurWallC2} onChange={this.onChangeWallC2}  type=\"number\" className=\"form-control\" placeholder=\"Enter length in Centimeter\"/>\n                    <small className=\"form-text text-muted\">Please put length as centimeter unit.</small>\n                </div>\n                <div className=\"form-group\">\n                    <button onClick={this.onClickSubmit} type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default connect(store=>({notification: store.notification, quote: store.quote, app: store.app}), dispatch => ({dispatch}))(QuoteSelection);\n","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {sendNotification} from \"../../actions/Notification\";\n\nimport {Redirect} from 'react-router-dom';\nimport {setNewHistory, RemoveRedirect} from \"../../actions/ActionApp\";\nimport {submitContactData} from '../../actions/ActionAPIS';\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst redirectToHomePage = (bool)=> {\n    return (bool) ? <Redirect to=\"/\"/> : false;\n};\n\nclass ContactPage extends Component{\n    state = {\n        redirect_to: false,\n        full_name: false,\n        email: false,\n        subject: false\n    };\n\n    componentDidMount() {\n        if(this.props.app.history[this.props.app.currentHistoryIndex] !== \"/contact\") {\n            this.props.dispatch(setNewHistory('/contact'));\n        }\n    }\n\n    componentDidUpdate(){\n        let path = this.props.app.redirectToPath;\n        if(path){\n            this.props.dispatch(RemoveRedirect());\n            this.setState({redirect_to: path});\n        }\n    }\n\n    onSubmitForm = (e)=>{\n        e.preventDefault();\n        if(!this.state.full_name){\n            this.props.dispatch(sendNotification(\"Please enter your full name.\", -1));\n        }else if(!this.state.email) {\n            this.props.dispatch(sendNotification(\"Please enter your email.\", -1));\n        }else if(!validateEmail(this.state.email)){\n            this.props.dispatch(sendNotification(\"Please enter valid email.\", -1));\n        }else if(!this.state.subject){\n            this.props.dispatch(sendNotification(\"Please enter your extra requirement.\", -1));\n        }else{\n            let haveSpecialCase = this.props.app.is_special_cases;\n\n            let final_data = {\n                data: this.props.data,\n                screenshot: this.props.screenshot,\n                contact_details: {\n                    full_name: this.state.full_name,\n                    email: this.state.email,\n                    subject: this.state.subject\n                },\n                special: false\n            };\n\n            if(haveSpecialCase){\n                final_data['special'] = this.props.app.reason_special_cases;\n            }\n            this.props.dispatch(submitContactData(final_data));\n        }\n    };\n    onClickBack = (e) => {\n        let lastRedirectLocation = '/';\n        if(\n            this.hasOwnProperty('props')\n            && this.props.hasOwnProperty('location')\n            && this.props.location.hasOwnProperty('state')\n            && this.props.location.state.hasOwnProperty('redirect_back_path')\n        ){\n            lastRedirectLocation = this.props.location.state.redirect_back_path;\n        }else{\n            lastRedirectLocation = '/';\n        }\n        this.setState({redirect_to: lastRedirectLocation});\n    };\n\n    specialCases = () =>{\n        if(this.props.app.is_special_cases){\n            return (\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <h2>{this.props.app.reason_special_cases}</h2>\n                </div>\n            );\n        }else{\n            return false;\n        }\n    };\n\n    render() {\n        return (\n            <Fragment>\n                {(this.state.redirect_to !== false)?<Redirect to={this.state.redirect_to}/>:false}\n                <div className='container p-4'>\n                    {\n                        (!!this.props.data)?\n                            <div className=\"jumbotron p-2 mb-5\">\n                                <h3 className=\"display-6\">Submit Quote</h3>\n                                <p className=\"lead\">Submit your quotes to admin.</p>\n                            </div>\n                            :\n                            <div className=\"jumbotron p-2 mb-5\">\n                                <h3 className=\"display-6\">Contact</h3>\n                                <p className=\"lead\">Submit your enquiry data to admin.</p>\n                            </div>\n                    }\n                    <div className='row' style={{ display: \"flex\",\n                        justifyContent: \"center\" }}>\n                        {\n                            (!!this.props.data)?\n                                <div className=\"col-md-6 col-sm-12\">\n                                    <img className='img-responsive' src={this.props.screenshot}/>\n                                </div>\n                            :false\n                        }\n                        <div className=\"col-md-6 col-sm-12\">\n                            <form onSubmit={this.onSubmitForm.bind(this)}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\">Full Name</label>\n                                <input onChange={e=>{let val = e.target.value; val = val.trim(); if(!val.length){val = false;} this.setState({full_name: val})}} className=\"form-control\" name=\"full_name\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                                <input onChange={e=>{let val = e.target.value; val = val.trim(); if(!val.length){val = false;} this.setState({email: val})}} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputPassword1\">Subject / Requirements</label>\n                                <textarea onChange={e=>{let val = e.target.value; val = val.trim(); if(!val.length){val = false;} this.setState({subject: val})}} className=\"form-control\" name=\"subject\"/>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n                        </form>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(store=>({notification: store.notification, quote: store.quote, app: store.app, data: store.data.data, screenshot: store.data.screenshot}), dispatch => ({dispatch}))(ContactPage);\n","import React, {Component} from 'react';\n\nclass HomePage extends Component{\n    render(){\n        return(\n            <div>Error Page</div>\n        );\n    }\n}\n\nexport default HomePage;\n","// src/history.js\n\nimport createMemoryHistory from 'history/createMemoryHistory';\n\nexport default createMemoryHistory();\n","import React, {Component} from 'react';\n\nimport Layout from './components/Layout';\nimport SimpleLayout from './components/LayoutSimple';\n\nimport SelfService from './components/Pages/SelfService';\nimport QuoteSelection from './components/Pages/QuoteSelection';\nimport ContactPage from './components/Pages/ContactPage';\nimport Page404 from './components/Pages/404';\nimport { MemoryRouter, Route, Switch } from \"react-router-dom\";\nimport history from './history';\n\nexport default class Routes extends Component {\n    render(){\n        return (\n            <MemoryRouter history={history}>\n                <SimpleLayout>\n                    <Switch>\n                        <Route path=\"/\" exact component={QuoteSelection} />\n                        <Route path=\"/self-service\" exact component={SelfService} />\n                        <Route path=\"/contact\" exact component={ContactPage} />\n                        <Route component={Page404} />\n                    </Switch>\n                </SimpleLayout>\n            </MemoryRouter>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport Routes from \"./Routes\";\n\nexport default class main extends Component{\n    render(){\n        return (\n            <Provider store={store}>\n                <Routes />\n            </Provider>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Apps from './Apps';\nimport * as serviceWorker from './serviceWorker';\nimport {is_production} from './Apps/APIS';\n\nlet mode = is_production?'Production':'Development';\nconsole.log('Currently running => '+mode);\nReactDOM.render(<Apps />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}